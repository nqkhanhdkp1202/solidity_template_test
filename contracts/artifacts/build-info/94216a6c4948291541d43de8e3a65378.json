{
	"id": "94216a6c4948291541d43de8e3a65378",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.7.6",
	"solcLongVersion": "0.7.6+commit.7338295f",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/PoddleTokens.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n    /**\n    * @dev Wrappers over Solidity's arithmetic operations with added overflow\n    * checks.\n    *\n    * Arithmetic operations in Solidity wrap on overflow. This can easily result\n    * in bugs, because programmers usually assume that an overflow raises an\n    * error, which is the standard behavior in high level programming languages.\n    * `SafeMath` restores this intuition by reverting the transaction when an\n    * operation overflows.\n    *\n    * Using this library instead of the unchecked operations eliminates an entire\n    * class of bugs, so it's recommended to use it always.\n    */\n\nlibrary SafeMath {\n\n    /**\n    * @dev Returns the addition of two unsigned integers, with an overflow flag.\n    */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256){\n        uint256 c = a + b;\n        if(c < a) return(false, 0);\n        return(true, c);\n    }\n\n    /**\n    * @dev Returns the substraction of two unsigned integers, with an overflow flag.\n    */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool,uint256){\n        if(b > a) return (false, 0);\n        return(true, a - b);\n    }\n\n    /**\n    * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n    */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool,uint256){\n    // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n    // benefit is lost if 'b' is also tested.\n    // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n        if(a == 0) return (true, 0);\n        uint256 c = a * b;\n        if(c / a != b) return (false, 0);\n        return (true, c);\n    }\n\n    /**\n    * @dev Returns the division of two unsigned integers, with a division by zero flag.\n    */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool,uint256){\n        if(b == 0) return (false, 0);\n        return (true, a / b);\n    }\n\n    /**\n    * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n    */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool,uint256){\n        if(b == 0) return (false, 0);\n        return (true, a % b);\n    }\n\n    /**\n    * @dev Returns the addition of two unsigned integers, reverting on\n    * overflow.\n    *\n    * Counterpart to Solidity's `+` operator.\n    *\n    * Requirements:\n    *\n    * - Addition cannot overflow.\n    */\n    function add(uint256 a, uint256 b) internal pure returns (uint256){\n        uint256 c = a +b;\n        require(c >= a + b, \"SafeMath: addition overflow\");\n        return c;\n    }\n\n    /**\n    * @dev Returns the subtraction of two unsigned integers, reverting on\n    * overflow (when the result is negative).\n    *\n    * Counterpart to Solidity's `-` operator.\n    *\n    * Requirements:\n    *\n    * - Subtraction cannot overflow.\n    */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256){\n        require(b <= a, \"SafeMath: subtraction overflow\");\n        return a - b;\n    }\n\n    /**\n    * @dev Returns the multiplication of two unsigned integers, reverting on\n    * overflow.\n    *\n    * Counterpart to Solidity's `*` operator.\n    *\n    * Requirements:\n    *\n    * - Multiplication cannot overflow.\n    */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        if(a == 0) return 0;\n        uint256 c = a * b;\n        require(c / a == b, \"SafeMath: multiplication overflow\"); \n        return c;\n    }\n\n    /**\n    * @dev Returns the integer division of two unsigned integers, reverting on\n    * division by zero. The result is rounded towards zero.\n    *\n    * Counterpart to Solidity's `/` operator. Note: this function uses a\n    * `revert` opcode (which leaves remaining gas untouched) while Solidity\n    * uses an invalid opcode to revert (consuming all remaining gas).\n    *\n    * Requirements:\n    *\n    * - The divisor cannot be zero.\n    */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b > 0, \"SafeMath: division by zero\");\n        return a / b;\n    }\n\n    /**\n    * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n    * reverting when dividing by zero.\n    *\n    * Counterpart to Solidity's `%` operator. This function uses a `revert`\n    * opcode (which leaves remaining gas untouched) while Solidity uses an\n    * invalid opcode to revert (consuming all remaining gas).\n    *\n    * Requirements:\n    *\n    * - The divisor cannot be zero.\n    */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b > 0, \"SafeMath: modulo by zero\");\n        return a % b;\n    }\n\n    /**\n    * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n    * overflow (when the result is negative).\n    *\n    * CAUTION: This function is deprecated because it requires allocating memory for the error\n    * message unnecessarily. For custom revert reasons use {trySub}.\n    *\n    * Counterpart to Solidity's `-` operator.\n    *\n    * Requirements:\n    *\n    * - Subtraction cannot overflow.\n    */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256){\n        require(b <= a, errorMessage);\n        return a - b;\n    }\n\n    /**\n    * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n    * division by zero. The result is rounded towards zero.\n    *\n    * CAUTION: This function is deprecated because it requires allocating memory for the error\n    * message unnecessarily. For custom revert reasons use {tryDiv}.\n    *\n    * Counterpart to Solidity's `/` operator. Note: this function uses a\n    * `revert` opcode (which leaves remaining gas untouched) while Solidity\n    * uses an invalid opcode to revert (consuming all remaining gas).\n    *\n    * Requirements:\n    *\n    * - The divisor cannot be zero.\n    */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b > 0, errorMessage);\n        return a / b;\n    }\n\n    /**\n    * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n    * reverting with custom message when dividing by zero.\n    *\n    * CAUTION: This function is deprecated because it requires allocating memory for the error\n    * message unnecessarily. For custom revert reasons use {tryMod}.\n    *\n    * Counterpart to Solidity's `%` operator. This function uses a `revert`\n    * opcode (which leaves remaining gas untouched) while Solidity uses an\n    * invalid opcode to revert (consuming all remaining gas).\n    *\n    * Requirements:\n    *\n    * - The divisor cannot be zero.\n    */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b > 0, errorMessage);\n        return a % b;\n    }\n}\n\n/**\n* @dev Interface of the ERC20 standard as defined in the EIP.\n*/\ninterface IERC20 {\n    /**\n    * @dev Returns the amount of tokens in existence.\n    */\n    function totalSupply() external view returns (uint256);\n    /**\n    * @dev Returns the amount of tokens owned by `account`.\n    */\n    function balanceOf(address account) external view returns (uint256);\n    /**\n    * @dev Moves `amount` tokens from the caller's account to `recipient`.\n    *\n    * Returns a boolean value indicating whether the operation succeeded.\n    *\n    * Emits a {Transfer} event.\n    */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n    /**\n    * @dev Returns the remaining number of tokens that `spender` will be\n    * allowed to spend on behalf of `owner` through {transferFrom}. This is\n    * zero by default.\n    *\n    * This value changes when {approve} or {transferFrom} are called.\n    */\n    function allowance(address owner, address spender) external view returns (uint256);\n    /**\n    * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n    *\n    * Returns a boolean value indicating whether the operation succeeded.\n    *\n    * IMPORTANT: Beware that changing an allowance with this method brings the risk\n    * that someone may use both the old and the new allowance by unfortunate\n    * transaction ordering. One possible solution to mitigate this race\n    * condition is to first reduce the spender's allowance to 0 and set the\n    * desired value afterwards:\n    * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n    *\n    * Emits an {Approval} event.\n    */\n    function approve(address spender, uint256 amount) external returns (bool);\n    /**\n    * @dev Moves `amount` tokens from `sender` to `recipient` using the\n    * allowance mechanism. `amount` is then deducted from the caller's\n    * allowance.\n    *\n    * Returns a boolean value indicating whether the operation succeeded.\n    *\n    * Emits a {Transfer} event.\n    */\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n    /**\n    * @dev Emitted when `value` tokens are moved from one account (`from`) to\n    * another (`to`).\n    *\n    * Note that `value` may be zero.\n    */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n    /**\n    * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n    * a call to {approve}. `value` is the new allowance.\n    */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n    /*\n    * @dev Provides information about the current execution context, including the\n    * sender of the transaction and its data. While these are generally available\n    * via msg.sender and msg.data, they should not be accessed in such a direct\n    * manner, since when dealing with GSN meta-transactions the account sending and\n    * paying for execution may not be the actual sender (as far as an application\n    * is concerned).\n    *\n    * This contract is only required for intermediate, library-like contracts.\n    */\nabstract contract Context {\n    function _msgSender() internal view returns (address payable) {\n        return msg.sender;\n    }\n    function _msgData() internal view returns (bytes memory) {\n        this; // silence state mutability warning without generating bytecode - see https://github.com/et\n        return msg.data;\n    }\n}\n    /**\n    * @dev Contract module which provides a basic access control mechanism, where\n    * there is an account (an owner) that can be granted exclusive access to\n    * specific functions.\n    *\n    * By default, the owner account will be the one that deploys the contract. This\n    * can later be changed with {transferOwnership}.\n    *\n    * This module is used through inheritance. It will make available the modifier\n    * `onlyOwner`, which can be applied to your functions to restrict their use to\n    * the owner.\n    */\nabstract contract Ownable is Context {\n    address private _owner;\n    address private _newOwner;\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n    /**\n    * @dev Initializes the contract setting the deployer as the initial owner.\n    */\n    constructor () {\n        address msgSender = _msgSender();\n        _owner = msgSender;\n        emit OwnershipTransferred(address(0), msgSender);\n    }\n\n    /**\n    * @dev Returns the address of the current owner.\n    */\n    function owner() public view returns (address) {\n        return _owner;\n    }\n\n    /**\n    * @dev Throws if called by any account other than the owner.\n    */\n    modifier onlyOwner() {\n    require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    _;\n    }\n\n    /**\n    * @dev Accept the ownership transfer. This is to make sure that the contract is\n    * transferred to a working address\n    *\n    * Can only be called by the newly transfered owner.\n    */\n    function acceptOwnership() public {\n        require(_msgSender() == _newOwner, \"Ownable: only new owner can accept ownership\");\n        address oldOwner = _owner;\n        _owner = _newOwner;\n        _newOwner = address(0);\n        emit OwnershipTransferred(oldOwner, _owner);\n    }\n    /**\n    * @dev Transfers ownership of the contract to a new account (`newOwner`).\n    *\n    * Can only be called by the current owner.\n    */\n    function transferOwnership(address newOwner) public onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _newOwner = newOwner;\n    }\n}\n\n/**\n* @dev Implementation of the {IERC20} interface.\n*\n* This implementation is agnostic to the way tokens are created. This means\n* that a supply mechanism has to be added in a derived contract using {_mint}.\n* For a generic mechanism see {ERC20PresetMinterPauser}.\n*\n* TIP: For a detailed writeup see our guide\n* https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n* to implement supply mechanisms].\n*\n* We have followed general OpenZeppelin guidelines: functions revert instead\n* of returning `false` on failure. This behavior is nonetheless conventional\n* and does not conflict with the expectations of ERC20 applications.\n*\n* Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n* This allows applications to reconstruct the allowance for all accounts just\n* by listening to said events. Other implementations of the EIP may not emit\n* these events, as it isn't required by the specification.\n*\n* Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n* functions have been added to mitigate the well-known issues around setting\n* allowances. See {IERC20-approve}.\n*/\ncontract PoddleTokens is Context, Ownable, IERC20 {\n    using SafeMath for uint256;\n\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _maxSupply;\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n    uint8 private _decimals;\n    \n    /**\n    * @dev Sets the values for {name} and {symbol}, initializes {decimals} with\n    * a default value of 18\n    *\n    * To select a different value for {decimals}, use {_setupDecimals}.\n    *\n    * All three of these values are immutable: they can only be set once during\n    * construction.\n    */\n\n    constructor() {\n        uint256 fractions = 10 ** uint256(18);\n        _name = \"Poddle Tokens\";\n        _symbol = \"PDT\";\n        _decimals = 18;\n        _maxSupply = 1000000000 * fractions;\n    }\n\n    /**\n    * @dev Returns the name of the token.\n    */\n    function name() public view returns (string memory) {\n        return _name;\n    }\n\n    /**\n    * @dev Returns the symbol of the token, usually a shorter version of the\n    * name.\n    */\n    function symbol() public view returns (string memory){\n        return _symbol;\n    }\n\n    /**\n    * @dev Returns the number of decimals used to get its user representation.\n    * For example, if `decimals` equals `2`, a balance of `505` tokens should\n    * be displayed to a user as `5,05` (`505 / 10 ** 2`).\n    *\n    * Tokens usually opt for a value of 18, imitating the relationship between\n    * Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is\n    * called.\n    *\n    * NOTE: This information is only used for _display_ purposes: it in\n    * no way affects any of the arithmetic of the contract, including\n    * {IERC20-balanceOf} and {IERC20-transfer}.\n    */\n    function decimals() public view returns (uint8) {\n        return _decimals;\n    }\n\n    /**\n    * @dev See {IERC20-totalSupply}.\n    */\n    function totalSupply() public view override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n    * @dev See {IERC20-balanceOf}.\n    */\n    function balanceOf(address account) public view override returns (uint256){\n        return _balances[account];\n    } \n\n    /**\n    * @dev See {IERC20-transfer}.\n    *\n    * Requirements:\n    *\n    * - `recipient` cannot be the zero address.\n    * - the caller must have a balance of at least `amount`.\n    */\n    function transfer(address recipient, uint256 amount) public override returns (bool){\n        _transfer(_msgSender(), recipient, amount);\n        return true;\n    }\n    \n    /**\n    * @dev See {IERC20-allowance}.\n    */\n    function allowance(address owner, address spender) public view override returns (uint256){\n        return _allowances[owner][spender];\n    }\n\n    /**\n    * @dev See {IERC20-approve}.\n    *\n    * Requirements:\n    *\n    * - `spender` cannot be the zero address.\n    */\n    function approve(address spender, uint256 amount) public override returns (bool) {\n        _approve(_msgSender(),spender, amount);\n        return true;\n    }\n\n    /**\n    * @dev See {IERC20-transferFrom}.\n    *\n    * Emits an {Approval} event indicating the updated allowance. This is not\n    * required by the EIP. See the note at the beginning of {ERC20}.\n    *\n    * Requirements:\n    *\n    * - `sender` and `recipient` cannot be the zero address.\n    * - `sender` must have a balance of at least `amount`.\n    * - the caller must have allowance for ``sender``'s tokens of at least\n    * `amount`.\n    */\n    function transferFrom(address sender, address recipient, uint256 amount) public override returns (bool){\n        _transfer(sender,recipient,amount);\n        _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount,\"ERC20: transfer amount\"));\n        return true;\n    }\n\n    /**\n    * @dev Atomically increases the allowance granted to `spender` by the caller.\n    *\n    * This is an alternative to {approve} that can be used as a mitigation for\n    * problems described in {IERC20-approve}.\n    *\n    * Emits an {Approval} event indicating the updated allowance.\n    *\n    * Requirements:\n    *\n    * - `spender` cannot be the zero address.\n    */\n    function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));\n        return true;\n    }\n\n    /**\n    * @dev Atomically decreases the allowance granted to `spender` by the caller.\n    *\n    * This is an alternative to {approve} that can be used as a mitigation for\n    * problems described in {IERC20-approve}.\n    *\n    * Emits an {Approval} event indicating the updated allowance.\n    *\n    * Requirements:\n    *\n    * - `spender` cannot be the zero address.\n    * - `spender` must have allowance for the caller of at least\n    * `subtractedValue`.\n    */\n    function decreaseAllowance(address spender, uint256 addedValue) public returns (bool) {\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(addedValue,\"ERC20: decrease amount exceeds allowance\"));\n        return true;\n    }\n\n    /**\n    * @dev Issues `amount` tokens to the designated `address`.\n    *\n    * Can only be called by the current owner.\n    * See {ERC20-_mint}.\n    */\n    function mint(address account, uint256 amount) public onlyOwner {\n        _mint(account,amount);\n    }\n\n    /**\n    * @dev Destroys `amount` tokens from the caller.\n    *\n    * See {ERC20-_burn}.\n    */\n    function burn(uint256 amount) public {\n        _burn(_msgSender(),amount);\n    }\n\n    /**\n    * @dev Destroys `amount` tokens from `account`, deducting from the caller's\n    * allowance.\n    *\n    * See {ERC20-_burn} and {ERC20-allowance}.\n    *\n    * Requirements:\n    *\n    * - the caller must have allowance for ``accounts``'s tokens of at least\n    * `amount`.\n    */\n    function burnFrom(address account, uint256 amount) public {\n        uint256 _decreaseAllowance = allowance(account, _msgSender()).sub(amount,\"ERC20: Burn amount excute\");\n\n        _approve(account, _msgSender(), _decreaseAllowance);\n        _burn(account, amount);\n    }\n\n    /**\n    * @dev Moves tokens `amount` from `sender` to `recipient`.\n    *\n    * This is internal function is equivalent to {transfer}, and can be used to\n    * e.g. implement automatic token fees, slashing mechanisms, etc.\n    *\n    * Emits a {Transfer} event.\n    *\n    * Requirements:\n    *\n    * - `sender` cannot be the zero address.\n    * - `recipient` cannot be the zero address.\n    * - `sender` must have a balance of at least `amount`.\n    */\n    function _transfer(address sender, address recipient, uint256 amount) internal{\n        require(sender != address(0), \"ERC20: transfer from zero address\");\n        require(recipient != address(0), \"ERC20: transfer to zero address\");\n\n        _beforeTokenTransfer(sender,recipient,amount);\n\n        _balances[sender] = _balances[sender].sub(amount,\"ERC20: transfer amount exceeds balance\");\n        _balances[recipient] = _balances[recipient].add(amount);\n        emit Transfer(sender,recipient, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n    * the total supply.\n    *\n    * Emits a {Transfer} event with `from` set to the zero address.\n    *\n    * Requirements:\n    *\n    * - `to` cannot be the zero address.\n    */\n    function _mint(address account, uint256 amount) internal {\n        require(account != address(0),\"ERC20: mint to zero address\");\n        require(_totalSupply + amount <= _maxSupply, \"ERC20: mint amount exceeds max supply\");\n\n        _beforeTokenTransfer(address(0),account, amount);\n\n        _totalSupply = _totalSupply.add(amount);\n        _balances[account] = _balances[account].add(amount);\n        emit Transfer(address(0),account,amount);\n    }\n\n    /**\n    * @dev Destroys `amount` tokens from `account`, reducing the\n    * total supply.\n    *\n    * Emits a {Transfer} event with `to` set to the zero address.\n    *\n    * Requirements:\n    *\n    * - `account` cannot be the zero address.\n    * - `account` must have at least `amount` tokens.\n    */\n    function _burn(address account, uint256 amount) internal{\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account,address(0),amount);\n\n        _balances[account] = _balances[account].sub(amount,\"ERC20: burn amount exceeds balance\");\n        _totalSupply = _totalSupply.sub(amount);\n        emit Transfer(account,address(0),amount);\n    }\n    \n    /**\n    * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n    *\n    * This internal function is equivalent to `approve`, and can be used to\n    * e.g. set automatic allowances for certain subsystems, etc.\n    *\n    * Emits an {Approval} event.\n    *\n    * Requirements:\n    *\n    * - `owner` cannot be the zero address.\n    * - `spender` cannot be the zero address.\n    */\n    function _approve(address owner, address spender, uint256 amount) internal {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal {}\n\n    function _afterTokenTransfer(address from, address to, uint256 amount) internal {}\n}\n\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/PoddleTokens.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PoddleTokens.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/PoddleTokens.sol\":{\"keccak256\":\"0x7afb9f33bde73723fb50c6e526ec8aac15666cad53be580208c2295f90c1d6d0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ed8597276cc2b7667251ec434a21f6733ff78b0c0e94913e64ad2bb943331d3\",\"dweb:/ipfs/QmZC9eiMLHupbPDMrWGc5F8VvP7j1GaEZiZovvnwfeumrm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PoddleTokens.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/PoddleTokens.sol\":{\"keccak256\":\"0x7afb9f33bde73723fb50c6e526ec8aac15666cad53be580208c2295f90c1d6d0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ed8597276cc2b7667251ec434a21f6733ff78b0c0e94913e64ad2bb943331d3\",\"dweb:/ipfs/QmZC9eiMLHupbPDMrWGc5F8VvP7j1GaEZiZovvnwfeumrm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "acceptOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"acceptOwnership()": {
								"details": "Accept the ownership transfer. This is to make sure that the contract is transferred to a working address Can only be called by the newly transfered owner."
							},
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"acceptOwnership()": "79ba5097",
							"owner()": "8da5cb5b",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"acceptOwnership()\":{\"details\":\"Accept the ownership transfer. This is to make sure that the contract is transferred to a working address Can only be called by the newly transfered owner.\"},\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PoddleTokens.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/PoddleTokens.sol\":{\"keccak256\":\"0x7afb9f33bde73723fb50c6e526ec8aac15666cad53be580208c2295f90c1d6d0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ed8597276cc2b7667251ec434a21f6733ff78b0c0e94913e64ad2bb943331d3\",\"dweb:/ipfs/QmZC9eiMLHupbPDMrWGc5F8VvP7j1GaEZiZovvnwfeumrm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 458,
								"contract": "contracts/PoddleTokens.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 460,
								"contract": "contracts/PoddleTokens.sol:Ownable",
								"label": "_newOwner",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"PoddleTokens": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "acceptOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin guidelines: functions revert instead of returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
						"kind": "dev",
						"methods": {
							"acceptOwnership()": {
								"details": "Accept the ownership transfer. This is to make sure that the contract is transferred to a working address Can only be called by the newly transfered owner."
							},
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Destroys `amount` tokens from the caller. See {ERC20-_burn}."
							},
							"burnFrom(address,uint256)": {
								"details": "Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}, initializes {decimals} with a default value of 18 To select a different value for {decimals}, use {_setupDecimals}. All three of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"mint(address,uint256)": {
								"details": "Issues `amount` tokens to the designated `address`. Can only be called by the current owner. See {ERC20-_mint}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/PoddleTokens.sol\":13671:23138  contract PoddleTokens is Context, Ownable, IERC20 {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/PoddleTokens.sol\":14349:14544  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/PoddleTokens.sol\":11236:11253  address msgSender */\n  0x00\n    /* \"contracts/PoddleTokens.sol\":11256:11268  _msgSender() */\n  tag_5\n    /* \"contracts/PoddleTokens.sol\":11256:11266  _msgSender */\n  shl(0x20, tag_6)\n    /* \"contracts/PoddleTokens.sol\":11256:11268  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_5:\n    /* \"contracts/PoddleTokens.sol\":11236:11268  address msgSender = _msgSender() */\n  swap1\n  pop\n    /* \"contracts/PoddleTokens.sol\":11287:11296  msgSender */\n  dup1\n    /* \"contracts/PoddleTokens.sol\":11278:11284  _owner */\n  0x00\n  dup1\n    /* \"contracts/PoddleTokens.sol\":11278:11296  _owner = msgSender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/PoddleTokens.sol\":11344:11353  msgSender */\n  dup1\n    /* \"contracts/PoddleTokens.sol\":11311:11354  OwnershipTransferred(address(0), msgSender) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/PoddleTokens.sol\":11340:11341  0 */\n  0x00\n    /* \"contracts/PoddleTokens.sol\":11311:11354  OwnershipTransferred(address(0), msgSender) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"contracts/PoddleTokens.sol\":11211:11361  constructor () {... */\n  pop\n    /* \"contracts/PoddleTokens.sol\":14373:14390  uint256 fractions */\n  0x00\n    /* \"contracts/PoddleTokens.sol\":14407:14409  18 */\n  0x12\n    /* \"contracts/PoddleTokens.sol\":14393:14395  10 */\n  0x0a\n    /* \"contracts/PoddleTokens.sol\":14393:14410  10 ** uint256(18) */\n  exp\n    /* \"contracts/PoddleTokens.sol\":14373:14410  uint256 fractions = 10 ** uint256(18) */\n  swap1\n  pop\n    /* \"contracts/PoddleTokens.sol\":14420:14443  _name = \"Poddle Tokens\" */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0d\n  dup2\n  mstore\n  0x20\n  add\n  0x506f64646c6520546f6b656e7300000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"contracts/PoddleTokens.sol\":14420:14425  _name */\n  0x06\n    /* \"contracts/PoddleTokens.sol\":14420:14443  _name = \"Poddle Tokens\" */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_8\n  swap3\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  pop\n    /* \"contracts/PoddleTokens.sol\":14453:14468  _symbol = \"PDT\" */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  0x5044540000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"contracts/PoddleTokens.sol\":14453:14460  _symbol */\n  0x07\n    /* \"contracts/PoddleTokens.sol\":14453:14468  _symbol = \"PDT\" */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_10\n  swap3\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_10:\n  pop\n    /* \"contracts/PoddleTokens.sol\":14490:14492  18 */\n  0x12\n    /* \"contracts/PoddleTokens.sol\":14478:14487  _decimals */\n  0x08\n  0x00\n    /* \"contracts/PoddleTokens.sol\":14478:14492  _decimals = 18 */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/PoddleTokens.sol\":14528:14537  fractions */\n  dup1\n    /* \"contracts/PoddleTokens.sol\":14515:14525  1000000000 */\n  0x3b9aca00\n    /* \"contracts/PoddleTokens.sol\":14515:14537  1000000000 * fractions */\n  mul\n    /* \"contracts/PoddleTokens.sol\":14502:14512  _maxSupply */\n  0x04\n    /* \"contracts/PoddleTokens.sol\":14502:14537  _maxSupply = 1000000000 * fractions */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/PoddleTokens.sol\":14349:14544  constructor() {... */\n  pop\n    /* \"contracts/PoddleTokens.sol\":13671:23138  contract PoddleTokens is Context, Ownable, IERC20 {... */\n  jump(tag_11)\n    /* \"contracts/PoddleTokens.sol\":10095:10191  function _msgSender() internal view returns (address payable) {... */\ntag_6:\n    /* \"contracts/PoddleTokens.sol\":10140:10155  address payable */\n  0x00\n    /* \"contracts/PoddleTokens.sol\":10174:10184  msg.sender */\n  caller\n    /* \"contracts/PoddleTokens.sol\":10167:10184  return msg.sender */\n  swap1\n  pop\n    /* \"contracts/PoddleTokens.sol\":10095:10191  function _msgSender() internal view returns (address payable) {... */\n  swap1\n  jump\t// out\n    /* \"contracts/PoddleTokens.sol\":13671:23138  contract PoddleTokens is Context, Ownable, IERC20 {... */\ntag_9:\n  dup3\n  dup1\n  sload\n  0x01\n  dup2\n  0x01\n  and\n  iszero\n  0x0100\n  mul\n  sub\n  and\n  0x02\n  swap1\n  div\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_14\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_13)\ntag_14:\n  dup3\n  0x1f\n  lt\n  tag_15\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_13)\ntag_15:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_13\n  jumpi\n  swap2\n  dup3\n  add\ntag_16:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_17\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_16)\ntag_17:\ntag_13:\n  pop\n  swap1\n  pop\n  tag_18\n  swap2\n  swap1\n  tag_19\n  jump\t// in\ntag_18:\n  pop\n  swap1\n  jump\t// out\ntag_19:\ntag_20:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_21\n  jumpi\n  0x00\n  dup2\n  0x00\n  swap1\n  sstore\n  pop\n  0x01\n  add\n  jump(tag_20)\ntag_21:\n  pop\n  swap1\n  jump\t// out\ntag_11:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/PoddleTokens.sol\":13671:23138  contract PoddleTokens is Context, Ownable, IERC20 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_20\n      jumpi\n      dup1\n      0x95d89b41\n      gt\n      tag_21\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_19\n      jumpi\n      jump(tag_2)\n    tag_21:\n      dup1\n      0x70a08231\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x79ba5097\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x79cc6790\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_20:\n      dup1\n      0x313ce567\n      gt\n      tag_22\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x42966c68\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_22:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/PoddleTokens.sol\":14607:14688  function name() public view returns (string memory) {... */\n    tag_3:\n      tag_23\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_25:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_27\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_25)\n    tag_27:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_28\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_28:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/PoddleTokens.sol\":16594:16751  function approve(address spender, uint256 amount) public override returns (bool) {... */\n    tag_4:\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_30\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_30:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_31\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/PoddleTokens.sol\":15632:15730  function totalSupply() public view override returns (uint256) {... */\n    tag_5:\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/PoddleTokens.sol\":17206:17493  function transferFrom(address sender, address recipient, uint256 amount) public override returns (bool){... */\n    tag_6:\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x60\n      dup2\n      lt\n      iszero\n      tag_35\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_36\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/PoddleTokens.sol\":15493:15574  function decimals() public view returns (uint8) {... */\n    tag_7:\n      tag_37\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      dup3\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/PoddleTokens.sol\":17877:18084  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {... */\n    tag_8:\n      tag_39\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_40\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_40:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_41\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/PoddleTokens.sol\":18970:19072  function mint(address account, uint256 amount) public onlyOwner {... */\n    tag_9:\n      tag_42\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_43\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_43:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_44\n      jump\t// in\n    tag_42:\n      stop\n        /* \"contracts/PoddleTokens.sol\":19177:19257  function burn(uint256 amount) public {... */\n    tag_10:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_46\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_46:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_47\n      jump\t// in\n    tag_45:\n      stop\n        /* \"contracts/PoddleTokens.sol\":15786:15902  function balanceOf(address account) public view override returns (uint256){... */\n    tag_11:\n      tag_48\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_49\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_49:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_50\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/PoddleTokens.sol\":11913:12194  function acceptOwnership() public {... */\n    tag_12:\n      tag_51\n      tag_52\n      jump\t// in\n    tag_51:\n      stop\n        /* \"contracts/PoddleTokens.sol\":19553:19823  function burnFrom(address account, uint256 amount) public {... */\n    tag_13:\n      tag_53\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_54\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_54:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_55\n      jump\t// in\n    tag_53:\n      stop\n        /* \"contracts/PoddleTokens.sol\":11435:11512  function owner() public view returns (address) {... */\n    tag_14:\n      tag_56\n      tag_57\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/PoddleTokens.sol\":14798:14882  function symbol() public view returns (string memory){... */\n    tag_15:\n      tag_58\n      tag_59\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_60:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_62\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_60)\n    tag_62:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_63\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_63:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/PoddleTokens.sol\":18558:18808  function decreaseAllowance(address spender, uint256 addedValue) public returns (bool) {... */\n    tag_16:\n      tag_64\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_65\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_65:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_66\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/PoddleTokens.sol\":16099:16262  function transfer(address recipient, uint256 amount) public override returns (bool){... */\n    tag_17:\n      tag_67\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_68\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_68:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_69\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/PoddleTokens.sol\":16322:16462  function allowance(address owner, address spender) public view override returns (uint256){... */\n    tag_18:\n      tag_70\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_71\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_71:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_72\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/PoddleTokens.sol\":12345:12527  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_19:\n      tag_73\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_74\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_74:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_75\n      jump\t// in\n    tag_73:\n      stop\n        /* \"contracts/PoddleTokens.sol\":14607:14688  function name() public view returns (string memory) {... */\n    tag_24:\n        /* \"contracts/PoddleTokens.sol\":14644:14657  string memory */\n      0x60\n        /* \"contracts/PoddleTokens.sol\":14676:14681  _name */\n      0x06\n        /* \"contracts/PoddleTokens.sol\":14669:14681  return _name */\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_77\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_78\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_77)\n    tag_78:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_79:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_79\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_77:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/PoddleTokens.sol\":14607:14688  function name() public view returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/PoddleTokens.sol\":16594:16751  function approve(address spender, uint256 amount) public override returns (bool) {... */\n    tag_31:\n        /* \"contracts/PoddleTokens.sol\":16669:16673  bool */\n      0x00\n        /* \"contracts/PoddleTokens.sol\":16685:16723  _approve(_msgSender(),spender, amount) */\n      tag_81\n        /* \"contracts/PoddleTokens.sol\":16694:16706  _msgSender() */\n      tag_82\n        /* \"contracts/PoddleTokens.sol\":16694:16704  _msgSender */\n      tag_83\n        /* \"contracts/PoddleTokens.sol\":16694:16706  _msgSender() */\n      jump\t// in\n    tag_82:\n        /* \"contracts/PoddleTokens.sol\":16707:16714  spender */\n      dup5\n        /* \"contracts/PoddleTokens.sol\":16716:16722  amount */\n      dup5\n        /* \"contracts/PoddleTokens.sol\":16685:16693  _approve */\n      tag_84\n        /* \"contracts/PoddleTokens.sol\":16685:16723  _approve(_msgSender(),spender, amount) */\n      jump\t// in\n    tag_81:\n        /* \"contracts/PoddleTokens.sol\":16740:16744  true */\n      0x01\n        /* \"contracts/PoddleTokens.sol\":16733:16744  return true */\n      swap1\n      pop\n        /* \"contracts/PoddleTokens.sol\":16594:16751  function approve(address spender, uint256 amount) public override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/PoddleTokens.sol\":15632:15730  function totalSupply() public view override returns (uint256) {... */\n    tag_33:\n        /* \"contracts/PoddleTokens.sol\":15685:15692  uint256 */\n      0x00\n        /* \"contracts/PoddleTokens.sol\":15711:15723  _totalSupply */\n      sload(0x05)\n        /* \"contracts/PoddleTokens.sol\":15704:15723  return _totalSupply */\n      swap1\n      pop\n        /* \"contracts/PoddleTokens.sol\":15632:15730  function totalSupply() public view override returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/PoddleTokens.sol\":17206:17493  function transferFrom(address sender, address recipient, uint256 amount) public override returns (bool){... */\n    tag_36:\n        /* \"contracts/PoddleTokens.sol\":17304:17308  bool */\n      0x00\n        /* \"contracts/PoddleTokens.sol\":17319:17353  _transfer(sender,recipient,amount) */\n      tag_87\n        /* \"contracts/PoddleTokens.sol\":17329:17335  sender */\n      dup5\n        /* \"contracts/PoddleTokens.sol\":17336:17345  recipient */\n      dup5\n        /* \"contracts/PoddleTokens.sol\":17346:17352  amount */\n      dup5\n        /* \"contracts/PoddleTokens.sol\":17319:17328  _transfer */\n      tag_88\n        /* \"contracts/PoddleTokens.sol\":17319:17353  _transfer(sender,recipient,amount) */\n      jump\t// in\n    tag_87:\n        /* \"contracts/PoddleTokens.sol\":17363:17465  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount,\"ERC20: transfer amount\")) */\n      tag_89\n        /* \"contracts/PoddleTokens.sol\":17372:17378  sender */\n      dup5\n        /* \"contracts/PoddleTokens.sol\":17380:17392  _msgSender() */\n      tag_90\n        /* \"contracts/PoddleTokens.sol\":17380:17390  _msgSender */\n      tag_83\n        /* \"contracts/PoddleTokens.sol\":17380:17392  _msgSender() */\n      jump\t// in\n    tag_90:\n        /* \"contracts/PoddleTokens.sol\":17394:17464  _allowances[sender][_msgSender()].sub(amount,\"ERC20: transfer amount\") */\n      tag_91\n        /* \"contracts/PoddleTokens.sol\":17432:17438  amount */\n      dup6\n        /* \"contracts/PoddleTokens.sol\":17394:17464  _allowances[sender][_msgSender()].sub(amount,\"ERC20: transfer amount\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x16\n      dup2\n      mstore\n      0x20\n      add\n      0x45524332303a207472616e7366657220616d6f756e7400000000000000000000\n      dup2\n      mstore\n      pop\n        /* \"contracts/PoddleTokens.sol\":17394:17405  _allowances */\n      0x03\n        /* \"contracts/PoddleTokens.sol\":17394:17413  _allowances[sender] */\n      0x00\n        /* \"contracts/PoddleTokens.sol\":17406:17412  sender */\n      dup12\n        /* \"contracts/PoddleTokens.sol\":17394:17413  _allowances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/PoddleTokens.sol\":17394:17427  _allowances[sender][_msgSender()] */\n      0x00\n        /* \"contracts/PoddleTokens.sol\":17414:17426  _msgSender() */\n      tag_92\n        /* \"contracts/PoddleTokens.sol\":17414:17424  _msgSender */\n      tag_83\n        /* \"contracts/PoddleTokens.sol\":17414:17426  _msgSender() */\n      jump\t// in\n    tag_92:\n        /* \"contracts/PoddleTokens.sol\":17394:17427  _allowances[sender][_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/PoddleTokens.sol\":17394:17431  _allowances[sender][_msgSender()].sub */\n      tag_93\n      swap1\n        /* \"contracts/PoddleTokens.sol\":17394:17464  _allowances[sender][_msgSender()].sub(amount,\"ERC20: transfer amount\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_91:\n        /* \"contracts/PoddleTokens.sol\":17363:17371  _approve */\n      tag_84\n        /* \"contracts/PoddleTokens.sol\":17363:17465  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount,\"ERC20: transfer amount\")) */\n      jump\t// in\n    tag_89:\n        /* \"contracts/PoddleTokens.sol\":17482:17486  true */\n      0x01\n        /* \"contracts/PoddleTokens.sol\":17475:17486  return true */\n      swap1\n      pop\n        /* \"contracts/PoddleTokens.sol\":17206:17493  function transferFrom(address sender, address recipient, uint256 amount) public override returns (bool){... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/PoddleTokens.sol\":15493:15574  function decimals() public view returns (uint8) {... */\n    tag_38:\n        /* \"contracts/PoddleTokens.sol\":15534:15539  uint8 */\n      0x00\n        /* \"contracts/PoddleTokens.sol\":15558:15567  _decimals */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/PoddleTokens.sol\":15551:15567  return _decimals */\n      swap1\n      pop\n        /* \"contracts/PoddleTokens.sol\":15493:15574  function decimals() public view returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/PoddleTokens.sol\":17877:18084  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {... */\n    tag_41:\n        /* \"contracts/PoddleTokens.sol\":17957:17961  bool */\n      0x00\n        /* \"contracts/PoddleTokens.sol\":17973:18056  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue)) */\n      tag_96\n        /* \"contracts/PoddleTokens.sol\":17982:17994  _msgSender() */\n      tag_97\n        /* \"contracts/PoddleTokens.sol\":17982:17992  _msgSender */\n      tag_83\n        /* \"contracts/PoddleTokens.sol\":17982:17994  _msgSender() */\n      jump\t// in\n    tag_97:\n        /* \"contracts/PoddleTokens.sol\":17996:18003  spender */\n      dup5\n        /* \"contracts/PoddleTokens.sol\":18005:18055  _allowances[_msgSender()][spender].add(addedValue) */\n      tag_98\n        /* \"contracts/PoddleTokens.sol\":18044:18054  addedValue */\n      dup6\n        /* \"contracts/PoddleTokens.sol\":18005:18016  _allowances */\n      0x03\n        /* \"contracts/PoddleTokens.sol\":18005:18030  _allowances[_msgSender()] */\n      0x00\n        /* \"contracts/PoddleTokens.sol\":18017:18029  _msgSender() */\n      tag_99\n        /* \"contracts/PoddleTokens.sol\":18017:18027  _msgSender */\n      tag_83\n        /* \"contracts/PoddleTokens.sol\":18017:18029  _msgSender() */\n      jump\t// in\n    tag_99:\n        /* \"contracts/PoddleTokens.sol\":18005:18030  _allowances[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/PoddleTokens.sol\":18005:18039  _allowances[_msgSender()][spender] */\n      0x00\n        /* \"contracts/PoddleTokens.sol\":18031:18038  spender */\n      dup10\n        /* \"contracts/PoddleTokens.sol\":18005:18039  _allowances[_msgSender()][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/PoddleTokens.sol\":18005:18043  _allowances[_msgSender()][spender].add */\n      tag_100\n      swap1\n        /* \"contracts/PoddleTokens.sol\":18005:18055  _allowances[_msgSender()][spender].add(addedValue) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_98:\n        /* \"contracts/PoddleTokens.sol\":17973:17981  _approve */\n      tag_84\n        /* \"contracts/PoddleTokens.sol\":17973:18056  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue)) */\n      jump\t// in\n    tag_96:\n        /* \"contracts/PoddleTokens.sol\":18073:18077  true */\n      0x01\n        /* \"contracts/PoddleTokens.sol\":18066:18077  return true */\n      swap1\n      pop\n        /* \"contracts/PoddleTokens.sol\":17877:18084  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/PoddleTokens.sol\":18970:19072  function mint(address account, uint256 amount) public onlyOwner {... */\n    tag_44:\n        /* \"contracts/PoddleTokens.sol\":11644:11656  _msgSender() */\n      tag_102\n        /* \"contracts/PoddleTokens.sol\":11644:11654  _msgSender */\n      tag_83\n        /* \"contracts/PoddleTokens.sol\":11644:11656  _msgSender() */\n      jump\t// in\n    tag_102:\n        /* \"contracts/PoddleTokens.sol\":11633:11656  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/PoddleTokens.sol\":11633:11640  owner() */\n      tag_103\n        /* \"contracts/PoddleTokens.sol\":11633:11638  owner */\n      tag_57\n        /* \"contracts/PoddleTokens.sol\":11633:11640  owner() */\n      jump\t// in\n    tag_103:\n        /* \"contracts/PoddleTokens.sol\":11633:11656  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/PoddleTokens.sol\":11625:11693  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_104\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_104:\n        /* \"contracts/PoddleTokens.sol\":19044:19065  _mint(account,amount) */\n      tag_106\n        /* \"contracts/PoddleTokens.sol\":19050:19057  account */\n      dup3\n        /* \"contracts/PoddleTokens.sol\":19058:19064  amount */\n      dup3\n        /* \"contracts/PoddleTokens.sol\":19044:19049  _mint */\n      tag_107\n        /* \"contracts/PoddleTokens.sol\":19044:19065  _mint(account,amount) */\n      jump\t// in\n    tag_106:\n        /* \"contracts/PoddleTokens.sol\":18970:19072  function mint(address account, uint256 amount) public onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/PoddleTokens.sol\":19177:19257  function burn(uint256 amount) public {... */\n    tag_47:\n        /* \"contracts/PoddleTokens.sol\":19224:19250  _burn(_msgSender(),amount) */\n      tag_109\n        /* \"contracts/PoddleTokens.sol\":19230:19242  _msgSender() */\n      tag_110\n        /* \"contracts/PoddleTokens.sol\":19230:19240  _msgSender */\n      tag_83\n        /* \"contracts/PoddleTokens.sol\":19230:19242  _msgSender() */\n      jump\t// in\n    tag_110:\n        /* \"contracts/PoddleTokens.sol\":19243:19249  amount */\n      dup3\n        /* \"contracts/PoddleTokens.sol\":19224:19229  _burn */\n      tag_111\n        /* \"contracts/PoddleTokens.sol\":19224:19250  _burn(_msgSender(),amount) */\n      jump\t// in\n    tag_109:\n        /* \"contracts/PoddleTokens.sol\":19177:19257  function burn(uint256 amount) public {... */\n      pop\n      jump\t// out\n        /* \"contracts/PoddleTokens.sol\":15786:15902  function balanceOf(address account) public view override returns (uint256){... */\n    tag_50:\n        /* \"contracts/PoddleTokens.sol\":15852:15859  uint256 */\n      0x00\n        /* \"contracts/PoddleTokens.sol\":15877:15886  _balances */\n      0x02\n        /* \"contracts/PoddleTokens.sol\":15877:15895  _balances[account] */\n      0x00\n        /* \"contracts/PoddleTokens.sol\":15887:15894  account */\n      dup4\n        /* \"contracts/PoddleTokens.sol\":15877:15895  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/PoddleTokens.sol\":15870:15895  return _balances[account] */\n      swap1\n      pop\n        /* \"contracts/PoddleTokens.sol\":15786:15902  function balanceOf(address account) public view override returns (uint256){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/PoddleTokens.sol\":11913:12194  function acceptOwnership() public {... */\n    tag_52:\n        /* \"contracts/PoddleTokens.sol\":11981:11990  _newOwner */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/PoddleTokens.sol\":11965:11990  _msgSender() == _newOwner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/PoddleTokens.sol\":11965:11977  _msgSender() */\n      tag_114\n        /* \"contracts/PoddleTokens.sol\":11965:11975  _msgSender */\n      tag_83\n        /* \"contracts/PoddleTokens.sol\":11965:11977  _msgSender() */\n      jump\t// in\n    tag_114:\n        /* \"contracts/PoddleTokens.sol\":11965:11990  _msgSender() == _newOwner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/PoddleTokens.sol\":11957:12039  require(_msgSender() == _newOwner, \"Ownable: only new owner can accept ownership\") */\n      tag_115\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x2c\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_f7737555abf4f07fa9a8e7458b0ba564ac4d7d05336cdbec0c72ad29c2541514\n      0x2c\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_115:\n        /* \"contracts/PoddleTokens.sol\":12049:12065  address oldOwner */\n      0x00\n        /* \"contracts/PoddleTokens.sol\":12068:12074  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/PoddleTokens.sol\":12049:12074  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"contracts/PoddleTokens.sol\":12093:12102  _newOwner */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/PoddleTokens.sol\":12084:12090  _owner */\n      0x00\n      dup1\n        /* \"contracts/PoddleTokens.sol\":12084:12102  _owner = _newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/PoddleTokens.sol\":12132:12133  0 */\n      0x00\n        /* \"contracts/PoddleTokens.sol\":12112:12121  _newOwner */\n      0x01\n      0x00\n        /* \"contracts/PoddleTokens.sol\":12112:12134  _newOwner = address(0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/PoddleTokens.sol\":12180:12186  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/PoddleTokens.sol\":12149:12187  OwnershipTransferred(oldOwner, _owner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/PoddleTokens.sol\":12170:12178  oldOwner */\n      dup2\n        /* \"contracts/PoddleTokens.sol\":12149:12187  OwnershipTransferred(oldOwner, _owner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/PoddleTokens.sol\":11913:12194  function acceptOwnership() public {... */\n      pop\n      jump\t// out\n        /* \"contracts/PoddleTokens.sol\":19553:19823  function burnFrom(address account, uint256 amount) public {... */\n    tag_55:\n        /* \"contracts/PoddleTokens.sol\":19621:19647  uint256 _decreaseAllowance */\n      0x00\n        /* \"contracts/PoddleTokens.sol\":19650:19722  allowance(account, _msgSender()).sub(amount,\"ERC20: Burn amount excute\") */\n      tag_117\n        /* \"contracts/PoddleTokens.sol\":19687:19693  amount */\n      dup3\n        /* \"contracts/PoddleTokens.sol\":19650:19722  allowance(account, _msgSender()).sub(amount,\"ERC20: Burn amount excute\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x19\n      dup2\n      mstore\n      0x20\n      add\n      0x45524332303a204275726e20616d6f756e742065786375746500000000000000\n      dup2\n      mstore\n      pop\n        /* \"contracts/PoddleTokens.sol\":19650:19682  allowance(account, _msgSender()) */\n      tag_118\n        /* \"contracts/PoddleTokens.sol\":19660:19667  account */\n      dup7\n        /* \"contracts/PoddleTokens.sol\":19669:19681  _msgSender() */\n      tag_119\n        /* \"contracts/PoddleTokens.sol\":19669:19679  _msgSender */\n      tag_83\n        /* \"contracts/PoddleTokens.sol\":19669:19681  _msgSender() */\n      jump\t// in\n    tag_119:\n        /* \"contracts/PoddleTokens.sol\":19650:19659  allowance */\n      tag_72\n        /* \"contracts/PoddleTokens.sol\":19650:19682  allowance(account, _msgSender()) */\n      jump\t// in\n    tag_118:\n        /* \"contracts/PoddleTokens.sol\":19650:19686  allowance(account, _msgSender()).sub */\n      tag_93\n      swap1\n        /* \"contracts/PoddleTokens.sol\":19650:19722  allowance(account, _msgSender()).sub(amount,\"ERC20: Burn amount excute\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_117:\n        /* \"contracts/PoddleTokens.sol\":19621:19722  uint256 _decreaseAllowance = allowance(account, _msgSender()).sub(amount,\"ERC20: Burn amount excute\") */\n      swap1\n      pop\n        /* \"contracts/PoddleTokens.sol\":19733:19784  _approve(account, _msgSender(), _decreaseAllowance) */\n      tag_120\n        /* \"contracts/PoddleTokens.sol\":19742:19749  account */\n      dup4\n        /* \"contracts/PoddleTokens.sol\":19751:19763  _msgSender() */\n      tag_121\n        /* \"contracts/PoddleTokens.sol\":19751:19761  _msgSender */\n      tag_83\n        /* \"contracts/PoddleTokens.sol\":19751:19763  _msgSender() */\n      jump\t// in\n    tag_121:\n        /* \"contracts/PoddleTokens.sol\":19765:19783  _decreaseAllowance */\n      dup4\n        /* \"contracts/PoddleTokens.sol\":19733:19741  _approve */\n      tag_84\n        /* \"contracts/PoddleTokens.sol\":19733:19784  _approve(account, _msgSender(), _decreaseAllowance) */\n      jump\t// in\n    tag_120:\n        /* \"contracts/PoddleTokens.sol\":19794:19816  _burn(account, amount) */\n      tag_122\n        /* \"contracts/PoddleTokens.sol\":19800:19807  account */\n      dup4\n        /* \"contracts/PoddleTokens.sol\":19809:19815  amount */\n      dup4\n        /* \"contracts/PoddleTokens.sol\":19794:19799  _burn */\n      tag_111\n        /* \"contracts/PoddleTokens.sol\":19794:19816  _burn(account, amount) */\n      jump\t// in\n    tag_122:\n        /* \"contracts/PoddleTokens.sol\":19553:19823  function burnFrom(address account, uint256 amount) public {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/PoddleTokens.sol\":11435:11512  function owner() public view returns (address) {... */\n    tag_57:\n        /* \"contracts/PoddleTokens.sol\":11473:11480  address */\n      0x00\n        /* \"contracts/PoddleTokens.sol\":11499:11505  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/PoddleTokens.sol\":11492:11505  return _owner */\n      swap1\n      pop\n        /* \"contracts/PoddleTokens.sol\":11435:11512  function owner() public view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/PoddleTokens.sol\":14798:14882  function symbol() public view returns (string memory){... */\n    tag_59:\n        /* \"contracts/PoddleTokens.sol\":14837:14850  string memory */\n      0x60\n        /* \"contracts/PoddleTokens.sol\":14868:14875  _symbol */\n      0x07\n        /* \"contracts/PoddleTokens.sol\":14861:14875  return _symbol */\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_125\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_126\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_125)\n    tag_126:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_127:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_127\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_125:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/PoddleTokens.sol\":14798:14882  function symbol() public view returns (string memory){... */\n      swap1\n      jump\t// out\n        /* \"contracts/PoddleTokens.sol\":18558:18808  function decreaseAllowance(address spender, uint256 addedValue) public returns (bool) {... */\n    tag_66:\n        /* \"contracts/PoddleTokens.sol\":18638:18642  bool */\n      0x00\n        /* \"contracts/PoddleTokens.sol\":18654:18780  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(addedValue,\"ERC20: decrease amount exceeds allowance\")) */\n      tag_129\n        /* \"contracts/PoddleTokens.sol\":18663:18675  _msgSender() */\n      tag_130\n        /* \"contracts/PoddleTokens.sol\":18663:18673  _msgSender */\n      tag_83\n        /* \"contracts/PoddleTokens.sol\":18663:18675  _msgSender() */\n      jump\t// in\n    tag_130:\n        /* \"contracts/PoddleTokens.sol\":18677:18684  spender */\n      dup5\n        /* \"contracts/PoddleTokens.sol\":18686:18779  _allowances[_msgSender()][spender].sub(addedValue,\"ERC20: decrease amount exceeds allowance\") */\n      tag_131\n        /* \"contracts/PoddleTokens.sol\":18725:18735  addedValue */\n      dup6\n        /* \"contracts/PoddleTokens.sol\":18686:18779  _allowances[_msgSender()][spender].sub(addedValue,\"ERC20: decrease amount exceeds allowance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x28\n      dup2\n      mstore\n      0x20\n      add\n      data_76ef47d3cac10bdd88984936fbabf838a95158c824f2256c2b05b83385232484\n      0x28\n      swap2\n      codecopy\n        /* \"contracts/PoddleTokens.sol\":18686:18697  _allowances */\n      0x03\n        /* \"contracts/PoddleTokens.sol\":18686:18711  _allowances[_msgSender()] */\n      0x00\n        /* \"contracts/PoddleTokens.sol\":18698:18710  _msgSender() */\n      tag_132\n        /* \"contracts/PoddleTokens.sol\":18698:18708  _msgSender */\n      tag_83\n        /* \"contracts/PoddleTokens.sol\":18698:18710  _msgSender() */\n      jump\t// in\n    tag_132:\n        /* \"contracts/PoddleTokens.sol\":18686:18711  _allowances[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/PoddleTokens.sol\":18686:18720  _allowances[_msgSender()][spender] */\n      0x00\n        /* \"contracts/PoddleTokens.sol\":18712:18719  spender */\n      dup11\n        /* \"contracts/PoddleTokens.sol\":18686:18720  _allowances[_msgSender()][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/PoddleTokens.sol\":18686:18724  _allowances[_msgSender()][spender].sub */\n      tag_93\n      swap1\n        /* \"contracts/PoddleTokens.sol\":18686:18779  _allowances[_msgSender()][spender].sub(addedValue,\"ERC20: decrease amount exceeds allowance\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_131:\n        /* \"contracts/PoddleTokens.sol\":18654:18662  _approve */\n      tag_84\n        /* \"contracts/PoddleTokens.sol\":18654:18780  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(addedValue,\"ERC20: decrease amount exceeds allowance\")) */\n      jump\t// in\n    tag_129:\n        /* \"contracts/PoddleTokens.sol\":18797:18801  true */\n      0x01\n        /* \"contracts/PoddleTokens.sol\":18790:18801  return true */\n      swap1\n      pop\n        /* \"contracts/PoddleTokens.sol\":18558:18808  function decreaseAllowance(address spender, uint256 addedValue) public returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/PoddleTokens.sol\":16099:16262  function transfer(address recipient, uint256 amount) public override returns (bool){... */\n    tag_69:\n        /* \"contracts/PoddleTokens.sol\":16177:16181  bool */\n      0x00\n        /* \"contracts/PoddleTokens.sol\":16192:16234  _transfer(_msgSender(), recipient, amount) */\n      tag_134\n        /* \"contracts/PoddleTokens.sol\":16202:16214  _msgSender() */\n      tag_135\n        /* \"contracts/PoddleTokens.sol\":16202:16212  _msgSender */\n      tag_83\n        /* \"contracts/PoddleTokens.sol\":16202:16214  _msgSender() */\n      jump\t// in\n    tag_135:\n        /* \"contracts/PoddleTokens.sol\":16216:16225  recipient */\n      dup5\n        /* \"contracts/PoddleTokens.sol\":16227:16233  amount */\n      dup5\n        /* \"contracts/PoddleTokens.sol\":16192:16201  _transfer */\n      tag_88\n        /* \"contracts/PoddleTokens.sol\":16192:16234  _transfer(_msgSender(), recipient, amount) */\n      jump\t// in\n    tag_134:\n        /* \"contracts/PoddleTokens.sol\":16251:16255  true */\n      0x01\n        /* \"contracts/PoddleTokens.sol\":16244:16255  return true */\n      swap1\n      pop\n        /* \"contracts/PoddleTokens.sol\":16099:16262  function transfer(address recipient, uint256 amount) public override returns (bool){... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/PoddleTokens.sol\":16322:16462  function allowance(address owner, address spender) public view override returns (uint256){... */\n    tag_72:\n        /* \"contracts/PoddleTokens.sol\":16403:16410  uint256 */\n      0x00\n        /* \"contracts/PoddleTokens.sol\":16428:16439  _allowances */\n      0x03\n        /* \"contracts/PoddleTokens.sol\":16428:16446  _allowances[owner] */\n      0x00\n        /* \"contracts/PoddleTokens.sol\":16440:16445  owner */\n      dup5\n        /* \"contracts/PoddleTokens.sol\":16428:16446  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/PoddleTokens.sol\":16428:16455  _allowances[owner][spender] */\n      0x00\n        /* \"contracts/PoddleTokens.sol\":16447:16454  spender */\n      dup4\n        /* \"contracts/PoddleTokens.sol\":16428:16455  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/PoddleTokens.sol\":16421:16455  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"contracts/PoddleTokens.sol\":16322:16462  function allowance(address owner, address spender) public view override returns (uint256){... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/PoddleTokens.sol\":12345:12527  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_75:\n        /* \"contracts/PoddleTokens.sol\":11644:11656  _msgSender() */\n      tag_138\n        /* \"contracts/PoddleTokens.sol\":11644:11654  _msgSender */\n      tag_83\n        /* \"contracts/PoddleTokens.sol\":11644:11656  _msgSender() */\n      jump\t// in\n    tag_138:\n        /* \"contracts/PoddleTokens.sol\":11633:11656  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/PoddleTokens.sol\":11633:11640  owner() */\n      tag_139\n        /* \"contracts/PoddleTokens.sol\":11633:11638  owner */\n      tag_57\n        /* \"contracts/PoddleTokens.sol\":11633:11640  owner() */\n      jump\t// in\n    tag_139:\n        /* \"contracts/PoddleTokens.sol\":11633:11656  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/PoddleTokens.sol\":11625:11693  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_140\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_140:\n        /* \"contracts/PoddleTokens.sol\":12445:12446  0 */\n      0x00\n        /* \"contracts/PoddleTokens.sol\":12425:12447  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/PoddleTokens.sol\":12425:12433  newOwner */\n      dup2\n        /* \"contracts/PoddleTokens.sol\":12425:12447  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/PoddleTokens.sol\":12417:12490  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_142\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_142:\n        /* \"contracts/PoddleTokens.sol\":12512:12520  newOwner */\n      dup1\n        /* \"contracts/PoddleTokens.sol\":12500:12509  _newOwner */\n      0x01\n      0x00\n        /* \"contracts/PoddleTokens.sol\":12500:12520  _newOwner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/PoddleTokens.sol\":12345:12527  function transferOwnership(address newOwner) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/PoddleTokens.sol\":10095:10191  function _msgSender() internal view returns (address payable) {... */\n    tag_83:\n        /* \"contracts/PoddleTokens.sol\":10140:10155  address payable */\n      0x00\n        /* \"contracts/PoddleTokens.sol\":10174:10184  msg.sender */\n      caller\n        /* \"contracts/PoddleTokens.sol\":10167:10184  return msg.sender */\n      swap1\n      pop\n        /* \"contracts/PoddleTokens.sol\":10095:10191  function _msgSender() internal view returns (address payable) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/PoddleTokens.sol\":22626:22958  function _approve(address owner, address spender, uint256 amount) internal {... */\n    tag_84:\n        /* \"contracts/PoddleTokens.sol\":22736:22737  0 */\n      0x00\n        /* \"contracts/PoddleTokens.sol\":22719:22738  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/PoddleTokens.sol\":22719:22724  owner */\n      dup4\n        /* \"contracts/PoddleTokens.sol\":22719:22738  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/PoddleTokens.sol\":22711:22779  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_145\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x24\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208\n      0x24\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_145:\n        /* \"contracts/PoddleTokens.sol\":22816:22817  0 */\n      0x00\n        /* \"contracts/PoddleTokens.sol\":22797:22818  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/PoddleTokens.sol\":22797:22804  spender */\n      dup3\n        /* \"contracts/PoddleTokens.sol\":22797:22818  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/PoddleTokens.sol\":22789:22857  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_146\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029\n      0x22\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_146:\n        /* \"contracts/PoddleTokens.sol\":22898:22904  amount */\n      dup1\n        /* \"contracts/PoddleTokens.sol\":22868:22879  _allowances */\n      0x03\n        /* \"contracts/PoddleTokens.sol\":22868:22886  _allowances[owner] */\n      0x00\n        /* \"contracts/PoddleTokens.sol\":22880:22885  owner */\n      dup6\n        /* \"contracts/PoddleTokens.sol\":22868:22886  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/PoddleTokens.sol\":22868:22895  _allowances[owner][spender] */\n      0x00\n        /* \"contracts/PoddleTokens.sol\":22887:22894  spender */\n      dup5\n        /* \"contracts/PoddleTokens.sol\":22868:22895  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/PoddleTokens.sol\":22868:22904  _allowances[owner][spender] = amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/PoddleTokens.sol\":22935:22942  spender */\n      dup2\n        /* \"contracts/PoddleTokens.sol\":22919:22951  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/PoddleTokens.sol\":22928:22933  owner */\n      dup4\n        /* \"contracts/PoddleTokens.sol\":22919:22951  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"contracts/PoddleTokens.sol\":22944:22950  amount */\n      dup4\n        /* \"contracts/PoddleTokens.sol\":22919:22951  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/PoddleTokens.sol\":22626:22958  function _approve(address owner, address spender, uint256 amount) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/PoddleTokens.sol\":20284:20793  function _transfer(address sender, address recipient, uint256 amount) internal{... */\n    tag_88:\n        /* \"contracts/PoddleTokens.sol\":20398:20399  0 */\n      0x00\n        /* \"contracts/PoddleTokens.sol\":20380:20400  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/PoddleTokens.sol\":20380:20386  sender */\n      dup4\n        /* \"contracts/PoddleTokens.sol\":20380:20400  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/PoddleTokens.sol\":20372:20438  require(sender != address(0), \"ERC20: transfer from zero address\") */\n      tag_148\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x21\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_367728d6f44731c16c559c0217fff6d163e627732494d917a99a19fd59fa9611\n      0x21\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_148:\n        /* \"contracts/PoddleTokens.sol\":20477:20478  0 */\n      0x00\n        /* \"contracts/PoddleTokens.sol\":20456:20479  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/PoddleTokens.sol\":20456:20465  recipient */\n      dup3\n        /* \"contracts/PoddleTokens.sol\":20456:20479  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/PoddleTokens.sol\":20448:20515  require(recipient != address(0), \"ERC20: transfer to zero address\") */\n      tag_149\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1f\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x45524332303a207472616e7366657220746f207a65726f206164647265737300\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_149:\n        /* \"contracts/PoddleTokens.sol\":20526:20571  _beforeTokenTransfer(sender,recipient,amount) */\n      tag_150\n        /* \"contracts/PoddleTokens.sol\":20547:20553  sender */\n      dup4\n        /* \"contracts/PoddleTokens.sol\":20554:20563  recipient */\n      dup4\n        /* \"contracts/PoddleTokens.sol\":20564:20570  amount */\n      dup4\n        /* \"contracts/PoddleTokens.sol\":20526:20546  _beforeTokenTransfer */\n      tag_151\n        /* \"contracts/PoddleTokens.sol\":20526:20571  _beforeTokenTransfer(sender,recipient,amount) */\n      jump\t// in\n    tag_150:\n        /* \"contracts/PoddleTokens.sol\":20602:20672  _balances[sender].sub(amount,\"ERC20: transfer amount exceeds balance\") */\n      tag_152\n        /* \"contracts/PoddleTokens.sol\":20624:20630  amount */\n      dup2\n        /* \"contracts/PoddleTokens.sol\":20602:20672  _balances[sender].sub(amount,\"ERC20: transfer amount exceeds balance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      data_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6\n      0x26\n      swap2\n      codecopy\n        /* \"contracts/PoddleTokens.sol\":20602:20611  _balances */\n      0x02\n        /* \"contracts/PoddleTokens.sol\":20602:20619  _balances[sender] */\n      0x00\n        /* \"contracts/PoddleTokens.sol\":20612:20618  sender */\n      dup8\n        /* \"contracts/PoddleTokens.sol\":20602:20619  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/PoddleTokens.sol\":20602:20623  _balances[sender].sub */\n      tag_93\n      swap1\n        /* \"contracts/PoddleTokens.sol\":20602:20672  _balances[sender].sub(amount,\"ERC20: transfer amount exceeds balance\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_152:\n        /* \"contracts/PoddleTokens.sol\":20582:20591  _balances */\n      0x02\n        /* \"contracts/PoddleTokens.sol\":20582:20599  _balances[sender] */\n      0x00\n        /* \"contracts/PoddleTokens.sol\":20592:20598  sender */\n      dup6\n        /* \"contracts/PoddleTokens.sol\":20582:20599  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/PoddleTokens.sol\":20582:20672  _balances[sender] = _balances[sender].sub(amount,\"ERC20: transfer amount exceeds balance\") */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/PoddleTokens.sol\":20705:20737  _balances[recipient].add(amount) */\n      tag_153\n        /* \"contracts/PoddleTokens.sol\":20730:20736  amount */\n      dup2\n        /* \"contracts/PoddleTokens.sol\":20705:20714  _balances */\n      0x02\n        /* \"contracts/PoddleTokens.sol\":20705:20725  _balances[recipient] */\n      0x00\n        /* \"contracts/PoddleTokens.sol\":20715:20724  recipient */\n      dup6\n        /* \"contracts/PoddleTokens.sol\":20705:20725  _balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/PoddleTokens.sol\":20705:20729  _balances[recipient].add */\n      tag_100\n      swap1\n        /* \"contracts/PoddleTokens.sol\":20705:20737  _balances[recipient].add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_153:\n        /* \"contracts/PoddleTokens.sol\":20682:20691  _balances */\n      0x02\n        /* \"contracts/PoddleTokens.sol\":20682:20702  _balances[recipient] */\n      0x00\n        /* \"contracts/PoddleTokens.sol\":20692:20701  recipient */\n      dup5\n        /* \"contracts/PoddleTokens.sol\":20682:20702  _balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/PoddleTokens.sol\":20682:20737  _balances[recipient] = _balances[recipient].add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/PoddleTokens.sol\":20768:20777  recipient */\n      dup2\n        /* \"contracts/PoddleTokens.sol\":20752:20786  Transfer(sender,recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/PoddleTokens.sol\":20761:20767  sender */\n      dup4\n        /* \"contracts/PoddleTokens.sol\":20752:20786  Transfer(sender,recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/PoddleTokens.sol\":20779:20785  amount */\n      dup4\n        /* \"contracts/PoddleTokens.sol\":20752:20786  Transfer(sender,recipient, amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/PoddleTokens.sol\":20284:20793  function _transfer(address sender, address recipient, uint256 amount) internal{... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/PoddleTokens.sol\":5183:5345  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256){... */\n    tag_93:\n        /* \"contracts/PoddleTokens.sol\":5269:5276  uint256 */\n      0x00\n        /* \"contracts/PoddleTokens.sol\":5300:5301  a */\n      dup4\n        /* \"contracts/PoddleTokens.sol\":5295:5296  b */\n      dup4\n        /* \"contracts/PoddleTokens.sol\":5295:5301  b <= a */\n      gt\n      iszero\n        /* \"contracts/PoddleTokens.sol\":5303:5315  errorMessage */\n      dup3\n        /* \"contracts/PoddleTokens.sol\":5287:5316  require(b <= a, errorMessage) */\n      swap1\n      tag_155\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_156:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_158\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_156)\n    tag_158:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_159\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_159:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_155:\n      pop\n        /* \"contracts/PoddleTokens.sol\":5337:5338  b */\n      dup3\n        /* \"contracts/PoddleTokens.sol\":5333:5334  a */\n      dup5\n        /* \"contracts/PoddleTokens.sol\":5333:5338  a - b */\n      sub\n        /* \"contracts/PoddleTokens.sol\":5326:5338  return a - b */\n      swap1\n      pop\n        /* \"contracts/PoddleTokens.sol\":5183:5345  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256){... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/PoddleTokens.sol\":2492:2669  function add(uint256 a, uint256 b) internal pure returns (uint256){... */\n    tag_100:\n        /* \"contracts/PoddleTokens.sol\":2550:2557  uint256 */\n      0x00\n        /* \"contracts/PoddleTokens.sol\":2568:2577  uint256 c */\n      dup1\n        /* \"contracts/PoddleTokens.sol\":2583:2584  b */\n      dup3\n        /* \"contracts/PoddleTokens.sol\":2580:2581  a */\n      dup5\n        /* \"contracts/PoddleTokens.sol\":2580:2584  a +b */\n      add\n        /* \"contracts/PoddleTokens.sol\":2568:2584  uint256 c = a +b */\n      swap1\n      pop\n        /* \"contracts/PoddleTokens.sol\":2611:2612  b */\n      dup3\n        /* \"contracts/PoddleTokens.sol\":2607:2608  a */\n      dup5\n        /* \"contracts/PoddleTokens.sol\":2607:2612  a + b */\n      add\n        /* \"contracts/PoddleTokens.sol\":2602:2603  c */\n      dup2\n        /* \"contracts/PoddleTokens.sol\":2602:2612  c >= a + b */\n      lt\n      iszero\n        /* \"contracts/PoddleTokens.sol\":2594:2644  require(c >= a + b, \"SafeMath: addition overflow\") */\n      tag_161\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_161:\n        /* \"contracts/PoddleTokens.sol\":2661:2662  c */\n      dup1\n        /* \"contracts/PoddleTokens.sol\":2654:2662  return c */\n      swap2\n      pop\n      pop\n        /* \"contracts/PoddleTokens.sol\":2492:2669  function add(uint256 a, uint256 b) internal pure returns (uint256){... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/PoddleTokens.sol\":21056:21505  function _mint(address account, uint256 amount) internal {... */\n    tag_107:\n        /* \"contracts/PoddleTokens.sol\":21150:21151  0 */\n      0x00\n        /* \"contracts/PoddleTokens.sol\":21131:21152  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/PoddleTokens.sol\":21131:21138  account */\n      dup3\n        /* \"contracts/PoddleTokens.sol\":21131:21152  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/PoddleTokens.sol\":21123:21183  require(account != address(0),\"ERC20: mint to zero address\") */\n      tag_163\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x45524332303a206d696e7420746f207a65726f20616464726573730000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_163:\n        /* \"contracts/PoddleTokens.sol\":21226:21236  _maxSupply */\n      sload(0x04)\n        /* \"contracts/PoddleTokens.sol\":21216:21222  amount */\n      dup2\n        /* \"contracts/PoddleTokens.sol\":21201:21213  _totalSupply */\n      sload(0x05)\n        /* \"contracts/PoddleTokens.sol\":21201:21222  _totalSupply + amount */\n      add\n        /* \"contracts/PoddleTokens.sol\":21201:21236  _totalSupply + amount <= _maxSupply */\n      gt\n      iszero\n        /* \"contracts/PoddleTokens.sol\":21193:21278  require(_totalSupply + amount <= _maxSupply, \"ERC20: mint amount exceeds max supply\") */\n      tag_164\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_6bf41de9cf55d9f78df11038d6f93de2fb046c6c44aecc2c46b28a24d62dde23\n      0x25\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_164:\n        /* \"contracts/PoddleTokens.sol\":21289:21337  _beforeTokenTransfer(address(0),account, amount) */\n      tag_165\n        /* \"contracts/PoddleTokens.sol\":21318:21319  0 */\n      0x00\n        /* \"contracts/PoddleTokens.sol\":21321:21328  account */\n      dup4\n        /* \"contracts/PoddleTokens.sol\":21330:21336  amount */\n      dup4\n        /* \"contracts/PoddleTokens.sol\":21289:21309  _beforeTokenTransfer */\n      tag_151\n        /* \"contracts/PoddleTokens.sol\":21289:21337  _beforeTokenTransfer(address(0),account, amount) */\n      jump\t// in\n    tag_165:\n        /* \"contracts/PoddleTokens.sol\":21363:21387  _totalSupply.add(amount) */\n      tag_166\n        /* \"contracts/PoddleTokens.sol\":21380:21386  amount */\n      dup2\n        /* \"contracts/PoddleTokens.sol\":21363:21375  _totalSupply */\n      sload(0x05)\n        /* \"contracts/PoddleTokens.sol\":21363:21379  _totalSupply.add */\n      tag_100\n      swap1\n        /* \"contracts/PoddleTokens.sol\":21363:21387  _totalSupply.add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_166:\n        /* \"contracts/PoddleTokens.sol\":21348:21360  _totalSupply */\n      0x05\n        /* \"contracts/PoddleTokens.sol\":21348:21387  _totalSupply = _totalSupply.add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/PoddleTokens.sol\":21418:21448  _balances[account].add(amount) */\n      tag_167\n        /* \"contracts/PoddleTokens.sol\":21441:21447  amount */\n      dup2\n        /* \"contracts/PoddleTokens.sol\":21418:21427  _balances */\n      0x02\n        /* \"contracts/PoddleTokens.sol\":21418:21436  _balances[account] */\n      0x00\n        /* \"contracts/PoddleTokens.sol\":21428:21435  account */\n      dup6\n        /* \"contracts/PoddleTokens.sol\":21418:21436  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/PoddleTokens.sol\":21418:21440  _balances[account].add */\n      tag_100\n      swap1\n        /* \"contracts/PoddleTokens.sol\":21418:21448  _balances[account].add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_167:\n        /* \"contracts/PoddleTokens.sol\":21397:21406  _balances */\n      0x02\n        /* \"contracts/PoddleTokens.sol\":21397:21415  _balances[account] */\n      0x00\n        /* \"contracts/PoddleTokens.sol\":21407:21414  account */\n      dup5\n        /* \"contracts/PoddleTokens.sol\":21397:21415  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/PoddleTokens.sol\":21397:21448  _balances[account] = _balances[account].add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/PoddleTokens.sol\":21483:21490  account */\n      dup2\n        /* \"contracts/PoddleTokens.sol\":21463:21498  Transfer(address(0),account,amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/PoddleTokens.sol\":21480:21481  0 */\n      0x00\n        /* \"contracts/PoddleTokens.sol\":21463:21498  Transfer(address(0),account,amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/PoddleTokens.sol\":21491:21497  amount */\n      dup4\n        /* \"contracts/PoddleTokens.sol\":21463:21498  Transfer(address(0),account,amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/PoddleTokens.sol\":21056:21505  function _mint(address account, uint256 amount) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/PoddleTokens.sol\":21815:22211  function _burn(address account, uint256 amount) internal{... */\n    tag_111:\n        /* \"contracts/PoddleTokens.sol\":21908:21909  0 */\n      0x00\n        /* \"contracts/PoddleTokens.sol\":21889:21910  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/PoddleTokens.sol\":21889:21896  account */\n      dup3\n        /* \"contracts/PoddleTokens.sol\":21889:21910  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/PoddleTokens.sol\":21881:21948  require(account != address(0), \"ERC20: burn from the zero address\") */\n      tag_169\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x21\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f\n      0x21\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_169:\n        /* \"contracts/PoddleTokens.sol\":21959:22006  _beforeTokenTransfer(account,address(0),amount) */\n      tag_170\n        /* \"contracts/PoddleTokens.sol\":21980:21987  account */\n      dup3\n        /* \"contracts/PoddleTokens.sol\":21996:21997  0 */\n      0x00\n        /* \"contracts/PoddleTokens.sol\":21999:22005  amount */\n      dup4\n        /* \"contracts/PoddleTokens.sol\":21959:21979  _beforeTokenTransfer */\n      tag_151\n        /* \"contracts/PoddleTokens.sol\":21959:22006  _beforeTokenTransfer(account,address(0),amount) */\n      jump\t// in\n    tag_170:\n        /* \"contracts/PoddleTokens.sol\":22038:22105  _balances[account].sub(amount,\"ERC20: burn amount exceeds balance\") */\n      tag_171\n        /* \"contracts/PoddleTokens.sol\":22061:22067  amount */\n      dup2\n        /* \"contracts/PoddleTokens.sol\":22038:22105  _balances[account].sub(amount,\"ERC20: burn amount exceeds balance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      data_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd\n      0x22\n      swap2\n      codecopy\n        /* \"contracts/PoddleTokens.sol\":22038:22047  _balances */\n      0x02\n        /* \"contracts/PoddleTokens.sol\":22038:22056  _balances[account] */\n      0x00\n        /* \"contracts/PoddleTokens.sol\":22048:22055  account */\n      dup7\n        /* \"contracts/PoddleTokens.sol\":22038:22056  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/PoddleTokens.sol\":22038:22060  _balances[account].sub */\n      tag_93\n      swap1\n        /* \"contracts/PoddleTokens.sol\":22038:22105  _balances[account].sub(amount,\"ERC20: burn amount exceeds balance\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_171:\n        /* \"contracts/PoddleTokens.sol\":22017:22026  _balances */\n      0x02\n        /* \"contracts/PoddleTokens.sol\":22017:22035  _balances[account] */\n      0x00\n        /* \"contracts/PoddleTokens.sol\":22027:22034  account */\n      dup5\n        /* \"contracts/PoddleTokens.sol\":22017:22035  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/PoddleTokens.sol\":22017:22105  _balances[account] = _balances[account].sub(amount,\"ERC20: burn amount exceeds balance\") */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/PoddleTokens.sol\":22130:22154  _totalSupply.sub(amount) */\n      tag_172\n        /* \"contracts/PoddleTokens.sol\":22147:22153  amount */\n      dup2\n        /* \"contracts/PoddleTokens.sol\":22130:22142  _totalSupply */\n      sload(0x05)\n        /* \"contracts/PoddleTokens.sol\":22130:22146  _totalSupply.sub */\n      tag_173\n      swap1\n        /* \"contracts/PoddleTokens.sol\":22130:22154  _totalSupply.sub(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_172:\n        /* \"contracts/PoddleTokens.sol\":22115:22127  _totalSupply */\n      0x05\n        /* \"contracts/PoddleTokens.sol\":22115:22154  _totalSupply = _totalSupply.sub(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/PoddleTokens.sol\":22194:22195  0 */\n      0x00\n        /* \"contracts/PoddleTokens.sol\":22169:22204  Transfer(account,address(0),amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/PoddleTokens.sol\":22178:22185  account */\n      dup3\n        /* \"contracts/PoddleTokens.sol\":22169:22204  Transfer(account,address(0),amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/PoddleTokens.sol\":22197:22203  amount */\n      dup4\n        /* \"contracts/PoddleTokens.sol\":22169:22204  Transfer(account,address(0),amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/PoddleTokens.sol\":21815:22211  function _burn(address account, uint256 amount) internal{... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/PoddleTokens.sol\":22965:23048  function _beforeTokenTransfer(address from, address to, uint256 amount) internal {} */\n    tag_151:\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/PoddleTokens.sol\":2931:3085  function sub(uint256 a, uint256 b) internal pure returns (uint256){... */\n    tag_173:\n        /* \"contracts/PoddleTokens.sol\":2989:2996  uint256 */\n      0x00\n        /* \"contracts/PoddleTokens.sol\":3020:3021  a */\n      dup3\n        /* \"contracts/PoddleTokens.sol\":3015:3016  b */\n      dup3\n        /* \"contracts/PoddleTokens.sol\":3015:3021  b <= a */\n      gt\n      iszero\n        /* \"contracts/PoddleTokens.sol\":3007:3056  require(b <= a, \"SafeMath: subtraction overflow\") */\n      tag_176\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1e\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_176:\n        /* \"contracts/PoddleTokens.sol\":3077:3078  b */\n      dup2\n        /* \"contracts/PoddleTokens.sol\":3073:3074  a */\n      dup4\n        /* \"contracts/PoddleTokens.sol\":3073:3078  a - b */\n      sub\n        /* \"contracts/PoddleTokens.sol\":3066:3078  return a - b */\n      swap1\n      pop\n        /* \"contracts/PoddleTokens.sol\":2931:3085  function sub(uint256 a, uint256 b) internal pure returns (uint256){... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n    stop\n    data_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd 45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365\n    data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe 4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373\n    data_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029 45524332303a20617070726f766520746f20746865207a65726f2061646472657373\n    data_367728d6f44731c16c559c0217fff6d163e627732494d917a99a19fd59fa9611 45524332303a207472616e736665722066726f6d207a65726f2061646472657373\n    data_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6 45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365\n    data_6bf41de9cf55d9f78df11038d6f93de2fb046c6c44aecc2c46b28a24d62dde23 45524332303a206d696e7420616d6f756e742065786365656473206d617820737570706c79\n    data_76ef47d3cac10bdd88984936fbabf838a95158c824f2256c2b05b83385232484 45524332303a20646563726561736520616d6f756e74206578636565647320616c6c6f77616e6365\n    data_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f 45524332303a206275726e2066726f6d20746865207a65726f2061646472657373\n    data_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208 45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373\n    data_f7737555abf4f07fa9a8e7458b0ba564ac4d7d05336cdbec0c72ad29c2541514 4f776e61626c653a206f6e6c79206e6577206f776e65722063616e20616363657074206f776e657273686970\n\n    auxdata: 0xa2646970667358221220bce637cb6f6d924a282a481e1170366bc73e492906f696c3eea442da21751b3364736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b506000620000246200019760201b60201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35060006012600a0a90506040518060400160405280600d81526020017f506f64646c6520546f6b656e730000000000000000000000000000000000000081525060069080519060200190620001189291906200019f565b506040518060400160405280600381526020017f504454000000000000000000000000000000000000000000000000000000000081525060079080519060200190620001669291906200019f565b506012600860006101000a81548160ff021916908360ff16021790555080633b9aca00026004819055505062000255565b600033905090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282620001d7576000855562000223565b82601f10620001f257805160ff191683800117855562000223565b8280016001018555821562000223579182015b828111156200022257825182559160200191906001019062000205565b5b50905062000232919062000236565b5090565b5b808211156200025157600081600090555060010162000237565b5090565b611c9280620002656000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c806370a08231116100a257806395d89b411161007157806395d89b411461047e578063a457c2d714610501578063a9059cbb14610565578063dd62ed3e146105c9578063f2fde38b146106415761010b565b806370a082311461039a57806379ba5097146103f257806379cc6790146103fc5780638da5cb5b1461044a5761010b565b8063313ce567116100de578063313ce5671461029957806339509351146102ba57806340c10f191461031e57806342966c681461036c5761010b565b806306fdde0314610110578063095ea7b31461019357806318160ddd146101f757806323b872dd14610215575b600080fd5b610118610685565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561015857808201518184015260208101905061013d565b50505050905090810190601f1680156101855780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101df600480360360408110156101a957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610727565b60405180821515815260200191505060405180910390f35b6101ff610745565b6040518082815260200191505060405180910390f35b6102816004803603606081101561022b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061074f565b60405180821515815260200191505060405180910390f35b6102a1610845565b604051808260ff16815260200191505060405180910390f35b610306600480360360408110156102d057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061085c565b60405180821515815260200191505060405180910390f35b61036a6004803603604081101561033457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061090f565b005b6103986004803603602081101561038257600080fd5b81019080803590602001909291905050506109cc565b005b6103dc600480360360208110156103b057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506109e0565b6040518082815260200191505060405180910390f35b6103fa610a29565b005b6104486004803603604081101561041257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610c1d565b005b610452610c9c565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610486610cc5565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156104c65780820151818401526020810190506104ab565b50505050905090810190601f1680156104f35780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61054d6004803603604081101561051757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610d67565b60405180821515815260200191505060405180910390f35b6105b16004803603604081101561057b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610e34565b60405180821515815260200191505060405180910390f35b61062b600480360360408110156105df57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610e52565b6040518082815260200191505060405180910390f35b6106836004803603602081101561065757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610ed9565b005b606060068054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561071d5780601f106106f25761010080835404028352916020019161071d565b820191906000526020600020905b81548152906001019060200180831161070057829003601f168201915b5050505050905090565b600061073b610734611052565b848461105a565b6001905092915050565b6000600554905090565b600061075c848484611251565b61083a84610768611052565b610835856040518060400160405280601681526020017f45524332303a207472616e7366657220616d6f756e7400000000000000000000815250600360008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006107eb611052565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546115339092919063ffffffff16565b61105a565b600190509392505050565b6000600860009054906101000a900460ff16905090565b6000610905610869611052565b84610900856003600061087a611052565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546115ed90919063ffffffff16565b61105a565b6001905092915050565b610917611052565b73ffffffffffffffffffffffffffffffffffffffff16610935610c9c565b73ffffffffffffffffffffffffffffffffffffffff16146109be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6109c88282611677565b5050565b6109dd6109d7611052565b8261189f565b50565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610a6a611052565b73ffffffffffffffffffffffffffffffffffffffff1614610ad6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180611c31602c913960400191505060405180910390fd5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a350565b6000610c79826040518060400160405280601981526020017f45524332303a204275726e20616d6f756e742065786375746500000000000000815250610c6a86610c65611052565b610e52565b6115339092919063ffffffff16565b9050610c8d83610c87611052565b8361105a565b610c97838361189f565b505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060078054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610d5d5780601f10610d3257610100808354040283529160200191610d5d565b820191906000526020600020905b815481529060010190602001808311610d4057829003601f168201915b5050505050905090565b6000610e2a610d74611052565b84610e2585604051806060016040528060288152602001611bc46028913960036000610d9e611052565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546115339092919063ffffffff16565b61105a565b6001905092915050565b6000610e48610e41611052565b8484611251565b6001905092915050565b6000600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b610ee1611052565b73ffffffffffffffffffffffffffffffffffffffff16610eff610c9c565b73ffffffffffffffffffffffffffffffffffffffff1614610f88576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561100e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180611b106026913960400191505060405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156110e0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180611c0d6024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611166576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180611b366022913960400191505060405180910390fd5b80600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156112d7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180611b586021913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561137a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f45524332303a207472616e7366657220746f207a65726f20616464726573730081525060200191505060405180910390fd5b611385838383611a65565b6113f181604051806060016040528060268152602001611b7960269139600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546115339092919063ffffffff16565b600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061148681600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546115ed90919063ffffffff16565b600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b60008383111582906115e0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156115a557808201518184015260208101905061158a565b50505050905090810190601f1680156115d25780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5082840390509392505050565b600080828401905082840181101561166d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561171a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f45524332303a206d696e7420746f207a65726f2061646472657373000000000081525060200191505060405180910390fd5b60045481600554011115611779576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526025815260200180611b9f6025913960400191505060405180910390fd5b61178560008383611a65565b61179a816005546115ed90919063ffffffff16565b6005819055506117f281600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546115ed90919063ffffffff16565b600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611925576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180611bec6021913960400191505060405180910390fd5b61193182600083611a65565b61199d81604051806060016040528060228152602001611aee60229139600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546115339092919063ffffffff16565b600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506119f581600554611a6a90919063ffffffff16565b600581905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b505050565b600082821115611ae2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525060200191505060405180910390fd5b81830390509291505056fe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63654f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a206d696e7420616d6f756e742065786365656473206d617820737570706c7945524332303a20646563726561736520616d6f756e74206578636565647320616c6c6f77616e636545524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f20616464726573734f776e61626c653a206f6e6c79206e6577206f776e65722063616e20616363657074206f776e657273686970a2646970667358221220bce637cb6f6d924a282a481e1170366bc73e492906f696c3eea442da21751b3364736f6c63430007060033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 PUSH3 0x24 PUSH3 0x197 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x0 PUSH1 0x12 PUSH1 0xA EXP SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xD DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x506F64646C6520546F6B656E7300000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x6 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x118 SWAP3 SWAP2 SWAP1 PUSH3 0x19F JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5044540000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x7 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x166 SWAP3 SWAP2 SWAP1 PUSH3 0x19F JUMP JUMPDEST POP PUSH1 0x12 PUSH1 0x8 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH4 0x3B9ACA00 MUL PUSH1 0x4 DUP2 SWAP1 SSTORE POP POP PUSH3 0x255 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x1D7 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x223 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x1F2 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x223 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x223 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x222 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x205 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x232 SWAP2 SWAP1 PUSH3 0x236 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x251 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x237 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH2 0x1C92 DUP1 PUSH3 0x265 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x10B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x47E JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x501 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x565 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x5C9 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x641 JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x39A JUMPI DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x3F2 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x3FC JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x44A JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x299 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x2BA JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x31E JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x36C JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x110 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x193 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1F7 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x215 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x118 PUSH2 0x685 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x158 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x13D JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x185 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x727 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FF PUSH2 0x745 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x281 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x22B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x74F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A1 PUSH2 0x845 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x306 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x85C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x36A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x334 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x90F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x398 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x382 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x9CC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3DC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x9E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3FA PUSH2 0xA29 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x448 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x412 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xC1D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x452 PUSH2 0xC9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x486 PUSH2 0xCC5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4C6 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x4AB JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x4F3 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x54D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x517 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xD67 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5B1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x57B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xE34 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x62B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x5DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xE52 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x683 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x657 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xED9 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x71D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6F2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x71D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x700 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x73B PUSH2 0x734 PUSH2 0x1052 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x105A JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x75C DUP5 DUP5 DUP5 PUSH2 0x1251 JUMP JUMPDEST PUSH2 0x83A DUP5 PUSH2 0x768 PUSH2 0x1052 JUMP JUMPDEST PUSH2 0x835 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x16 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x45524332303A207472616E7366657220616D6F756E7400000000000000000000 DUP2 MSTORE POP PUSH1 0x3 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x7EB PUSH2 0x1052 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1533 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x105A JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x905 PUSH2 0x869 PUSH2 0x1052 JUMP JUMPDEST DUP5 PUSH2 0x900 DUP6 PUSH1 0x3 PUSH1 0x0 PUSH2 0x87A PUSH2 0x1052 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x15ED SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x105A JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x917 PUSH2 0x1052 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x935 PUSH2 0xC9C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x9BE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9C8 DUP3 DUP3 PUSH2 0x1677 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x9DD PUSH2 0x9D7 PUSH2 0x1052 JUMP JUMPDEST DUP3 PUSH2 0x189F JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA6A PUSH2 0x1052 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xAD6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1C31 PUSH1 0x2C SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC79 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x19 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x45524332303A204275726E20616D6F756E742065786375746500000000000000 DUP2 MSTORE POP PUSH2 0xC6A DUP7 PUSH2 0xC65 PUSH2 0x1052 JUMP JUMPDEST PUSH2 0xE52 JUMP JUMPDEST PUSH2 0x1533 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xC8D DUP4 PUSH2 0xC87 PUSH2 0x1052 JUMP JUMPDEST DUP4 PUSH2 0x105A JUMP JUMPDEST PUSH2 0xC97 DUP4 DUP4 PUSH2 0x189F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0xD5D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xD32 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xD5D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xD40 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE2A PUSH2 0xD74 PUSH2 0x1052 JUMP JUMPDEST DUP5 PUSH2 0xE25 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1BC4 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x3 PUSH1 0x0 PUSH2 0xD9E PUSH2 0x1052 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1533 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x105A JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE48 PUSH2 0xE41 PUSH2 0x1052 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x1251 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xEE1 PUSH2 0x1052 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xEFF PUSH2 0xC9C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF88 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x100E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1B10 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x10E0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1C0D PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1166 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1B36 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x12D7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1B58 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x137A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x45524332303A207472616E7366657220746F207A65726F206164647265737300 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1385 DUP4 DUP4 DUP4 PUSH2 0x1A65 JUMP JUMPDEST PUSH2 0x13F1 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1B79 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x2 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1533 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1486 DUP2 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x15ED SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0x15E0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x15A5 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x158A JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x15D2 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP3 DUP5 SUB SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP3 DUP5 ADD DUP2 LT ISZERO PUSH2 0x166D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x171A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x45524332303A206D696E7420746F207A65726F20616464726573730000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 SLOAD DUP2 PUSH1 0x5 SLOAD ADD GT ISZERO PUSH2 0x1779 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1B9F PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1785 PUSH1 0x0 DUP4 DUP4 PUSH2 0x1A65 JUMP JUMPDEST PUSH2 0x179A DUP2 PUSH1 0x5 SLOAD PUSH2 0x15ED SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 DUP2 SWAP1 SSTORE POP PUSH2 0x17F2 DUP2 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x15ED SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1925 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1BEC PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1931 DUP3 PUSH1 0x0 DUP4 PUSH2 0x1A65 JUMP JUMPDEST PUSH2 0x199D DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1AEE PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1533 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x19F5 DUP2 PUSH1 0x5 SLOAD PUSH2 0x1A6A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x1AE2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP4 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH3 0x75726E KECCAK256 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E63654F776E61 PUSH3 0x6C653A KECCAK256 PUSH15 0x6577206F776E657220697320746865 KECCAK256 PUSH27 0x65726F206164647265737345524332303A20617070726F76652074 PUSH16 0x20746865207A65726F20616464726573 PUSH20 0x45524332303A207472616E736665722066726F6D KECCAK256 PUSH27 0x65726F206164647265737345524332303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E636545524332 ADDRESS GASPRICE KECCAK256 PUSH14 0x696E7420616D6F756E7420657863 PUSH6 0x656473206D61 PUSH25 0x20737570706C7945524332303A20646563726561736520616D PUSH16 0x756E74206578636565647320616C6C6F PUSH24 0x616E636545524332303A206275726E2066726F6D20746865 KECCAK256 PUSH27 0x65726F206164647265737345524332303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 0x4F PUSH24 0x6E61626C653A206F6E6C79206E6577206F776E6572206361 PUSH15 0x20616363657074206F776E65727368 PUSH10 0x70A26469706673582212 KECCAK256 0xBC 0xE6 CALLDATACOPY 0xCB PUSH16 0x6D924A282A481E1170366BC73E492906 0xF6 SWAP7 0xC3 0xEE LOG4 TIMESTAMP 0xDA 0x21 PUSH22 0x1B3364736F6C63430007060033000000000000000000 ",
							"sourceMap": "13671:9467:0:-:0;;;14349:195;;;;;;;;;;11236:17;11256:12;:10;;;:12;;:::i;:::-;11236:32;;11287:9;11278:6;;:18;;;;;;;;;;;;;;;;;;11344:9;11311:43;;11340:1;11311:43;;;;;;;;;;;;11211:150;14373:17;14407:2;14393;:17;14373:37;;14420:23;;;;;;;;;;;;;;;;;:5;:23;;;;;;;;;;;;:::i;:::-;;14453:15;;;;;;;;;;;;;;;;;:7;:15;;;;;;;;;;;;:::i;:::-;;14490:2;14478:9;;:14;;;;;;;;;;;;;;;;;;14528:9;14515:10;:22;14502:10;:35;;;;14349:195;13671:9467;;10095:96;10140:15;10174:10;10167:17;;10095:96;:::o;13671:9467::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061010b5760003560e01c806370a08231116100a257806395d89b411161007157806395d89b411461047e578063a457c2d714610501578063a9059cbb14610565578063dd62ed3e146105c9578063f2fde38b146106415761010b565b806370a082311461039a57806379ba5097146103f257806379cc6790146103fc5780638da5cb5b1461044a5761010b565b8063313ce567116100de578063313ce5671461029957806339509351146102ba57806340c10f191461031e57806342966c681461036c5761010b565b806306fdde0314610110578063095ea7b31461019357806318160ddd146101f757806323b872dd14610215575b600080fd5b610118610685565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561015857808201518184015260208101905061013d565b50505050905090810190601f1680156101855780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101df600480360360408110156101a957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610727565b60405180821515815260200191505060405180910390f35b6101ff610745565b6040518082815260200191505060405180910390f35b6102816004803603606081101561022b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061074f565b60405180821515815260200191505060405180910390f35b6102a1610845565b604051808260ff16815260200191505060405180910390f35b610306600480360360408110156102d057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061085c565b60405180821515815260200191505060405180910390f35b61036a6004803603604081101561033457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061090f565b005b6103986004803603602081101561038257600080fd5b81019080803590602001909291905050506109cc565b005b6103dc600480360360208110156103b057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506109e0565b6040518082815260200191505060405180910390f35b6103fa610a29565b005b6104486004803603604081101561041257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610c1d565b005b610452610c9c565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610486610cc5565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156104c65780820151818401526020810190506104ab565b50505050905090810190601f1680156104f35780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61054d6004803603604081101561051757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610d67565b60405180821515815260200191505060405180910390f35b6105b16004803603604081101561057b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610e34565b60405180821515815260200191505060405180910390f35b61062b600480360360408110156105df57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610e52565b6040518082815260200191505060405180910390f35b6106836004803603602081101561065757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610ed9565b005b606060068054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561071d5780601f106106f25761010080835404028352916020019161071d565b820191906000526020600020905b81548152906001019060200180831161070057829003601f168201915b5050505050905090565b600061073b610734611052565b848461105a565b6001905092915050565b6000600554905090565b600061075c848484611251565b61083a84610768611052565b610835856040518060400160405280601681526020017f45524332303a207472616e7366657220616d6f756e7400000000000000000000815250600360008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006107eb611052565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546115339092919063ffffffff16565b61105a565b600190509392505050565b6000600860009054906101000a900460ff16905090565b6000610905610869611052565b84610900856003600061087a611052565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546115ed90919063ffffffff16565b61105a565b6001905092915050565b610917611052565b73ffffffffffffffffffffffffffffffffffffffff16610935610c9c565b73ffffffffffffffffffffffffffffffffffffffff16146109be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6109c88282611677565b5050565b6109dd6109d7611052565b8261189f565b50565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610a6a611052565b73ffffffffffffffffffffffffffffffffffffffff1614610ad6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180611c31602c913960400191505060405180910390fd5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a350565b6000610c79826040518060400160405280601981526020017f45524332303a204275726e20616d6f756e742065786375746500000000000000815250610c6a86610c65611052565b610e52565b6115339092919063ffffffff16565b9050610c8d83610c87611052565b8361105a565b610c97838361189f565b505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060078054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610d5d5780601f10610d3257610100808354040283529160200191610d5d565b820191906000526020600020905b815481529060010190602001808311610d4057829003601f168201915b5050505050905090565b6000610e2a610d74611052565b84610e2585604051806060016040528060288152602001611bc46028913960036000610d9e611052565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546115339092919063ffffffff16565b61105a565b6001905092915050565b6000610e48610e41611052565b8484611251565b6001905092915050565b6000600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b610ee1611052565b73ffffffffffffffffffffffffffffffffffffffff16610eff610c9c565b73ffffffffffffffffffffffffffffffffffffffff1614610f88576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561100e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180611b106026913960400191505060405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156110e0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180611c0d6024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611166576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180611b366022913960400191505060405180910390fd5b80600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156112d7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180611b586021913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561137a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f45524332303a207472616e7366657220746f207a65726f20616464726573730081525060200191505060405180910390fd5b611385838383611a65565b6113f181604051806060016040528060268152602001611b7960269139600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546115339092919063ffffffff16565b600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061148681600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546115ed90919063ffffffff16565b600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b60008383111582906115e0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156115a557808201518184015260208101905061158a565b50505050905090810190601f1680156115d25780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5082840390509392505050565b600080828401905082840181101561166d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561171a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f45524332303a206d696e7420746f207a65726f2061646472657373000000000081525060200191505060405180910390fd5b60045481600554011115611779576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526025815260200180611b9f6025913960400191505060405180910390fd5b61178560008383611a65565b61179a816005546115ed90919063ffffffff16565b6005819055506117f281600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546115ed90919063ffffffff16565b600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611925576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180611bec6021913960400191505060405180910390fd5b61193182600083611a65565b61199d81604051806060016040528060228152602001611aee60229139600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546115339092919063ffffffff16565b600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506119f581600554611a6a90919063ffffffff16565b600581905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b505050565b600082821115611ae2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525060200191505060405180910390fd5b81830390509291505056fe45524332303a206275726e20616d6f756e7420657863656564732062616c616e63654f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a206d696e7420616d6f756e742065786365656473206d617820737570706c7945524332303a20646563726561736520616d6f756e74206578636565647320616c6c6f77616e636545524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f20616464726573734f776e61626c653a206f6e6c79206e6577206f776e65722063616e20616363657074206f776e657273686970a2646970667358221220bce637cb6f6d924a282a481e1170366bc73e492906f696c3eea442da21751b3364736f6c63430007060033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x10B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x47E JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x501 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x565 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x5C9 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x641 JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x39A JUMPI DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x3F2 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x3FC JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x44A JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x299 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x2BA JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x31E JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x36C JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x110 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x193 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1F7 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x215 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x118 PUSH2 0x685 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x158 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x13D JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x185 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x727 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FF PUSH2 0x745 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x281 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x22B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x74F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A1 PUSH2 0x845 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x306 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x85C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x36A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x334 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x90F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x398 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x382 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x9CC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3DC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x9E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3FA PUSH2 0xA29 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x448 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x412 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xC1D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x452 PUSH2 0xC9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x486 PUSH2 0xCC5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4C6 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x4AB JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x4F3 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x54D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x517 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xD67 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5B1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x57B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xE34 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x62B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x5DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xE52 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x683 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x657 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xED9 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x71D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6F2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x71D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x700 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x73B PUSH2 0x734 PUSH2 0x1052 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x105A JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x75C DUP5 DUP5 DUP5 PUSH2 0x1251 JUMP JUMPDEST PUSH2 0x83A DUP5 PUSH2 0x768 PUSH2 0x1052 JUMP JUMPDEST PUSH2 0x835 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x16 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x45524332303A207472616E7366657220616D6F756E7400000000000000000000 DUP2 MSTORE POP PUSH1 0x3 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x7EB PUSH2 0x1052 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1533 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x105A JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x905 PUSH2 0x869 PUSH2 0x1052 JUMP JUMPDEST DUP5 PUSH2 0x900 DUP6 PUSH1 0x3 PUSH1 0x0 PUSH2 0x87A PUSH2 0x1052 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x15ED SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x105A JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x917 PUSH2 0x1052 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x935 PUSH2 0xC9C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x9BE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9C8 DUP3 DUP3 PUSH2 0x1677 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x9DD PUSH2 0x9D7 PUSH2 0x1052 JUMP JUMPDEST DUP3 PUSH2 0x189F JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA6A PUSH2 0x1052 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xAD6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1C31 PUSH1 0x2C SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC79 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x19 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x45524332303A204275726E20616D6F756E742065786375746500000000000000 DUP2 MSTORE POP PUSH2 0xC6A DUP7 PUSH2 0xC65 PUSH2 0x1052 JUMP JUMPDEST PUSH2 0xE52 JUMP JUMPDEST PUSH2 0x1533 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xC8D DUP4 PUSH2 0xC87 PUSH2 0x1052 JUMP JUMPDEST DUP4 PUSH2 0x105A JUMP JUMPDEST PUSH2 0xC97 DUP4 DUP4 PUSH2 0x189F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0xD5D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xD32 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xD5D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xD40 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE2A PUSH2 0xD74 PUSH2 0x1052 JUMP JUMPDEST DUP5 PUSH2 0xE25 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1BC4 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x3 PUSH1 0x0 PUSH2 0xD9E PUSH2 0x1052 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1533 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x105A JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE48 PUSH2 0xE41 PUSH2 0x1052 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x1251 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xEE1 PUSH2 0x1052 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xEFF PUSH2 0xC9C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF88 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x100E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1B10 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x10E0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1C0D PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1166 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1B36 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x12D7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1B58 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x137A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x45524332303A207472616E7366657220746F207A65726F206164647265737300 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1385 DUP4 DUP4 DUP4 PUSH2 0x1A65 JUMP JUMPDEST PUSH2 0x13F1 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1B79 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x2 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1533 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1486 DUP2 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x15ED SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0x15E0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x15A5 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x158A JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x15D2 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP3 DUP5 SUB SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP3 DUP5 ADD DUP2 LT ISZERO PUSH2 0x166D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x171A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x45524332303A206D696E7420746F207A65726F20616464726573730000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 SLOAD DUP2 PUSH1 0x5 SLOAD ADD GT ISZERO PUSH2 0x1779 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1B9F PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1785 PUSH1 0x0 DUP4 DUP4 PUSH2 0x1A65 JUMP JUMPDEST PUSH2 0x179A DUP2 PUSH1 0x5 SLOAD PUSH2 0x15ED SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 DUP2 SWAP1 SSTORE POP PUSH2 0x17F2 DUP2 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x15ED SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1925 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1BEC PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1931 DUP3 PUSH1 0x0 DUP4 PUSH2 0x1A65 JUMP JUMPDEST PUSH2 0x199D DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1AEE PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1533 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x19F5 DUP2 PUSH1 0x5 SLOAD PUSH2 0x1A6A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x1AE2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP4 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH3 0x75726E KECCAK256 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E63654F776E61 PUSH3 0x6C653A KECCAK256 PUSH15 0x6577206F776E657220697320746865 KECCAK256 PUSH27 0x65726F206164647265737345524332303A20617070726F76652074 PUSH16 0x20746865207A65726F20616464726573 PUSH20 0x45524332303A207472616E736665722066726F6D KECCAK256 PUSH27 0x65726F206164647265737345524332303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E636545524332 ADDRESS GASPRICE KECCAK256 PUSH14 0x696E7420616D6F756E7420657863 PUSH6 0x656473206D61 PUSH25 0x20737570706C7945524332303A20646563726561736520616D PUSH16 0x756E74206578636565647320616C6C6F PUSH24 0x616E636545524332303A206275726E2066726F6D20746865 KECCAK256 PUSH27 0x65726F206164647265737345524332303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 0x4F PUSH24 0x6E61626C653A206F6E6C79206E6577206F776E6572206361 PUSH15 0x20616363657074206F776E65727368 PUSH10 0x70A26469706673582212 KECCAK256 0xBC 0xE6 CALLDATACOPY 0xCB PUSH16 0x6D924A282A481E1170366BC73E492906 0xF6 SWAP7 0xC3 0xEE LOG4 TIMESTAMP 0xDA 0x21 PUSH22 0x1B3364736F6C63430007060033000000000000000000 ",
							"sourceMap": "13671:9467:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14607:81;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16594:157;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;15632:98;;;:::i;:::-;;;;;;;;;;;;;;;;;;;17206:287;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;15493:81;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;17877:207;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;18970:102;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;19177:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;15786:116;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;11913:281;;;:::i;:::-;;19553:270;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;11435:77;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;14798:84;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18558:250;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;16099:163;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;16322:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;12345:182;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;14607:81;14644:13;14676:5;14669:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14607:81;:::o;16594:157::-;16669:4;16685:38;16694:12;:10;:12::i;:::-;16707:7;16716:6;16685:8;:38::i;:::-;16740:4;16733:11;;16594:157;;;;:::o;15632:98::-;15685:7;15711:12;;15704:19;;15632:98;:::o;17206:287::-;17304:4;17319:34;17329:6;17336:9;17346:6;17319:9;:34::i;:::-;17363:102;17372:6;17380:12;:10;:12::i;:::-;17394:70;17432:6;17394:70;;;;;;;;;;;;;;;;;:11;:19;17406:6;17394:19;;;;;;;;;;;;;;;:33;17414:12;:10;:12::i;:::-;17394:33;;;;;;;;;;;;;;;;:37;;:70;;;;;:::i;:::-;17363:8;:102::i;:::-;17482:4;17475:11;;17206:287;;;;;:::o;15493:81::-;15534:5;15558:9;;;;;;;;;;;15551:16;;15493:81;:::o;17877:207::-;17957:4;17973:83;17982:12;:10;:12::i;:::-;17996:7;18005:50;18044:10;18005:11;:25;18017:12;:10;:12::i;:::-;18005:25;;;;;;;;;;;;;;;:34;18031:7;18005:34;;;;;;;;;;;;;;;;:38;;:50;;;;:::i;:::-;17973:8;:83::i;:::-;18073:4;18066:11;;17877:207;;;;:::o;18970:102::-;11644:12;:10;:12::i;:::-;11633:23;;:7;:5;:7::i;:::-;:23;;;11625:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19044:21:::1;19050:7;19058:6;19044:5;:21::i;:::-;18970:102:::0;;:::o;19177:80::-;19224:26;19230:12;:10;:12::i;:::-;19243:6;19224:5;:26::i;:::-;19177:80;:::o;15786:116::-;15852:7;15877:9;:18;15887:7;15877:18;;;;;;;;;;;;;;;;15870:25;;15786:116;;;:::o;11913:281::-;11981:9;;;;;;;;;;;11965:25;;:12;:10;:12::i;:::-;:25;;;11957:82;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12049:16;12068:6;;;;;;;;;;;12049:25;;12093:9;;;;;;;;;;;12084:6;;:18;;;;;;;;;;;;;;;;;;12132:1;12112:9;;:22;;;;;;;;;;;;;;;;;;12180:6;;;;;;;;;;12149:38;;12170:8;12149:38;;;;;;;;;;;;11913:281;:::o;19553:270::-;19621:26;19650:72;19687:6;19650:72;;;;;;;;;;;;;;;;;:32;19660:7;19669:12;:10;:12::i;:::-;19650:9;:32::i;:::-;:36;;:72;;;;;:::i;:::-;19621:101;;19733:51;19742:7;19751:12;:10;:12::i;:::-;19765:18;19733:8;:51::i;:::-;19794:22;19800:7;19809:6;19794:5;:22::i;:::-;19553:270;;;:::o;11435:77::-;11473:7;11499:6;;;;;;;;;;;11492:13;;11435:77;:::o;14798:84::-;14837:13;14868:7;14861:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14798:84;:::o;18558:250::-;18638:4;18654:126;18663:12;:10;:12::i;:::-;18677:7;18686:93;18725:10;18686:93;;;;;;;;;;;;;;;;;:11;:25;18698:12;:10;:12::i;:::-;18686:25;;;;;;;;;;;;;;;:34;18712:7;18686:34;;;;;;;;;;;;;;;;:38;;:93;;;;;:::i;:::-;18654:8;:126::i;:::-;18797:4;18790:11;;18558:250;;;;:::o;16099:163::-;16177:4;16192:42;16202:12;:10;:12::i;:::-;16216:9;16227:6;16192:9;:42::i;:::-;16251:4;16244:11;;16099:163;;;;:::o;16322:140::-;16403:7;16428:11;:18;16440:5;16428:18;;;;;;;;;;;;;;;:27;16447:7;16428:27;;;;;;;;;;;;;;;;16421:34;;16322:140;;;;:::o;12345:182::-;11644:12;:10;:12::i;:::-;11633:23;;:7;:5;:7::i;:::-;:23;;;11625:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12445:1:::1;12425:22;;:8;:22;;;;12417:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12512:8;12500:9;;:20;;;;;;;;;;;;;;;;;;12345:182:::0;:::o;10095:96::-;10140:15;10174:10;10167:17;;10095:96;:::o;22626:332::-;22736:1;22719:19;;:5;:19;;;;22711:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22816:1;22797:21;;:7;:21;;;;22789:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22898:6;22868:11;:18;22880:5;22868:18;;;;;;;;;;;;;;;:27;22887:7;22868:27;;;;;;;;;;;;;;;:36;;;;22935:7;22919:32;;22928:5;22919:32;;;22944:6;22919:32;;;;;;;;;;;;;;;;;;22626:332;;;:::o;20284:509::-;20398:1;20380:20;;:6;:20;;;;20372:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20477:1;20456:23;;:9;:23;;;;20448:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20526:45;20547:6;20554:9;20564:6;20526:20;:45::i;:::-;20602:70;20624:6;20602:70;;;;;;;;;;;;;;;;;:9;:17;20612:6;20602:17;;;;;;;;;;;;;;;;:21;;:70;;;;;:::i;:::-;20582:9;:17;20592:6;20582:17;;;;;;;;;;;;;;;:90;;;;20705:32;20730:6;20705:9;:20;20715:9;20705:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;20682:9;:20;20692:9;20682:20;;;;;;;;;;;;;;;:55;;;;20768:9;20752:34;;20761:6;20752:34;;;20779:6;20752:34;;;;;;;;;;;;;;;;;;20284:509;;;:::o;5183:162::-;5269:7;5300:1;5295;:6;;5303:12;5287:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5337:1;5333;:5;5326:12;;5183:162;;;;;:::o;2492:177::-;2550:7;2568:9;2583:1;2580;:4;2568:16;;2611:1;2607;:5;2602:1;:10;;2594:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2661:1;2654:8;;;2492:177;;;;:::o;21056:449::-;21150:1;21131:21;;:7;:21;;;;21123:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21226:10;;21216:6;21201:12;;:21;:35;;21193:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21289:48;21318:1;21321:7;21330:6;21289:20;:48::i;:::-;21363:24;21380:6;21363:12;;:16;;:24;;;;:::i;:::-;21348:12;:39;;;;21418:30;21441:6;21418:9;:18;21428:7;21418:18;;;;;;;;;;;;;;;;:22;;:30;;;;:::i;:::-;21397:9;:18;21407:7;21397:18;;;;;;;;;;;;;;;:51;;;;21483:7;21463:35;;21480:1;21463:35;;;21491:6;21463:35;;;;;;;;;;;;;;;;;;21056:449;;:::o;21815:396::-;21908:1;21889:21;;:7;:21;;;;21881:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21959:47;21980:7;21996:1;21999:6;21959:20;:47::i;:::-;22038:67;22061:6;22038:67;;;;;;;;;;;;;;;;;:9;:18;22048:7;22038:18;;;;;;;;;;;;;;;;:22;;:67;;;;;:::i;:::-;22017:9;:18;22027:7;22017:18;;;;;;;;;;;;;;;:88;;;;22130:24;22147:6;22130:12;;:16;;:24;;;;:::i;:::-;22115:12;:39;;;;22194:1;22169:35;;22178:7;22169:35;;;22197:6;22169:35;;;;;;;;;;;;;;;;;;21815:396;;:::o;22965:83::-;;;;:::o;2931:154::-;2989:7;3020:1;3015;:6;;3007:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3077:1;3073;:5;3066:12;;2931:154;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1462800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"acceptOwnership()": "infinite",
								"allowance(address,address)": "1409",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "1219",
								"burn(uint256)": "infinite",
								"burnFrom(address,uint256)": "infinite",
								"decimals()": "1078",
								"decreaseAllowance(address,uint256)": "infinite",
								"increaseAllowance(address,uint256)": "infinite",
								"mint(address,uint256)": "infinite",
								"name()": "infinite",
								"owner()": "1144",
								"symbol()": "infinite",
								"totalSupply()": "1081",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite"
							},
							"internal": {
								"_afterTokenTransfer(address,address,uint256)": "infinite",
								"_approve(address,address,uint256)": "infinite",
								"_beforeTokenTransfer(address,address,uint256)": "15",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 13671,
									"end": 23138,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 13671,
									"end": 23138,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 13671,
									"end": 23138,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 14349,
									"end": 14544,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 14349,
									"end": 14544,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 14349,
									"end": 14544,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 14349,
									"end": 14544,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 14349,
									"end": 14544,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 14349,
									"end": 14544,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 14349,
									"end": 14544,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 14349,
									"end": 14544,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 14349,
									"end": 14544,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 14349,
									"end": 14544,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 14349,
									"end": 14544,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 11236,
									"end": 11253,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 11256,
									"end": 11268,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 11256,
									"end": 11266,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 11256,
									"end": 11266,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 11256,
									"end": 11266,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 11256,
									"end": 11268,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 11256,
									"end": 11268,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 11256,
									"end": 11268,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 11256,
									"end": 11268,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 11256,
									"end": 11268,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 11236,
									"end": 11268,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11236,
									"end": 11268,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 11287,
									"end": 11296,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11278,
									"end": 11284,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 11278,
									"end": 11284,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11278,
									"end": 11296,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 11278,
									"end": 11296,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 11278,
									"end": 11296,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 11278,
									"end": 11296,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 11278,
									"end": 11296,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 11278,
									"end": 11296,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 11278,
									"end": 11296,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 11278,
									"end": 11296,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 11278,
									"end": 11296,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 11278,
									"end": 11296,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11278,
									"end": 11296,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 11278,
									"end": 11296,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 11278,
									"end": 11296,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 11278,
									"end": 11296,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 11278,
									"end": 11296,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 11278,
									"end": 11296,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11278,
									"end": 11296,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 11278,
									"end": 11296,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 11344,
									"end": 11353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11311,
									"end": 11354,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 11311,
									"end": 11354,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 11340,
									"end": 11341,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 11311,
									"end": 11354,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 11311,
									"end": 11354,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 11311,
									"end": 11354,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 11311,
									"end": 11354,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 11311,
									"end": 11354,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 11311,
									"end": 11354,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 11311,
									"end": 11354,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 11311,
									"end": 11354,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11311,
									"end": 11354,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 11311,
									"end": 11354,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 11311,
									"end": 11354,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11311,
									"end": 11354,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 11211,
									"end": 11361,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 14373,
									"end": 14390,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 14407,
									"end": 14409,
									"name": "PUSH",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 14393,
									"end": 14395,
									"name": "PUSH",
									"source": 0,
									"value": "A"
								},
								{
									"begin": 14393,
									"end": 14410,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 14373,
									"end": 14410,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 14373,
									"end": 14410,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 14420,
									"end": 14443,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 14420,
									"end": 14443,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 14420,
									"end": 14443,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 14420,
									"end": 14443,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 14420,
									"end": 14443,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 14420,
									"end": 14443,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 14420,
									"end": 14443,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 14420,
									"end": 14443,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 14420,
									"end": 14443,
									"name": "PUSH",
									"source": 0,
									"value": "D"
								},
								{
									"begin": 14420,
									"end": 14443,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 14420,
									"end": 14443,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 14420,
									"end": 14443,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 14420,
									"end": 14443,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 14420,
									"end": 14443,
									"name": "PUSH",
									"source": 0,
									"value": "506F64646C6520546F6B656E7300000000000000000000000000000000000000"
								},
								{
									"begin": 14420,
									"end": 14443,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 14420,
									"end": 14443,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 14420,
									"end": 14443,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 14420,
									"end": 14425,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 14420,
									"end": 14443,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 14420,
									"end": 14443,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 14420,
									"end": 14443,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 14420,
									"end": 14443,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 14420,
									"end": 14443,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 14420,
									"end": 14443,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 14420,
									"end": 14443,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 14420,
									"end": 14443,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 14420,
									"end": 14443,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 14420,
									"end": 14443,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 14420,
									"end": 14443,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 14420,
									"end": 14443,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 14420,
									"end": 14443,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 14420,
									"end": 14443,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 14420,
									"end": 14443,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 14420,
									"end": 14443,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 14453,
									"end": 14468,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 14453,
									"end": 14468,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 14453,
									"end": 14468,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 14453,
									"end": 14468,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 14453,
									"end": 14468,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 14453,
									"end": 14468,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 14453,
									"end": 14468,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 14453,
									"end": 14468,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 14453,
									"end": 14468,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 14453,
									"end": 14468,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 14453,
									"end": 14468,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 14453,
									"end": 14468,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 14453,
									"end": 14468,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 14453,
									"end": 14468,
									"name": "PUSH",
									"source": 0,
									"value": "5044540000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 14453,
									"end": 14468,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 14453,
									"end": 14468,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 14453,
									"end": 14468,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 14453,
									"end": 14460,
									"name": "PUSH",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 14453,
									"end": 14468,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 14453,
									"end": 14468,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 14453,
									"end": 14468,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 14453,
									"end": 14468,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 14453,
									"end": 14468,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 14453,
									"end": 14468,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 14453,
									"end": 14468,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 14453,
									"end": 14468,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 14453,
									"end": 14468,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 14453,
									"end": 14468,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 14453,
									"end": 14468,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 14453,
									"end": 14468,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 14453,
									"end": 14468,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 14453,
									"end": 14468,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 14453,
									"end": 14468,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 14453,
									"end": 14468,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 14490,
									"end": 14492,
									"name": "PUSH",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 14478,
									"end": 14487,
									"name": "PUSH",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 14478,
									"end": 14487,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 14478,
									"end": 14492,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 14478,
									"end": 14492,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 14478,
									"end": 14492,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 14478,
									"end": 14492,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 14478,
									"end": 14492,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 14478,
									"end": 14492,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 14478,
									"end": 14492,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 14478,
									"end": 14492,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 14478,
									"end": 14492,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 14478,
									"end": 14492,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 14478,
									"end": 14492,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 14478,
									"end": 14492,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 14478,
									"end": 14492,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 14478,
									"end": 14492,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 14478,
									"end": 14492,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 14478,
									"end": 14492,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 14478,
									"end": 14492,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 14478,
									"end": 14492,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 14528,
									"end": 14537,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 14515,
									"end": 14525,
									"name": "PUSH",
									"source": 0,
									"value": "3B9ACA00"
								},
								{
									"begin": 14515,
									"end": 14537,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 14502,
									"end": 14512,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 14502,
									"end": 14537,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 14502,
									"end": 14537,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 14502,
									"end": 14537,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 14502,
									"end": 14537,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 14349,
									"end": 14544,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 13671,
									"end": 23138,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 13671,
									"end": 23138,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 10095,
									"end": 10191,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 10095,
									"end": 10191,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 10140,
									"end": 10155,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 10174,
									"end": 10184,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 10167,
									"end": 10184,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 10167,
									"end": 10184,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 10095,
									"end": 10191,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 10095,
									"end": 10191,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 13671,
									"end": 23138,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 13671,
									"end": 23138,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 13671,
									"end": 23138,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 13671,
									"end": 23138,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 13671,
									"end": 23138,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 13671,
									"end": 23138,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 13671,
									"end": 23138,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 13671,
									"end": 23138,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 13671,
									"end": 23138,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 13671,
									"end": 23138,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 13671,
									"end": 23138,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 13671,
									"end": 23138,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 13671,
									"end": 23138,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 13671,
									"end": 23138,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 13671,
									"end": 23138,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 13671,
									"end": 23138,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13671,
									"end": 23138,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 13671,
									"end": 23138,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13671,
									"end": 23138,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 13671,
									"end": 23138,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 13671,
									"end": 23138,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 13671,
									"end": 23138,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 13671,
									"end": 23138,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 13671,
									"end": 23138,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13671,
									"end": 23138,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 13671,
									"end": 23138,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 13671,
									"end": 23138,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 13671,
									"end": 23138,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13671,
									"end": 23138,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 13671,
									"end": 23138,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 13671,
									"end": 23138,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 13671,
									"end": 23138,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 13671,
									"end": 23138,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 13671,
									"end": 23138,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 13671,
									"end": 23138,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 13671,
									"end": 23138,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 13671,
									"end": 23138,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 13671,
									"end": 23138,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 13671,
									"end": 23138,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 13671,
									"end": 23138,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 13671,
									"end": 23138,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 13671,
									"end": 23138,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 13671,
									"end": 23138,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 13671,
									"end": 23138,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 13671,
									"end": 23138,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 13671,
									"end": 23138,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 13671,
									"end": 23138,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 13671,
									"end": 23138,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 13671,
									"end": 23138,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 13671,
									"end": 23138,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 13671,
									"end": 23138,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 13671,
									"end": 23138,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 13671,
									"end": 23138,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 13671,
									"end": 23138,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 13671,
									"end": 23138,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 13671,
									"end": 23138,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 13671,
									"end": 23138,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 13671,
									"end": 23138,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 13671,
									"end": 23138,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 13671,
									"end": 23138,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 13671,
									"end": 23138,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 13671,
									"end": 23138,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 13671,
									"end": 23138,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 13671,
									"end": 23138,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 13671,
									"end": 23138,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 13671,
									"end": 23138,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 13671,
									"end": 23138,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 13671,
									"end": 23138,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 13671,
									"end": 23138,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 13671,
									"end": 23138,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 13671,
									"end": 23138,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 13671,
									"end": 23138,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 13671,
									"end": 23138,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 13671,
									"end": 23138,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 13671,
									"end": 23138,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 13671,
									"end": 23138,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 13671,
									"end": 23138,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 13671,
									"end": 23138,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 13671,
									"end": 23138,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 13671,
									"end": 23138,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 13671,
									"end": 23138,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 13671,
									"end": 23138,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 13671,
									"end": 23138,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 13671,
									"end": 23138,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 13671,
									"end": 23138,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 13671,
									"end": 23138,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 13671,
									"end": 23138,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 13671,
									"end": 23138,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 13671,
									"end": 23138,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 13671,
									"end": 23138,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 13671,
									"end": 23138,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 13671,
									"end": 23138,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 13671,
									"end": 23138,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13671,
									"end": 23138,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 13671,
									"end": 23138,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 13671,
									"end": 23138,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13671,
									"end": 23138,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 13671,
									"end": 23138,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 13671,
									"end": 23138,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 13671,
									"end": 23138,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 13671,
									"end": 23138,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 13671,
									"end": 23138,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 13671,
									"end": 23138,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 13671,
									"end": 23138,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13671,
									"end": 23138,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 13671,
									"end": 23138,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 13671,
									"end": 23138,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 13671,
									"end": 23138,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13671,
									"end": 23138,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 13671,
									"end": 23138,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 13671,
									"end": 23138,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 13671,
									"end": 23138,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 13671,
									"end": 23138,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 13671,
									"end": 23138,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13671,
									"end": 23138,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 13671,
									"end": 23138,
									"name": "tag",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 13671,
									"end": 23138,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 13671,
									"end": 23138,
									"name": "tag",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 13671,
									"end": 23138,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 13671,
									"end": 23138,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 13671,
									"end": 23138,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 13671,
									"end": 23138,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 13671,
									"end": 23138,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 13671,
									"end": 23138,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 13671,
									"end": 23138,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 13671,
									"end": 23138,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 13671,
									"end": 23138,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 13671,
									"end": 23138,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 13671,
									"end": 23138,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13671,
									"end": 23138,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 13671,
									"end": 23138,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 13671,
									"end": 23138,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 13671,
									"end": 23138,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 13671,
									"end": 23138,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 13671,
									"end": 23138,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 13671,
									"end": 23138,
									"name": "tag",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 13671,
									"end": 23138,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 13671,
									"end": 23138,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 13671,
									"end": 23138,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13671,
									"end": 23138,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 13671,
									"end": 23138,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 13671,
									"end": 23138,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 13671,
									"end": 23138,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 13671,
									"end": 23138,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 13671,
									"end": 23138,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 13671,
									"end": 23138,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 13671,
									"end": 23138,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 13671,
									"end": 23138,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 13671,
									"end": 23138,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220bce637cb6f6d924a282a481e1170366bc73e492906f696c3eea442da21751b3364736f6c63430007060033",
									".code": [
										{
											"begin": 13671,
											"end": 23138,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 13671,
											"end": 23138,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13671,
											"end": 23138,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13671,
											"end": 23138,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 13671,
											"end": 23138,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13671,
											"end": 23138,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13671,
											"end": 23138,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 13671,
											"end": 23138,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13671,
											"end": 23138,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13671,
											"end": 23138,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13671,
											"end": 23138,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13671,
											"end": 23138,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 13671,
											"end": 23138,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13671,
											"end": 23138,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13671,
											"end": 23138,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13671,
											"end": 23138,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 13671,
											"end": 23138,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 13671,
											"end": 23138,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 13671,
											"end": 23138,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13671,
											"end": 23138,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13671,
											"end": 23138,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 13671,
											"end": 23138,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 13671,
											"end": 23138,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 13671,
											"end": 23138,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13671,
											"end": 23138,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 13671,
											"end": 23138,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 13671,
											"end": 23138,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13671,
											"end": 23138,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13671,
											"end": 23138,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13671,
											"end": 23138,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 13671,
											"end": 23138,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 13671,
											"end": 23138,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 13671,
											"end": 23138,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13671,
											"end": 23138,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13671,
											"end": 23138,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 13671,
											"end": 23138,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 13671,
											"end": 23138,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 13671,
											"end": 23138,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13671,
											"end": 23138,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13671,
											"end": 23138,
											"name": "PUSH",
											"source": 0,
											"value": "A457C2D7"
										},
										{
											"begin": 13671,
											"end": 23138,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 13671,
											"end": 23138,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 13671,
											"end": 23138,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13671,
											"end": 23138,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13671,
											"end": 23138,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 13671,
											"end": 23138,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 13671,
											"end": 23138,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 13671,
											"end": 23138,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13671,
											"end": 23138,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13671,
											"end": 23138,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 13671,
											"end": 23138,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 13671,
											"end": 23138,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 13671,
											"end": 23138,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13671,
											"end": 23138,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13671,
											"end": 23138,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 13671,
											"end": 23138,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 13671,
											"end": 23138,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 13671,
											"end": 23138,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13671,
											"end": 23138,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 13671,
											"end": 23138,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13671,
											"end": 23138,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 13671,
											"end": 23138,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13671,
											"end": 23138,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13671,
											"end": 23138,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 13671,
											"end": 23138,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 13671,
											"end": 23138,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 13671,
											"end": 23138,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13671,
											"end": 23138,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13671,
											"end": 23138,
											"name": "PUSH",
											"source": 0,
											"value": "79BA5097"
										},
										{
											"begin": 13671,
											"end": 23138,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 13671,
											"end": 23138,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 13671,
											"end": 23138,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13671,
											"end": 23138,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13671,
											"end": 23138,
											"name": "PUSH",
											"source": 0,
											"value": "79CC6790"
										},
										{
											"begin": 13671,
											"end": 23138,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 13671,
											"end": 23138,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 13671,
											"end": 23138,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13671,
											"end": 23138,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13671,
											"end": 23138,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 13671,
											"end": 23138,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 13671,
											"end": 23138,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 13671,
											"end": 23138,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13671,
											"end": 23138,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 13671,
											"end": 23138,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13671,
											"end": 23138,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13671,
											"end": 23138,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13671,
											"end": 23138,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13671,
											"end": 23138,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 13671,
											"end": 23138,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 13671,
											"end": 23138,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 13671,
											"end": 23138,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13671,
											"end": 23138,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13671,
											"end": 23138,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 13671,
											"end": 23138,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 13671,
											"end": 23138,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 13671,
											"end": 23138,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13671,
											"end": 23138,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13671,
											"end": 23138,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 13671,
											"end": 23138,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 13671,
											"end": 23138,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 13671,
											"end": 23138,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13671,
											"end": 23138,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13671,
											"end": 23138,
											"name": "PUSH",
											"source": 0,
											"value": "40C10F19"
										},
										{
											"begin": 13671,
											"end": 23138,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 13671,
											"end": 23138,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 13671,
											"end": 23138,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13671,
											"end": 23138,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13671,
											"end": 23138,
											"name": "PUSH",
											"source": 0,
											"value": "42966C68"
										},
										{
											"begin": 13671,
											"end": 23138,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 13671,
											"end": 23138,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 13671,
											"end": 23138,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13671,
											"end": 23138,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 13671,
											"end": 23138,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13671,
											"end": 23138,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 13671,
											"end": 23138,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13671,
											"end": 23138,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13671,
											"end": 23138,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 13671,
											"end": 23138,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 13671,
											"end": 23138,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 13671,
											"end": 23138,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13671,
											"end": 23138,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13671,
											"end": 23138,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 13671,
											"end": 23138,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 13671,
											"end": 23138,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13671,
											"end": 23138,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13671,
											"end": 23138,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13671,
											"end": 23138,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 13671,
											"end": 23138,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 13671,
											"end": 23138,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 13671,
											"end": 23138,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13671,
											"end": 23138,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13671,
											"end": 23138,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 13671,
											"end": 23138,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 13671,
											"end": 23138,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 13671,
											"end": 23138,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13671,
											"end": 23138,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 13671,
											"end": 23138,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13671,
											"end": 23138,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13671,
											"end": 23138,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13671,
											"end": 23138,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14607,
											"end": 14688,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 14607,
											"end": 14688,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14607,
											"end": 14688,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 14607,
											"end": 14688,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 14607,
											"end": 14688,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14607,
											"end": 14688,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 14607,
											"end": 14688,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14607,
											"end": 14688,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14607,
											"end": 14688,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14607,
											"end": 14688,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14607,
											"end": 14688,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14607,
											"end": 14688,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14607,
											"end": 14688,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14607,
											"end": 14688,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14607,
											"end": 14688,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14607,
											"end": 14688,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14607,
											"end": 14688,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14607,
											"end": 14688,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14607,
											"end": 14688,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14607,
											"end": 14688,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14607,
											"end": 14688,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14607,
											"end": 14688,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14607,
											"end": 14688,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14607,
											"end": 14688,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14607,
											"end": 14688,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14607,
											"end": 14688,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14607,
											"end": 14688,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14607,
											"end": 14688,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14607,
											"end": 14688,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14607,
											"end": 14688,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14607,
											"end": 14688,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14607,
											"end": 14688,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14607,
											"end": 14688,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14607,
											"end": 14688,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14607,
											"end": 14688,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14607,
											"end": 14688,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14607,
											"end": 14688,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14607,
											"end": 14688,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14607,
											"end": 14688,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 14607,
											"end": 14688,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14607,
											"end": 14688,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14607,
											"end": 14688,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14607,
											"end": 14688,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 14607,
											"end": 14688,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14607,
											"end": 14688,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 14607,
											"end": 14688,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14607,
											"end": 14688,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14607,
											"end": 14688,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14607,
											"end": 14688,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14607,
											"end": 14688,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14607,
											"end": 14688,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14607,
											"end": 14688,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14607,
											"end": 14688,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14607,
											"end": 14688,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14607,
											"end": 14688,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14607,
											"end": 14688,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14607,
											"end": 14688,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14607,
											"end": 14688,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14607,
											"end": 14688,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14607,
											"end": 14688,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 14607,
											"end": 14688,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14607,
											"end": 14688,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 14607,
											"end": 14688,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14607,
											"end": 14688,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14607,
											"end": 14688,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14607,
											"end": 14688,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14607,
											"end": 14688,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14607,
											"end": 14688,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14607,
											"end": 14688,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14607,
											"end": 14688,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14607,
											"end": 14688,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14607,
											"end": 14688,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14607,
											"end": 14688,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14607,
											"end": 14688,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 14607,
											"end": 14688,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14607,
											"end": 14688,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14607,
											"end": 14688,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14607,
											"end": 14688,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 14607,
											"end": 14688,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14607,
											"end": 14688,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14607,
											"end": 14688,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14607,
											"end": 14688,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14607,
											"end": 14688,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14607,
											"end": 14688,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14607,
											"end": 14688,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14607,
											"end": 14688,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14607,
											"end": 14688,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14607,
											"end": 14688,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14607,
											"end": 14688,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 14607,
											"end": 14688,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 14607,
											"end": 14688,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14607,
											"end": 14688,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 14607,
											"end": 14688,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14607,
											"end": 14688,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14607,
											"end": 14688,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14607,
											"end": 14688,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14607,
											"end": 14688,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14607,
											"end": 14688,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14607,
											"end": 14688,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14607,
											"end": 14688,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 14607,
											"end": 14688,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14607,
											"end": 14688,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14607,
											"end": 14688,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14607,
											"end": 14688,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14607,
											"end": 14688,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14607,
											"end": 14688,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14607,
											"end": 14688,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14607,
											"end": 14688,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14607,
											"end": 14688,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14607,
											"end": 14688,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14607,
											"end": 14688,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14607,
											"end": 14688,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14607,
											"end": 14688,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 16594,
											"end": 16751,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16594,
											"end": 16751,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16594,
											"end": 16751,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 16594,
											"end": 16751,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16594,
											"end": 16751,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16594,
											"end": 16751,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 16594,
											"end": 16751,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16594,
											"end": 16751,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16594,
											"end": 16751,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16594,
											"end": 16751,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 16594,
											"end": 16751,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16594,
											"end": 16751,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 16594,
											"end": 16751,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16594,
											"end": 16751,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16594,
											"end": 16751,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16594,
											"end": 16751,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16594,
											"end": 16751,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 16594,
											"end": 16751,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16594,
											"end": 16751,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16594,
											"end": 16751,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16594,
											"end": 16751,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16594,
											"end": 16751,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16594,
											"end": 16751,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16594,
											"end": 16751,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 16594,
											"end": 16751,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16594,
											"end": 16751,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16594,
											"end": 16751,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16594,
											"end": 16751,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16594,
											"end": 16751,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16594,
											"end": 16751,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16594,
											"end": 16751,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 16594,
											"end": 16751,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16594,
											"end": 16751,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16594,
											"end": 16751,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16594,
											"end": 16751,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 16594,
											"end": 16751,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16594,
											"end": 16751,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16594,
											"end": 16751,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16594,
											"end": 16751,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16594,
											"end": 16751,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 16594,
											"end": 16751,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16594,
											"end": 16751,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16594,
											"end": 16751,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16594,
											"end": 16751,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16594,
											"end": 16751,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16594,
											"end": 16751,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 16594,
											"end": 16751,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16594,
											"end": 16751,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 16594,
											"end": 16751,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16594,
											"end": 16751,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16594,
											"end": 16751,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16594,
											"end": 16751,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16594,
											"end": 16751,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16594,
											"end": 16751,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16594,
											"end": 16751,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16594,
											"end": 16751,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16594,
											"end": 16751,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16594,
											"end": 16751,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16594,
											"end": 16751,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16594,
											"end": 16751,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16594,
											"end": 16751,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16594,
											"end": 16751,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16594,
											"end": 16751,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16594,
											"end": 16751,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16594,
											"end": 16751,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16594,
											"end": 16751,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16594,
											"end": 16751,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16594,
											"end": 16751,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16594,
											"end": 16751,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 15632,
											"end": 15730,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 15632,
											"end": 15730,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15632,
											"end": 15730,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 15632,
											"end": 15730,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 15632,
											"end": 15730,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15632,
											"end": 15730,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 15632,
											"end": 15730,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15632,
											"end": 15730,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15632,
											"end": 15730,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15632,
											"end": 15730,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15632,
											"end": 15730,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15632,
											"end": 15730,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15632,
											"end": 15730,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15632,
											"end": 15730,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15632,
											"end": 15730,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15632,
											"end": 15730,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15632,
											"end": 15730,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15632,
											"end": 15730,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15632,
											"end": 15730,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15632,
											"end": 15730,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15632,
											"end": 15730,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15632,
											"end": 15730,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15632,
											"end": 15730,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15632,
											"end": 15730,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15632,
											"end": 15730,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 17206,
											"end": 17493,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 17206,
											"end": 17493,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17206,
											"end": 17493,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 17206,
											"end": 17493,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17206,
											"end": 17493,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17206,
											"end": 17493,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 17206,
											"end": 17493,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17206,
											"end": 17493,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 17206,
											"end": 17493,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17206,
											"end": 17493,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 17206,
											"end": 17493,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17206,
											"end": 17493,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 17206,
											"end": 17493,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17206,
											"end": 17493,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17206,
											"end": 17493,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17206,
											"end": 17493,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 17206,
											"end": 17493,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 17206,
											"end": 17493,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17206,
											"end": 17493,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17206,
											"end": 17493,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17206,
											"end": 17493,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17206,
											"end": 17493,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17206,
											"end": 17493,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17206,
											"end": 17493,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 17206,
											"end": 17493,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17206,
											"end": 17493,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17206,
											"end": 17493,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17206,
											"end": 17493,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17206,
											"end": 17493,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17206,
											"end": 17493,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17206,
											"end": 17493,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17206,
											"end": 17493,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17206,
											"end": 17493,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17206,
											"end": 17493,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17206,
											"end": 17493,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 17206,
											"end": 17493,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17206,
											"end": 17493,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17206,
											"end": 17493,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17206,
											"end": 17493,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17206,
											"end": 17493,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17206,
											"end": 17493,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17206,
											"end": 17493,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17206,
											"end": 17493,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17206,
											"end": 17493,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17206,
											"end": 17493,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17206,
											"end": 17493,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 17206,
											"end": 17493,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17206,
											"end": 17493,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17206,
											"end": 17493,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17206,
											"end": 17493,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17206,
											"end": 17493,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17206,
											"end": 17493,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17206,
											"end": 17493,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17206,
											"end": 17493,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17206,
											"end": 17493,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17206,
											"end": 17493,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17206,
											"end": 17493,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 17206,
											"end": 17493,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17206,
											"end": 17493,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 17206,
											"end": 17493,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17206,
											"end": 17493,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17206,
											"end": 17493,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17206,
											"end": 17493,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17206,
											"end": 17493,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17206,
											"end": 17493,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17206,
											"end": 17493,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17206,
											"end": 17493,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17206,
											"end": 17493,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17206,
											"end": 17493,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17206,
											"end": 17493,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17206,
											"end": 17493,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17206,
											"end": 17493,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17206,
											"end": 17493,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17206,
											"end": 17493,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17206,
											"end": 17493,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17206,
											"end": 17493,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17206,
											"end": 17493,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17206,
											"end": 17493,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17206,
											"end": 17493,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17206,
											"end": 17493,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 15493,
											"end": 15574,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 15493,
											"end": 15574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15493,
											"end": 15574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 15493,
											"end": 15574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 15493,
											"end": 15574,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15493,
											"end": 15574,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 15493,
											"end": 15574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15493,
											"end": 15574,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15493,
											"end": 15574,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15493,
											"end": 15574,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15493,
											"end": 15574,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15493,
											"end": 15574,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 15493,
											"end": 15574,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15493,
											"end": 15574,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15493,
											"end": 15574,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15493,
											"end": 15574,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15493,
											"end": 15574,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15493,
											"end": 15574,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15493,
											"end": 15574,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15493,
											"end": 15574,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15493,
											"end": 15574,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15493,
											"end": 15574,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15493,
											"end": 15574,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15493,
											"end": 15574,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15493,
											"end": 15574,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15493,
											"end": 15574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15493,
											"end": 15574,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 17877,
											"end": 18084,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 17877,
											"end": 18084,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17877,
											"end": 18084,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 17877,
											"end": 18084,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17877,
											"end": 18084,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17877,
											"end": 18084,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 17877,
											"end": 18084,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17877,
											"end": 18084,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17877,
											"end": 18084,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17877,
											"end": 18084,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 17877,
											"end": 18084,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17877,
											"end": 18084,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17877,
											"end": 18084,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17877,
											"end": 18084,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17877,
											"end": 18084,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17877,
											"end": 18084,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 17877,
											"end": 18084,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17877,
											"end": 18084,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17877,
											"end": 18084,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17877,
											"end": 18084,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17877,
											"end": 18084,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17877,
											"end": 18084,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17877,
											"end": 18084,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17877,
											"end": 18084,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 17877,
											"end": 18084,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17877,
											"end": 18084,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17877,
											"end": 18084,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17877,
											"end": 18084,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17877,
											"end": 18084,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17877,
											"end": 18084,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17877,
											"end": 18084,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17877,
											"end": 18084,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17877,
											"end": 18084,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17877,
											"end": 18084,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17877,
											"end": 18084,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 17877,
											"end": 18084,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17877,
											"end": 18084,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17877,
											"end": 18084,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17877,
											"end": 18084,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17877,
											"end": 18084,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17877,
											"end": 18084,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17877,
											"end": 18084,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17877,
											"end": 18084,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17877,
											"end": 18084,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17877,
											"end": 18084,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17877,
											"end": 18084,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 17877,
											"end": 18084,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17877,
											"end": 18084,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 17877,
											"end": 18084,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17877,
											"end": 18084,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17877,
											"end": 18084,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17877,
											"end": 18084,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17877,
											"end": 18084,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17877,
											"end": 18084,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17877,
											"end": 18084,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17877,
											"end": 18084,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17877,
											"end": 18084,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17877,
											"end": 18084,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17877,
											"end": 18084,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17877,
											"end": 18084,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17877,
											"end": 18084,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17877,
											"end": 18084,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17877,
											"end": 18084,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17877,
											"end": 18084,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17877,
											"end": 18084,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17877,
											"end": 18084,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17877,
											"end": 18084,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17877,
											"end": 18084,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17877,
											"end": 18084,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 18970,
											"end": 19072,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 18970,
											"end": 19072,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18970,
											"end": 19072,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 18970,
											"end": 19072,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 18970,
											"end": 19072,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18970,
											"end": 19072,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 18970,
											"end": 19072,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18970,
											"end": 19072,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18970,
											"end": 19072,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18970,
											"end": 19072,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 18970,
											"end": 19072,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18970,
											"end": 19072,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 18970,
											"end": 19072,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18970,
											"end": 19072,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18970,
											"end": 19072,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18970,
											"end": 19072,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 18970,
											"end": 19072,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 18970,
											"end": 19072,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18970,
											"end": 19072,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18970,
											"end": 19072,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18970,
											"end": 19072,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18970,
											"end": 19072,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18970,
											"end": 19072,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18970,
											"end": 19072,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 18970,
											"end": 19072,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18970,
											"end": 19072,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18970,
											"end": 19072,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18970,
											"end": 19072,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18970,
											"end": 19072,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18970,
											"end": 19072,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18970,
											"end": 19072,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18970,
											"end": 19072,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18970,
											"end": 19072,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18970,
											"end": 19072,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18970,
											"end": 19072,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 18970,
											"end": 19072,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18970,
											"end": 19072,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18970,
											"end": 19072,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18970,
											"end": 19072,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18970,
											"end": 19072,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18970,
											"end": 19072,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18970,
											"end": 19072,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18970,
											"end": 19072,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18970,
											"end": 19072,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18970,
											"end": 19072,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18970,
											"end": 19072,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 18970,
											"end": 19072,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18970,
											"end": 19072,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 18970,
											"end": 19072,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18970,
											"end": 19072,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 19177,
											"end": 19257,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 19177,
											"end": 19257,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19177,
											"end": 19257,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 19177,
											"end": 19257,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 19177,
											"end": 19257,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19177,
											"end": 19257,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 19177,
											"end": 19257,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 19177,
											"end": 19257,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19177,
											"end": 19257,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19177,
											"end": 19257,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 19177,
											"end": 19257,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19177,
											"end": 19257,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 19177,
											"end": 19257,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19177,
											"end": 19257,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19177,
											"end": 19257,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19177,
											"end": 19257,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 19177,
											"end": 19257,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 19177,
											"end": 19257,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19177,
											"end": 19257,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19177,
											"end": 19257,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19177,
											"end": 19257,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19177,
											"end": 19257,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19177,
											"end": 19257,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19177,
											"end": 19257,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 19177,
											"end": 19257,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19177,
											"end": 19257,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19177,
											"end": 19257,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19177,
											"end": 19257,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19177,
											"end": 19257,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 19177,
											"end": 19257,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19177,
											"end": 19257,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19177,
											"end": 19257,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19177,
											"end": 19257,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19177,
											"end": 19257,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19177,
											"end": 19257,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 19177,
											"end": 19257,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19177,
											"end": 19257,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 19177,
											"end": 19257,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19177,
											"end": 19257,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 15786,
											"end": 15902,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 15786,
											"end": 15902,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15786,
											"end": 15902,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 15786,
											"end": 15902,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15786,
											"end": 15902,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15786,
											"end": 15902,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 15786,
											"end": 15902,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15786,
											"end": 15902,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15786,
											"end": 15902,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15786,
											"end": 15902,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 15786,
											"end": 15902,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15786,
											"end": 15902,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 15786,
											"end": 15902,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15786,
											"end": 15902,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15786,
											"end": 15902,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15786,
											"end": 15902,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 15786,
											"end": 15902,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 15786,
											"end": 15902,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15786,
											"end": 15902,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15786,
											"end": 15902,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15786,
											"end": 15902,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15786,
											"end": 15902,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15786,
											"end": 15902,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15786,
											"end": 15902,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 15786,
											"end": 15902,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15786,
											"end": 15902,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15786,
											"end": 15902,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15786,
											"end": 15902,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15786,
											"end": 15902,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15786,
											"end": 15902,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15786,
											"end": 15902,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 15786,
											"end": 15902,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15786,
											"end": 15902,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15786,
											"end": 15902,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15786,
											"end": 15902,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15786,
											"end": 15902,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15786,
											"end": 15902,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 15786,
											"end": 15902,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15786,
											"end": 15902,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 15786,
											"end": 15902,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15786,
											"end": 15902,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15786,
											"end": 15902,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15786,
											"end": 15902,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15786,
											"end": 15902,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15786,
											"end": 15902,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15786,
											"end": 15902,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15786,
											"end": 15902,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15786,
											"end": 15902,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15786,
											"end": 15902,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15786,
											"end": 15902,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15786,
											"end": 15902,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15786,
											"end": 15902,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15786,
											"end": 15902,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15786,
											"end": 15902,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15786,
											"end": 15902,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15786,
											"end": 15902,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15786,
											"end": 15902,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15786,
											"end": 15902,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 11913,
											"end": 12194,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 11913,
											"end": 12194,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11913,
											"end": 12194,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 11913,
											"end": 12194,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 11913,
											"end": 12194,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11913,
											"end": 12194,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 11913,
											"end": 12194,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11913,
											"end": 12194,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 19553,
											"end": 19823,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 19553,
											"end": 19823,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19553,
											"end": 19823,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 19553,
											"end": 19823,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 19553,
											"end": 19823,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19553,
											"end": 19823,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 19553,
											"end": 19823,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 19553,
											"end": 19823,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19553,
											"end": 19823,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19553,
											"end": 19823,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 19553,
											"end": 19823,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19553,
											"end": 19823,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 19553,
											"end": 19823,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19553,
											"end": 19823,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19553,
											"end": 19823,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19553,
											"end": 19823,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 19553,
											"end": 19823,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 19553,
											"end": 19823,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19553,
											"end": 19823,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19553,
											"end": 19823,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19553,
											"end": 19823,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19553,
											"end": 19823,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19553,
											"end": 19823,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19553,
											"end": 19823,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 19553,
											"end": 19823,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19553,
											"end": 19823,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19553,
											"end": 19823,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19553,
											"end": 19823,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19553,
											"end": 19823,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19553,
											"end": 19823,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19553,
											"end": 19823,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 19553,
											"end": 19823,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19553,
											"end": 19823,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19553,
											"end": 19823,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19553,
											"end": 19823,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 19553,
											"end": 19823,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19553,
											"end": 19823,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19553,
											"end": 19823,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19553,
											"end": 19823,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19553,
											"end": 19823,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 19553,
											"end": 19823,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19553,
											"end": 19823,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19553,
											"end": 19823,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19553,
											"end": 19823,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19553,
											"end": 19823,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19553,
											"end": 19823,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 19553,
											"end": 19823,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19553,
											"end": 19823,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 19553,
											"end": 19823,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19553,
											"end": 19823,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 11435,
											"end": 11512,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 11435,
											"end": 11512,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11435,
											"end": 11512,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 11435,
											"end": 11512,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 11435,
											"end": 11512,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11435,
											"end": 11512,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 11435,
											"end": 11512,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11435,
											"end": 11512,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11435,
											"end": 11512,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11435,
											"end": 11512,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11435,
											"end": 11512,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11435,
											"end": 11512,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11435,
											"end": 11512,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11435,
											"end": 11512,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11435,
											"end": 11512,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11435,
											"end": 11512,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11435,
											"end": 11512,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11435,
											"end": 11512,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11435,
											"end": 11512,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11435,
											"end": 11512,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11435,
											"end": 11512,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11435,
											"end": 11512,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11435,
											"end": 11512,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11435,
											"end": 11512,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11435,
											"end": 11512,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11435,
											"end": 11512,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11435,
											"end": 11512,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 14798,
											"end": 14882,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 14798,
											"end": 14882,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14798,
											"end": 14882,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 14798,
											"end": 14882,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 14798,
											"end": 14882,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14798,
											"end": 14882,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 14798,
											"end": 14882,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14798,
											"end": 14882,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14798,
											"end": 14882,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14798,
											"end": 14882,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14798,
											"end": 14882,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14798,
											"end": 14882,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14798,
											"end": 14882,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14798,
											"end": 14882,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14798,
											"end": 14882,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14798,
											"end": 14882,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14798,
											"end": 14882,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14798,
											"end": 14882,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14798,
											"end": 14882,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14798,
											"end": 14882,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14798,
											"end": 14882,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14798,
											"end": 14882,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14798,
											"end": 14882,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14798,
											"end": 14882,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14798,
											"end": 14882,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14798,
											"end": 14882,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14798,
											"end": 14882,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14798,
											"end": 14882,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14798,
											"end": 14882,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14798,
											"end": 14882,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14798,
											"end": 14882,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14798,
											"end": 14882,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14798,
											"end": 14882,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14798,
											"end": 14882,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14798,
											"end": 14882,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14798,
											"end": 14882,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14798,
											"end": 14882,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14798,
											"end": 14882,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14798,
											"end": 14882,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 14798,
											"end": 14882,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14798,
											"end": 14882,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14798,
											"end": 14882,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14798,
											"end": 14882,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 14798,
											"end": 14882,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14798,
											"end": 14882,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 14798,
											"end": 14882,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14798,
											"end": 14882,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14798,
											"end": 14882,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14798,
											"end": 14882,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14798,
											"end": 14882,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14798,
											"end": 14882,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14798,
											"end": 14882,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14798,
											"end": 14882,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14798,
											"end": 14882,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14798,
											"end": 14882,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14798,
											"end": 14882,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14798,
											"end": 14882,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14798,
											"end": 14882,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14798,
											"end": 14882,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14798,
											"end": 14882,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 14798,
											"end": 14882,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14798,
											"end": 14882,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 14798,
											"end": 14882,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14798,
											"end": 14882,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14798,
											"end": 14882,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14798,
											"end": 14882,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14798,
											"end": 14882,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14798,
											"end": 14882,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14798,
											"end": 14882,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14798,
											"end": 14882,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14798,
											"end": 14882,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14798,
											"end": 14882,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14798,
											"end": 14882,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14798,
											"end": 14882,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 14798,
											"end": 14882,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14798,
											"end": 14882,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14798,
											"end": 14882,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14798,
											"end": 14882,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 14798,
											"end": 14882,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14798,
											"end": 14882,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14798,
											"end": 14882,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14798,
											"end": 14882,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14798,
											"end": 14882,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14798,
											"end": 14882,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14798,
											"end": 14882,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14798,
											"end": 14882,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14798,
											"end": 14882,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14798,
											"end": 14882,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14798,
											"end": 14882,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 14798,
											"end": 14882,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 14798,
											"end": 14882,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14798,
											"end": 14882,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 14798,
											"end": 14882,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14798,
											"end": 14882,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14798,
											"end": 14882,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14798,
											"end": 14882,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14798,
											"end": 14882,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14798,
											"end": 14882,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14798,
											"end": 14882,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14798,
											"end": 14882,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 14798,
											"end": 14882,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14798,
											"end": 14882,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14798,
											"end": 14882,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14798,
											"end": 14882,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14798,
											"end": 14882,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14798,
											"end": 14882,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14798,
											"end": 14882,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14798,
											"end": 14882,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14798,
											"end": 14882,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14798,
											"end": 14882,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14798,
											"end": 14882,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14798,
											"end": 14882,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14798,
											"end": 14882,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 18558,
											"end": 18808,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 18558,
											"end": 18808,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18558,
											"end": 18808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 18558,
											"end": 18808,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 18558,
											"end": 18808,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18558,
											"end": 18808,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 18558,
											"end": 18808,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18558,
											"end": 18808,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18558,
											"end": 18808,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18558,
											"end": 18808,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 18558,
											"end": 18808,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18558,
											"end": 18808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 18558,
											"end": 18808,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18558,
											"end": 18808,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18558,
											"end": 18808,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18558,
											"end": 18808,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 18558,
											"end": 18808,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 18558,
											"end": 18808,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18558,
											"end": 18808,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18558,
											"end": 18808,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18558,
											"end": 18808,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18558,
											"end": 18808,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18558,
											"end": 18808,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18558,
											"end": 18808,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 18558,
											"end": 18808,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18558,
											"end": 18808,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18558,
											"end": 18808,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18558,
											"end": 18808,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18558,
											"end": 18808,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18558,
											"end": 18808,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18558,
											"end": 18808,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18558,
											"end": 18808,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18558,
											"end": 18808,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18558,
											"end": 18808,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18558,
											"end": 18808,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 18558,
											"end": 18808,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18558,
											"end": 18808,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18558,
											"end": 18808,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18558,
											"end": 18808,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18558,
											"end": 18808,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18558,
											"end": 18808,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18558,
											"end": 18808,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18558,
											"end": 18808,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18558,
											"end": 18808,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18558,
											"end": 18808,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18558,
											"end": 18808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 18558,
											"end": 18808,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18558,
											"end": 18808,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 18558,
											"end": 18808,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18558,
											"end": 18808,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18558,
											"end": 18808,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18558,
											"end": 18808,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18558,
											"end": 18808,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18558,
											"end": 18808,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18558,
											"end": 18808,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18558,
											"end": 18808,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18558,
											"end": 18808,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18558,
											"end": 18808,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18558,
											"end": 18808,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18558,
											"end": 18808,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18558,
											"end": 18808,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18558,
											"end": 18808,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18558,
											"end": 18808,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18558,
											"end": 18808,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18558,
											"end": 18808,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18558,
											"end": 18808,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18558,
											"end": 18808,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18558,
											"end": 18808,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18558,
											"end": 18808,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 16099,
											"end": 16262,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 16099,
											"end": 16262,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16099,
											"end": 16262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 16099,
											"end": 16262,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16099,
											"end": 16262,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16099,
											"end": 16262,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 16099,
											"end": 16262,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16099,
											"end": 16262,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16099,
											"end": 16262,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16099,
											"end": 16262,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 16099,
											"end": 16262,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16099,
											"end": 16262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 16099,
											"end": 16262,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16099,
											"end": 16262,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16099,
											"end": 16262,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16099,
											"end": 16262,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16099,
											"end": 16262,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 16099,
											"end": 16262,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16099,
											"end": 16262,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16099,
											"end": 16262,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16099,
											"end": 16262,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16099,
											"end": 16262,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16099,
											"end": 16262,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16099,
											"end": 16262,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 16099,
											"end": 16262,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16099,
											"end": 16262,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16099,
											"end": 16262,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16099,
											"end": 16262,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16099,
											"end": 16262,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16099,
											"end": 16262,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16099,
											"end": 16262,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 16099,
											"end": 16262,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16099,
											"end": 16262,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16099,
											"end": 16262,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16099,
											"end": 16262,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 16099,
											"end": 16262,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16099,
											"end": 16262,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16099,
											"end": 16262,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16099,
											"end": 16262,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16099,
											"end": 16262,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 16099,
											"end": 16262,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16099,
											"end": 16262,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16099,
											"end": 16262,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16099,
											"end": 16262,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16099,
											"end": 16262,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16099,
											"end": 16262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 16099,
											"end": 16262,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16099,
											"end": 16262,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 16099,
											"end": 16262,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16099,
											"end": 16262,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16099,
											"end": 16262,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16099,
											"end": 16262,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16099,
											"end": 16262,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16099,
											"end": 16262,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16099,
											"end": 16262,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16099,
											"end": 16262,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16099,
											"end": 16262,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16099,
											"end": 16262,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16099,
											"end": 16262,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16099,
											"end": 16262,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16099,
											"end": 16262,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16099,
											"end": 16262,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16099,
											"end": 16262,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16099,
											"end": 16262,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16099,
											"end": 16262,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16099,
											"end": 16262,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16099,
											"end": 16262,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16099,
											"end": 16262,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16099,
											"end": 16262,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 16322,
											"end": 16462,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 16322,
											"end": 16462,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16322,
											"end": 16462,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 16322,
											"end": 16462,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16322,
											"end": 16462,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16322,
											"end": 16462,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 16322,
											"end": 16462,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16322,
											"end": 16462,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16322,
											"end": 16462,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16322,
											"end": 16462,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 16322,
											"end": 16462,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16322,
											"end": 16462,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 16322,
											"end": 16462,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16322,
											"end": 16462,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16322,
											"end": 16462,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16322,
											"end": 16462,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16322,
											"end": 16462,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 16322,
											"end": 16462,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16322,
											"end": 16462,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16322,
											"end": 16462,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16322,
											"end": 16462,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16322,
											"end": 16462,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16322,
											"end": 16462,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16322,
											"end": 16462,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 16322,
											"end": 16462,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16322,
											"end": 16462,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16322,
											"end": 16462,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16322,
											"end": 16462,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16322,
											"end": 16462,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16322,
											"end": 16462,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16322,
											"end": 16462,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 16322,
											"end": 16462,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16322,
											"end": 16462,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16322,
											"end": 16462,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16322,
											"end": 16462,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 16322,
											"end": 16462,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16322,
											"end": 16462,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16322,
											"end": 16462,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16322,
											"end": 16462,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16322,
											"end": 16462,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16322,
											"end": 16462,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16322,
											"end": 16462,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 16322,
											"end": 16462,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16322,
											"end": 16462,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16322,
											"end": 16462,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16322,
											"end": 16462,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16322,
											"end": 16462,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16322,
											"end": 16462,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 16322,
											"end": 16462,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16322,
											"end": 16462,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 16322,
											"end": 16462,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16322,
											"end": 16462,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16322,
											"end": 16462,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16322,
											"end": 16462,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16322,
											"end": 16462,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16322,
											"end": 16462,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16322,
											"end": 16462,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16322,
											"end": 16462,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16322,
											"end": 16462,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16322,
											"end": 16462,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16322,
											"end": 16462,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16322,
											"end": 16462,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16322,
											"end": 16462,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16322,
											"end": 16462,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16322,
											"end": 16462,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16322,
											"end": 16462,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16322,
											"end": 16462,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16322,
											"end": 16462,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16322,
											"end": 16462,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 12345,
											"end": 12527,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 12345,
											"end": 12527,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12345,
											"end": 12527,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 12345,
											"end": 12527,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12345,
											"end": 12527,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12345,
											"end": 12527,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 12345,
											"end": 12527,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12345,
											"end": 12527,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12345,
											"end": 12527,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12345,
											"end": 12527,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 12345,
											"end": 12527,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12345,
											"end": 12527,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 12345,
											"end": 12527,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12345,
											"end": 12527,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12345,
											"end": 12527,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12345,
											"end": 12527,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12345,
											"end": 12527,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 12345,
											"end": 12527,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12345,
											"end": 12527,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12345,
											"end": 12527,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12345,
											"end": 12527,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12345,
											"end": 12527,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12345,
											"end": 12527,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12345,
											"end": 12527,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 12345,
											"end": 12527,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12345,
											"end": 12527,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12345,
											"end": 12527,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12345,
											"end": 12527,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12345,
											"end": 12527,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12345,
											"end": 12527,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12345,
											"end": 12527,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12345,
											"end": 12527,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12345,
											"end": 12527,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12345,
											"end": 12527,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12345,
											"end": 12527,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12345,
											"end": 12527,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12345,
											"end": 12527,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 12345,
											"end": 12527,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12345,
											"end": 12527,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 12345,
											"end": 12527,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12345,
											"end": 12527,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 14607,
											"end": 14688,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 14607,
											"end": 14688,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14644,
											"end": 14657,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 14676,
											"end": 14681,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 14669,
											"end": 14681,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14669,
											"end": 14681,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14669,
											"end": 14681,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14669,
											"end": 14681,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14669,
											"end": 14681,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14669,
											"end": 14681,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14669,
											"end": 14681,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14669,
											"end": 14681,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 14669,
											"end": 14681,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 14669,
											"end": 14681,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14669,
											"end": 14681,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14669,
											"end": 14681,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 14669,
											"end": 14681,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14669,
											"end": 14681,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 14669,
											"end": 14681,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14669,
											"end": 14681,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 14669,
											"end": 14681,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14669,
											"end": 14681,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14669,
											"end": 14681,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14669,
											"end": 14681,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14669,
											"end": 14681,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 14669,
											"end": 14681,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 14669,
											"end": 14681,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14669,
											"end": 14681,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14669,
											"end": 14681,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14669,
											"end": 14681,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14669,
											"end": 14681,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14669,
											"end": 14681,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14669,
											"end": 14681,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14669,
											"end": 14681,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14669,
											"end": 14681,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14669,
											"end": 14681,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14669,
											"end": 14681,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14669,
											"end": 14681,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14669,
											"end": 14681,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14669,
											"end": 14681,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14669,
											"end": 14681,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14669,
											"end": 14681,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14669,
											"end": 14681,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14669,
											"end": 14681,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14669,
											"end": 14681,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14669,
											"end": 14681,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14669,
											"end": 14681,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14669,
											"end": 14681,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14669,
											"end": 14681,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14669,
											"end": 14681,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14669,
											"end": 14681,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14669,
											"end": 14681,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14669,
											"end": 14681,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 14669,
											"end": 14681,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 14669,
											"end": 14681,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14669,
											"end": 14681,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14669,
											"end": 14681,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 14669,
											"end": 14681,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14669,
											"end": 14681,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 14669,
											"end": 14681,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14669,
											"end": 14681,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14669,
											"end": 14681,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 14669,
											"end": 14681,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14669,
											"end": 14681,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14669,
											"end": 14681,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 14669,
											"end": 14681,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 14669,
											"end": 14681,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 14669,
											"end": 14681,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14669,
											"end": 14681,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 14669,
											"end": 14681,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14669,
											"end": 14681,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14669,
											"end": 14681,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14669,
											"end": 14681,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 14669,
											"end": 14681,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 14669,
											"end": 14681,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14669,
											"end": 14681,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14669,
											"end": 14681,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14669,
											"end": 14681,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14669,
											"end": 14681,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14669,
											"end": 14681,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14669,
											"end": 14681,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 14669,
											"end": 14681,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14669,
											"end": 14681,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 14669,
											"end": 14681,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14669,
											"end": 14681,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14669,
											"end": 14681,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14669,
											"end": 14681,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14669,
											"end": 14681,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14669,
											"end": 14681,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14669,
											"end": 14681,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14669,
											"end": 14681,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14669,
											"end": 14681,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14669,
											"end": 14681,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14669,
											"end": 14681,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14669,
											"end": 14681,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 14669,
											"end": 14681,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14669,
											"end": 14681,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14669,
											"end": 14681,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14669,
											"end": 14681,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14669,
											"end": 14681,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14669,
											"end": 14681,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14669,
											"end": 14681,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14669,
											"end": 14681,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14669,
											"end": 14681,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14669,
											"end": 14681,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14669,
											"end": 14681,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14669,
											"end": 14681,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14669,
											"end": 14681,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14669,
											"end": 14681,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 14669,
											"end": 14681,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 14669,
											"end": 14681,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14669,
											"end": 14681,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14669,
											"end": 14681,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14669,
											"end": 14681,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14669,
											"end": 14681,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 14669,
											"end": 14681,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14669,
											"end": 14681,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14669,
											"end": 14681,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14669,
											"end": 14681,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14669,
											"end": 14681,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 14669,
											"end": 14681,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14669,
											"end": 14681,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14669,
											"end": 14681,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14669,
											"end": 14681,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14669,
											"end": 14681,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14669,
											"end": 14681,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14669,
											"end": 14681,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14669,
											"end": 14681,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14607,
											"end": 14688,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14607,
											"end": 14688,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 16594,
											"end": 16751,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 16594,
											"end": 16751,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16669,
											"end": 16673,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16685,
											"end": 16723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 16694,
											"end": 16706,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 16694,
											"end": 16704,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 16694,
											"end": 16706,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16694,
											"end": 16706,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 16694,
											"end": 16706,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16707,
											"end": 16714,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16716,
											"end": 16722,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16685,
											"end": 16693,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 16685,
											"end": 16723,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16685,
											"end": 16723,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 16685,
											"end": 16723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16740,
											"end": 16744,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 16733,
											"end": 16744,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16733,
											"end": 16744,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16594,
											"end": 16751,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 16594,
											"end": 16751,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16594,
											"end": 16751,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16594,
											"end": 16751,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16594,
											"end": 16751,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 15632,
											"end": 15730,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 15632,
											"end": 15730,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15685,
											"end": 15692,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15711,
											"end": 15723,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 15711,
											"end": 15723,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 15704,
											"end": 15723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15704,
											"end": 15723,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15632,
											"end": 15730,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15632,
											"end": 15730,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 17206,
											"end": 17493,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 17206,
											"end": 17493,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17304,
											"end": 17308,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17319,
											"end": 17353,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 17329,
											"end": 17335,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 17336,
											"end": 17345,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 17346,
											"end": 17352,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 17319,
											"end": 17328,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 17319,
											"end": 17353,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17319,
											"end": 17353,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 17319,
											"end": 17353,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17363,
											"end": 17465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 17372,
											"end": 17378,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 17380,
											"end": 17392,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 17380,
											"end": 17390,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 17380,
											"end": 17392,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17380,
											"end": 17392,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 17380,
											"end": 17392,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17394,
											"end": 17464,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 17432,
											"end": 17438,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 17394,
											"end": 17464,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17394,
											"end": 17464,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17394,
											"end": 17464,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17394,
											"end": 17464,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17394,
											"end": 17464,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17394,
											"end": 17464,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17394,
											"end": 17464,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17394,
											"end": 17464,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17394,
											"end": 17464,
											"name": "PUSH",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 17394,
											"end": 17464,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17394,
											"end": 17464,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17394,
											"end": 17464,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17394,
											"end": 17464,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17394,
											"end": 17464,
											"name": "PUSH",
											"source": 0,
											"value": "45524332303A207472616E7366657220616D6F756E7400000000000000000000"
										},
										{
											"begin": 17394,
											"end": 17464,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17394,
											"end": 17464,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17394,
											"end": 17464,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17394,
											"end": 17405,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 17394,
											"end": 17413,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17406,
											"end": 17412,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 17394,
											"end": 17413,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17394,
											"end": 17413,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17394,
											"end": 17413,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17394,
											"end": 17413,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17394,
											"end": 17413,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17394,
											"end": 17413,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17394,
											"end": 17413,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17394,
											"end": 17413,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17394,
											"end": 17413,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17394,
											"end": 17413,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17394,
											"end": 17413,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17394,
											"end": 17413,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17394,
											"end": 17413,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17394,
											"end": 17413,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17394,
											"end": 17413,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17394,
											"end": 17427,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17414,
											"end": 17426,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 17414,
											"end": 17424,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 17414,
											"end": 17426,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17414,
											"end": 17426,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 17414,
											"end": 17426,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17394,
											"end": 17427,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17394,
											"end": 17427,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17394,
											"end": 17427,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17394,
											"end": 17427,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17394,
											"end": 17427,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17394,
											"end": 17427,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17394,
											"end": 17427,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17394,
											"end": 17427,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17394,
											"end": 17427,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17394,
											"end": 17427,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17394,
											"end": 17427,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17394,
											"end": 17427,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17394,
											"end": 17427,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17394,
											"end": 17427,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17394,
											"end": 17427,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17394,
											"end": 17427,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17394,
											"end": 17431,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 17394,
											"end": 17431,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17394,
											"end": 17464,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17394,
											"end": 17464,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17394,
											"end": 17464,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17394,
											"end": 17464,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 17394,
											"end": 17464,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17394,
											"end": 17464,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17394,
											"end": 17464,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 17394,
											"end": 17464,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17363,
											"end": 17371,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 17363,
											"end": 17465,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17363,
											"end": 17465,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 17363,
											"end": 17465,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17482,
											"end": 17486,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 17475,
											"end": 17486,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17475,
											"end": 17486,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17206,
											"end": 17493,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 17206,
											"end": 17493,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17206,
											"end": 17493,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17206,
											"end": 17493,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17206,
											"end": 17493,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17206,
											"end": 17493,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 15493,
											"end": 15574,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 15493,
											"end": 15574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15534,
											"end": 15539,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15558,
											"end": 15567,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 15558,
											"end": 15567,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15558,
											"end": 15567,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15558,
											"end": 15567,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 15558,
											"end": 15567,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15558,
											"end": 15567,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 15558,
											"end": 15567,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 15558,
											"end": 15567,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15558,
											"end": 15567,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 15558,
											"end": 15567,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 15558,
											"end": 15567,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15551,
											"end": 15567,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15551,
											"end": 15567,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15493,
											"end": 15574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15493,
											"end": 15574,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 17877,
											"end": 18084,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 17877,
											"end": 18084,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17957,
											"end": 17961,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17973,
											"end": 18056,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 17982,
											"end": 17994,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 17982,
											"end": 17992,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 17982,
											"end": 17994,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17982,
											"end": 17994,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 17982,
											"end": 17994,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17996,
											"end": 18003,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 18005,
											"end": 18055,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 18044,
											"end": 18054,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 18005,
											"end": 18016,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 18005,
											"end": 18030,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18017,
											"end": 18029,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 18017,
											"end": 18027,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 18017,
											"end": 18029,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18017,
											"end": 18029,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 18017,
											"end": 18029,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18005,
											"end": 18030,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18005,
											"end": 18030,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18005,
											"end": 18030,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18005,
											"end": 18030,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18005,
											"end": 18030,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18005,
											"end": 18030,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18005,
											"end": 18030,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18005,
											"end": 18030,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18005,
											"end": 18030,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18005,
											"end": 18030,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18005,
											"end": 18030,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18005,
											"end": 18030,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18005,
											"end": 18030,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18005,
											"end": 18030,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18005,
											"end": 18030,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 18005,
											"end": 18039,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18031,
											"end": 18038,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 18005,
											"end": 18039,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18005,
											"end": 18039,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18005,
											"end": 18039,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18005,
											"end": 18039,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18005,
											"end": 18039,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18005,
											"end": 18039,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18005,
											"end": 18039,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18005,
											"end": 18039,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18005,
											"end": 18039,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18005,
											"end": 18039,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18005,
											"end": 18039,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18005,
											"end": 18039,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18005,
											"end": 18039,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18005,
											"end": 18039,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18005,
											"end": 18039,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 18005,
											"end": 18039,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18005,
											"end": 18043,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 18005,
											"end": 18043,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18005,
											"end": 18055,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18005,
											"end": 18055,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18005,
											"end": 18055,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 18005,
											"end": 18055,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18005,
											"end": 18055,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18005,
											"end": 18055,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 18005,
											"end": 18055,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17973,
											"end": 17981,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 17973,
											"end": 18056,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17973,
											"end": 18056,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 17973,
											"end": 18056,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18073,
											"end": 18077,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 18066,
											"end": 18077,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18066,
											"end": 18077,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17877,
											"end": 18084,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17877,
											"end": 18084,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17877,
											"end": 18084,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17877,
											"end": 18084,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17877,
											"end": 18084,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 18970,
											"end": 19072,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 18970,
											"end": 19072,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11644,
											"end": 11656,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 11644,
											"end": 11654,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 11644,
											"end": 11656,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11644,
											"end": 11656,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 11644,
											"end": 11656,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11633,
											"end": 11656,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11633,
											"end": 11656,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11633,
											"end": 11640,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 11633,
											"end": 11638,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 11633,
											"end": 11640,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11633,
											"end": 11640,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 11633,
											"end": 11640,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11633,
											"end": 11656,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11633,
											"end": 11656,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11633,
											"end": 11656,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11625,
											"end": 11693,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 11625,
											"end": 11693,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11625,
											"end": 11693,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11625,
											"end": 11693,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11625,
											"end": 11693,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11625,
											"end": 11693,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11625,
											"end": 11693,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11625,
											"end": 11693,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11625,
											"end": 11693,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11625,
											"end": 11693,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11625,
											"end": 11693,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11625,
											"end": 11693,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11625,
											"end": 11693,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11625,
											"end": 11693,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11625,
											"end": 11693,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11625,
											"end": 11693,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11625,
											"end": 11693,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11625,
											"end": 11693,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11625,
											"end": 11693,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11625,
											"end": 11693,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11625,
											"end": 11693,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11625,
											"end": 11693,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11625,
											"end": 11693,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11625,
											"end": 11693,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11625,
											"end": 11693,
											"name": "PUSH",
											"source": 0,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 11625,
											"end": 11693,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11625,
											"end": 11693,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11625,
											"end": 11693,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11625,
											"end": 11693,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11625,
											"end": 11693,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11625,
											"end": 11693,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11625,
											"end": 11693,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11625,
											"end": 11693,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11625,
											"end": 11693,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11625,
											"end": 11693,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11625,
											"end": 11693,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11625,
											"end": 11693,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11625,
											"end": 11693,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11625,
											"end": 11693,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11625,
											"end": 11693,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11625,
											"end": 11693,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 11625,
											"end": 11693,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19044,
											"end": 19065,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 19050,
											"end": 19057,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19058,
											"end": 19064,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19044,
											"end": 19049,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 19044,
											"end": 19065,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19044,
											"end": 19065,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 19044,
											"end": 19065,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18970,
											"end": 19072,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18970,
											"end": 19072,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18970,
											"end": 19072,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 19177,
											"end": 19257,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 19177,
											"end": 19257,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19224,
											"end": 19250,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 19230,
											"end": 19242,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 19230,
											"end": 19240,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 19230,
											"end": 19242,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19230,
											"end": 19242,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 19230,
											"end": 19242,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19243,
											"end": 19249,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19224,
											"end": 19229,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 19224,
											"end": 19250,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19224,
											"end": 19250,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 19224,
											"end": 19250,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19177,
											"end": 19257,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19177,
											"end": 19257,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 15786,
											"end": 15902,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 15786,
											"end": 15902,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15852,
											"end": 15859,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15877,
											"end": 15886,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 15877,
											"end": 15895,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15887,
											"end": 15894,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15877,
											"end": 15895,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15877,
											"end": 15895,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15877,
											"end": 15895,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15877,
											"end": 15895,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15877,
											"end": 15895,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15877,
											"end": 15895,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15877,
											"end": 15895,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15877,
											"end": 15895,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15877,
											"end": 15895,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15877,
											"end": 15895,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15877,
											"end": 15895,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15877,
											"end": 15895,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15877,
											"end": 15895,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15877,
											"end": 15895,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15877,
											"end": 15895,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 15877,
											"end": 15895,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 15870,
											"end": 15895,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15870,
											"end": 15895,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15786,
											"end": 15902,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15786,
											"end": 15902,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15786,
											"end": 15902,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15786,
											"end": 15902,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 11913,
											"end": 12194,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 11913,
											"end": 12194,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11981,
											"end": 11990,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 11981,
											"end": 11990,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11981,
											"end": 11990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11981,
											"end": 11990,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11981,
											"end": 11990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11981,
											"end": 11990,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 11981,
											"end": 11990,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 11981,
											"end": 11990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11981,
											"end": 11990,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 11981,
											"end": 11990,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11981,
											"end": 11990,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11965,
											"end": 11990,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11965,
											"end": 11990,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11965,
											"end": 11977,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 11965,
											"end": 11975,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 11965,
											"end": 11977,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11965,
											"end": 11977,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 11965,
											"end": 11977,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11965,
											"end": 11990,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11965,
											"end": 11990,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11965,
											"end": 11990,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11957,
											"end": 12039,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 11957,
											"end": 12039,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11957,
											"end": 12039,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11957,
											"end": 12039,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11957,
											"end": 12039,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11957,
											"end": 12039,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11957,
											"end": 12039,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11957,
											"end": 12039,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11957,
											"end": 12039,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11957,
											"end": 12039,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11957,
											"end": 12039,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11957,
											"end": 12039,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11957,
											"end": 12039,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11957,
											"end": 12039,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11957,
											"end": 12039,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11957,
											"end": 12039,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11957,
											"end": 12039,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11957,
											"end": 12039,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11957,
											"end": 12039,
											"name": "PUSH",
											"source": 0,
											"value": "2C"
										},
										{
											"begin": 11957,
											"end": 12039,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11957,
											"end": 12039,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11957,
											"end": 12039,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11957,
											"end": 12039,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11957,
											"end": 12039,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11957,
											"end": 12039,
											"name": "PUSH data",
											"source": 0,
											"value": "F7737555ABF4F07FA9A8E7458B0BA564AC4D7D05336CDBEC0C72AD29C2541514"
										},
										{
											"begin": 11957,
											"end": 12039,
											"name": "PUSH",
											"source": 0,
											"value": "2C"
										},
										{
											"begin": 11957,
											"end": 12039,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11957,
											"end": 12039,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 11957,
											"end": 12039,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11957,
											"end": 12039,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11957,
											"end": 12039,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11957,
											"end": 12039,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11957,
											"end": 12039,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11957,
											"end": 12039,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11957,
											"end": 12039,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11957,
											"end": 12039,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11957,
											"end": 12039,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11957,
											"end": 12039,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11957,
											"end": 12039,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11957,
											"end": 12039,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11957,
											"end": 12039,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 11957,
											"end": 12039,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12049,
											"end": 12065,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12068,
											"end": 12074,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12068,
											"end": 12074,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12068,
											"end": 12074,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12068,
											"end": 12074,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12068,
											"end": 12074,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12068,
											"end": 12074,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 12068,
											"end": 12074,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 12068,
											"end": 12074,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12068,
											"end": 12074,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 12068,
											"end": 12074,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12068,
											"end": 12074,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12049,
											"end": 12074,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12049,
											"end": 12074,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12093,
											"end": 12102,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 12093,
											"end": 12102,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12093,
											"end": 12102,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12093,
											"end": 12102,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12093,
											"end": 12102,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12093,
											"end": 12102,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 12093,
											"end": 12102,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 12093,
											"end": 12102,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12093,
											"end": 12102,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 12093,
											"end": 12102,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12093,
											"end": 12102,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12084,
											"end": 12090,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12084,
											"end": 12090,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12084,
											"end": 12102,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 12084,
											"end": 12102,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 12084,
											"end": 12102,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12084,
											"end": 12102,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12084,
											"end": 12102,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12084,
											"end": 12102,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12084,
											"end": 12102,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 12084,
											"end": 12102,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 12084,
											"end": 12102,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12084,
											"end": 12102,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12084,
											"end": 12102,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12084,
											"end": 12102,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12084,
											"end": 12102,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12084,
											"end": 12102,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 12084,
											"end": 12102,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 12084,
											"end": 12102,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12084,
											"end": 12102,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 12084,
											"end": 12102,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12132,
											"end": 12133,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12112,
											"end": 12121,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 12112,
											"end": 12121,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12112,
											"end": 12134,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 12112,
											"end": 12134,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 12112,
											"end": 12134,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12112,
											"end": 12134,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12112,
											"end": 12134,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12112,
											"end": 12134,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12112,
											"end": 12134,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 12112,
											"end": 12134,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 12112,
											"end": 12134,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12112,
											"end": 12134,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12112,
											"end": 12134,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12112,
											"end": 12134,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12112,
											"end": 12134,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12112,
											"end": 12134,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 12112,
											"end": 12134,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 12112,
											"end": 12134,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12112,
											"end": 12134,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 12112,
											"end": 12134,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12180,
											"end": 12186,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12180,
											"end": 12186,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12180,
											"end": 12186,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12180,
											"end": 12186,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12180,
											"end": 12186,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 12180,
											"end": 12186,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 12180,
											"end": 12186,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12180,
											"end": 12186,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 12180,
											"end": 12186,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12180,
											"end": 12186,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12149,
											"end": 12187,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12149,
											"end": 12187,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12170,
											"end": 12178,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12149,
											"end": 12187,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12149,
											"end": 12187,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12149,
											"end": 12187,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 12149,
											"end": 12187,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12149,
											"end": 12187,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12149,
											"end": 12187,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12149,
											"end": 12187,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12149,
											"end": 12187,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12149,
											"end": 12187,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12149,
											"end": 12187,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12149,
											"end": 12187,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12149,
											"end": 12187,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 11913,
											"end": 12194,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11913,
											"end": 12194,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 19553,
											"end": 19823,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 19553,
											"end": 19823,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19621,
											"end": 19647,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19650,
											"end": 19722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 19687,
											"end": 19693,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19650,
											"end": 19722,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19650,
											"end": 19722,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19650,
											"end": 19722,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19650,
											"end": 19722,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19650,
											"end": 19722,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19650,
											"end": 19722,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19650,
											"end": 19722,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19650,
											"end": 19722,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19650,
											"end": 19722,
											"name": "PUSH",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 19650,
											"end": 19722,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19650,
											"end": 19722,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19650,
											"end": 19722,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19650,
											"end": 19722,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19650,
											"end": 19722,
											"name": "PUSH",
											"source": 0,
											"value": "45524332303A204275726E20616D6F756E742065786375746500000000000000"
										},
										{
											"begin": 19650,
											"end": 19722,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19650,
											"end": 19722,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19650,
											"end": 19722,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19650,
											"end": 19682,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 19660,
											"end": 19667,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 19669,
											"end": 19681,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 19669,
											"end": 19679,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 19669,
											"end": 19681,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19669,
											"end": 19681,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 19669,
											"end": 19681,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19650,
											"end": 19659,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 19650,
											"end": 19682,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19650,
											"end": 19682,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 19650,
											"end": 19682,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19650,
											"end": 19686,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 19650,
											"end": 19686,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19650,
											"end": 19722,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 19650,
											"end": 19722,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19650,
											"end": 19722,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19650,
											"end": 19722,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 19650,
											"end": 19722,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19650,
											"end": 19722,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19650,
											"end": 19722,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 19650,
											"end": 19722,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19621,
											"end": 19722,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19621,
											"end": 19722,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19733,
											"end": 19784,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 19742,
											"end": 19749,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19751,
											"end": 19763,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 19751,
											"end": 19761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 19751,
											"end": 19763,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19751,
											"end": 19763,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 19751,
											"end": 19763,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19765,
											"end": 19783,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19733,
											"end": 19741,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 19733,
											"end": 19784,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19733,
											"end": 19784,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 19733,
											"end": 19784,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19794,
											"end": 19816,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 19800,
											"end": 19807,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19809,
											"end": 19815,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19794,
											"end": 19799,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 19794,
											"end": 19816,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19794,
											"end": 19816,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 19794,
											"end": 19816,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19553,
											"end": 19823,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19553,
											"end": 19823,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19553,
											"end": 19823,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19553,
											"end": 19823,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 11435,
											"end": 11512,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 11435,
											"end": 11512,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11473,
											"end": 11480,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11499,
											"end": 11505,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11499,
											"end": 11505,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11499,
											"end": 11505,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11499,
											"end": 11505,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11499,
											"end": 11505,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11499,
											"end": 11505,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 11499,
											"end": 11505,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 11499,
											"end": 11505,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11499,
											"end": 11505,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 11499,
											"end": 11505,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11499,
											"end": 11505,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11492,
											"end": 11505,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11492,
											"end": 11505,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11435,
											"end": 11512,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11435,
											"end": 11512,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 14798,
											"end": 14882,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 14798,
											"end": 14882,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14837,
											"end": 14850,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 14868,
											"end": 14875,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 14861,
											"end": 14875,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14861,
											"end": 14875,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14861,
											"end": 14875,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14861,
											"end": 14875,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14861,
											"end": 14875,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14861,
											"end": 14875,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14861,
											"end": 14875,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14861,
											"end": 14875,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 14861,
											"end": 14875,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 14861,
											"end": 14875,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14861,
											"end": 14875,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14861,
											"end": 14875,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 14861,
											"end": 14875,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14861,
											"end": 14875,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 14861,
											"end": 14875,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14861,
											"end": 14875,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 14861,
											"end": 14875,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14861,
											"end": 14875,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14861,
											"end": 14875,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14861,
											"end": 14875,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14861,
											"end": 14875,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 14861,
											"end": 14875,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 14861,
											"end": 14875,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14861,
											"end": 14875,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14861,
											"end": 14875,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14861,
											"end": 14875,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14861,
											"end": 14875,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14861,
											"end": 14875,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14861,
											"end": 14875,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14861,
											"end": 14875,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14861,
											"end": 14875,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14861,
											"end": 14875,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14861,
											"end": 14875,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14861,
											"end": 14875,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14861,
											"end": 14875,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14861,
											"end": 14875,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14861,
											"end": 14875,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14861,
											"end": 14875,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14861,
											"end": 14875,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14861,
											"end": 14875,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14861,
											"end": 14875,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14861,
											"end": 14875,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14861,
											"end": 14875,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14861,
											"end": 14875,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14861,
											"end": 14875,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14861,
											"end": 14875,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14861,
											"end": 14875,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14861,
											"end": 14875,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14861,
											"end": 14875,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 14861,
											"end": 14875,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 14861,
											"end": 14875,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14861,
											"end": 14875,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14861,
											"end": 14875,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 14861,
											"end": 14875,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14861,
											"end": 14875,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 14861,
											"end": 14875,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14861,
											"end": 14875,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14861,
											"end": 14875,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 14861,
											"end": 14875,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14861,
											"end": 14875,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14861,
											"end": 14875,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 14861,
											"end": 14875,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 14861,
											"end": 14875,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 14861,
											"end": 14875,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14861,
											"end": 14875,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 14861,
											"end": 14875,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14861,
											"end": 14875,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14861,
											"end": 14875,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14861,
											"end": 14875,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 14861,
											"end": 14875,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 14861,
											"end": 14875,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14861,
											"end": 14875,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14861,
											"end": 14875,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14861,
											"end": 14875,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14861,
											"end": 14875,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14861,
											"end": 14875,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14861,
											"end": 14875,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 14861,
											"end": 14875,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14861,
											"end": 14875,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 14861,
											"end": 14875,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14861,
											"end": 14875,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14861,
											"end": 14875,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14861,
											"end": 14875,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14861,
											"end": 14875,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14861,
											"end": 14875,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14861,
											"end": 14875,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14861,
											"end": 14875,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14861,
											"end": 14875,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14861,
											"end": 14875,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14861,
											"end": 14875,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14861,
											"end": 14875,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 14861,
											"end": 14875,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14861,
											"end": 14875,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14861,
											"end": 14875,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14861,
											"end": 14875,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14861,
											"end": 14875,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14861,
											"end": 14875,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14861,
											"end": 14875,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14861,
											"end": 14875,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14861,
											"end": 14875,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14861,
											"end": 14875,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14861,
											"end": 14875,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14861,
											"end": 14875,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14861,
											"end": 14875,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14861,
											"end": 14875,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 14861,
											"end": 14875,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 14861,
											"end": 14875,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14861,
											"end": 14875,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14861,
											"end": 14875,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14861,
											"end": 14875,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14861,
											"end": 14875,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 14861,
											"end": 14875,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14861,
											"end": 14875,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14861,
											"end": 14875,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14861,
											"end": 14875,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14861,
											"end": 14875,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 14861,
											"end": 14875,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14861,
											"end": 14875,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14861,
											"end": 14875,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14861,
											"end": 14875,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14861,
											"end": 14875,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14861,
											"end": 14875,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14861,
											"end": 14875,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14861,
											"end": 14875,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14798,
											"end": 14882,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14798,
											"end": 14882,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 18558,
											"end": 18808,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 18558,
											"end": 18808,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18638,
											"end": 18642,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18654,
											"end": 18780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 18663,
											"end": 18675,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 18663,
											"end": 18673,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 18663,
											"end": 18675,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18663,
											"end": 18675,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 18663,
											"end": 18675,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18677,
											"end": 18684,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 18686,
											"end": 18779,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 18725,
											"end": 18735,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 18686,
											"end": 18779,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18686,
											"end": 18779,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18686,
											"end": 18779,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18686,
											"end": 18779,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 18686,
											"end": 18779,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18686,
											"end": 18779,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18686,
											"end": 18779,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18686,
											"end": 18779,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18686,
											"end": 18779,
											"name": "PUSH",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 18686,
											"end": 18779,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18686,
											"end": 18779,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18686,
											"end": 18779,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18686,
											"end": 18779,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18686,
											"end": 18779,
											"name": "PUSH data",
											"source": 0,
											"value": "76EF47D3CAC10BDD88984936FBABF838A95158C824F2256C2B05B83385232484"
										},
										{
											"begin": 18686,
											"end": 18779,
											"name": "PUSH",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 18686,
											"end": 18779,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18686,
											"end": 18779,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 18686,
											"end": 18697,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 18686,
											"end": 18711,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18698,
											"end": 18710,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 18698,
											"end": 18708,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 18698,
											"end": 18710,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18698,
											"end": 18710,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 18698,
											"end": 18710,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18686,
											"end": 18711,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18686,
											"end": 18711,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18686,
											"end": 18711,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18686,
											"end": 18711,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18686,
											"end": 18711,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18686,
											"end": 18711,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18686,
											"end": 18711,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18686,
											"end": 18711,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18686,
											"end": 18711,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18686,
											"end": 18711,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18686,
											"end": 18711,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18686,
											"end": 18711,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18686,
											"end": 18711,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18686,
											"end": 18711,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18686,
											"end": 18711,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 18686,
											"end": 18720,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18712,
											"end": 18719,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 18686,
											"end": 18720,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18686,
											"end": 18720,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18686,
											"end": 18720,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18686,
											"end": 18720,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18686,
											"end": 18720,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18686,
											"end": 18720,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18686,
											"end": 18720,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18686,
											"end": 18720,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18686,
											"end": 18720,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18686,
											"end": 18720,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18686,
											"end": 18720,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18686,
											"end": 18720,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18686,
											"end": 18720,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18686,
											"end": 18720,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18686,
											"end": 18720,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 18686,
											"end": 18720,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18686,
											"end": 18724,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 18686,
											"end": 18724,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18686,
											"end": 18779,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18686,
											"end": 18779,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18686,
											"end": 18779,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18686,
											"end": 18779,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 18686,
											"end": 18779,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18686,
											"end": 18779,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18686,
											"end": 18779,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 18686,
											"end": 18779,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18654,
											"end": 18662,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 18654,
											"end": 18780,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18654,
											"end": 18780,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 18654,
											"end": 18780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18797,
											"end": 18801,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 18790,
											"end": 18801,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18790,
											"end": 18801,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18558,
											"end": 18808,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18558,
											"end": 18808,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18558,
											"end": 18808,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18558,
											"end": 18808,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18558,
											"end": 18808,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 16099,
											"end": 16262,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 16099,
											"end": 16262,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16177,
											"end": 16181,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16192,
											"end": 16234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 16202,
											"end": 16214,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 16202,
											"end": 16212,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 16202,
											"end": 16214,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16202,
											"end": 16214,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 16202,
											"end": 16214,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16216,
											"end": 16225,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16227,
											"end": 16233,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16192,
											"end": 16201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 16192,
											"end": 16234,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16192,
											"end": 16234,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 16192,
											"end": 16234,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16251,
											"end": 16255,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 16244,
											"end": 16255,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16244,
											"end": 16255,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16099,
											"end": 16262,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 16099,
											"end": 16262,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16099,
											"end": 16262,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16099,
											"end": 16262,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16099,
											"end": 16262,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 16322,
											"end": 16462,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 16322,
											"end": 16462,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16403,
											"end": 16410,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16428,
											"end": 16439,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 16428,
											"end": 16446,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16440,
											"end": 16445,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16428,
											"end": 16446,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16428,
											"end": 16446,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16428,
											"end": 16446,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16428,
											"end": 16446,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16428,
											"end": 16446,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16428,
											"end": 16446,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16428,
											"end": 16446,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16428,
											"end": 16446,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16428,
											"end": 16446,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16428,
											"end": 16446,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16428,
											"end": 16446,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16428,
											"end": 16446,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16428,
											"end": 16446,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16428,
											"end": 16446,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16428,
											"end": 16446,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 16428,
											"end": 16455,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16447,
											"end": 16454,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16428,
											"end": 16455,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16428,
											"end": 16455,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16428,
											"end": 16455,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16428,
											"end": 16455,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16428,
											"end": 16455,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16428,
											"end": 16455,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16428,
											"end": 16455,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16428,
											"end": 16455,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16428,
											"end": 16455,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16428,
											"end": 16455,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16428,
											"end": 16455,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16428,
											"end": 16455,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16428,
											"end": 16455,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16428,
											"end": 16455,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16428,
											"end": 16455,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 16428,
											"end": 16455,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16421,
											"end": 16455,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16421,
											"end": 16455,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16322,
											"end": 16462,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 16322,
											"end": 16462,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16322,
											"end": 16462,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16322,
											"end": 16462,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16322,
											"end": 16462,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 12345,
											"end": 12527,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 12345,
											"end": 12527,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11644,
											"end": 11656,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 11644,
											"end": 11654,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 11644,
											"end": 11656,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11644,
											"end": 11656,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 11644,
											"end": 11656,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11633,
											"end": 11656,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11633,
											"end": 11656,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11633,
											"end": 11640,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 11633,
											"end": 11638,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 11633,
											"end": 11640,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11633,
											"end": 11640,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 11633,
											"end": 11640,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11633,
											"end": 11656,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11633,
											"end": 11656,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11633,
											"end": 11656,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11625,
											"end": 11693,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 11625,
											"end": 11693,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11625,
											"end": 11693,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11625,
											"end": 11693,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11625,
											"end": 11693,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11625,
											"end": 11693,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11625,
											"end": 11693,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11625,
											"end": 11693,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11625,
											"end": 11693,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11625,
											"end": 11693,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11625,
											"end": 11693,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11625,
											"end": 11693,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11625,
											"end": 11693,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11625,
											"end": 11693,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11625,
											"end": 11693,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11625,
											"end": 11693,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11625,
											"end": 11693,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11625,
											"end": 11693,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11625,
											"end": 11693,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11625,
											"end": 11693,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11625,
											"end": 11693,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11625,
											"end": 11693,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11625,
											"end": 11693,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11625,
											"end": 11693,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11625,
											"end": 11693,
											"name": "PUSH",
											"source": 0,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 11625,
											"end": 11693,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11625,
											"end": 11693,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11625,
											"end": 11693,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11625,
											"end": 11693,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11625,
											"end": 11693,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11625,
											"end": 11693,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11625,
											"end": 11693,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11625,
											"end": 11693,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11625,
											"end": 11693,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11625,
											"end": 11693,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11625,
											"end": 11693,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11625,
											"end": 11693,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11625,
											"end": 11693,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11625,
											"end": 11693,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11625,
											"end": 11693,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11625,
											"end": 11693,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 11625,
											"end": 11693,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12445,
											"end": 12446,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12425,
											"end": 12447,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12425,
											"end": 12447,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12425,
											"end": 12433,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12425,
											"end": 12447,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12425,
											"end": 12447,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12425,
											"end": 12447,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 12425,
											"end": 12447,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12417,
											"end": 12490,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 12417,
											"end": 12490,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12417,
											"end": 12490,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12417,
											"end": 12490,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12417,
											"end": 12490,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12417,
											"end": 12490,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12417,
											"end": 12490,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12417,
											"end": 12490,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12417,
											"end": 12490,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12417,
											"end": 12490,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12417,
											"end": 12490,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12417,
											"end": 12490,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12417,
											"end": 12490,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12417,
											"end": 12490,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12417,
											"end": 12490,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12417,
											"end": 12490,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12417,
											"end": 12490,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12417,
											"end": 12490,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12417,
											"end": 12490,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 12417,
											"end": 12490,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12417,
											"end": 12490,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12417,
											"end": 12490,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12417,
											"end": 12490,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12417,
											"end": 12490,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12417,
											"end": 12490,
											"name": "PUSH data",
											"source": 0,
											"value": "245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE"
										},
										{
											"begin": 12417,
											"end": 12490,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 12417,
											"end": 12490,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12417,
											"end": 12490,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 12417,
											"end": 12490,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12417,
											"end": 12490,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12417,
											"end": 12490,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12417,
											"end": 12490,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12417,
											"end": 12490,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12417,
											"end": 12490,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12417,
											"end": 12490,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12417,
											"end": 12490,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12417,
											"end": 12490,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12417,
											"end": 12490,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12417,
											"end": 12490,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12417,
											"end": 12490,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12417,
											"end": 12490,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 12417,
											"end": 12490,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12512,
											"end": 12520,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12500,
											"end": 12509,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 12500,
											"end": 12509,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12500,
											"end": 12520,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 12500,
											"end": 12520,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 12500,
											"end": 12520,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12500,
											"end": 12520,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12500,
											"end": 12520,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12500,
											"end": 12520,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12500,
											"end": 12520,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 12500,
											"end": 12520,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 12500,
											"end": 12520,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12500,
											"end": 12520,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12500,
											"end": 12520,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12500,
											"end": 12520,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12500,
											"end": 12520,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12500,
											"end": 12520,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 12500,
											"end": 12520,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 12500,
											"end": 12520,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12500,
											"end": 12520,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 12500,
											"end": 12520,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12345,
											"end": 12527,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12345,
											"end": 12527,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 10095,
											"end": 10191,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 10095,
											"end": 10191,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10140,
											"end": 10155,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10174,
											"end": 10184,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 10167,
											"end": 10184,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10167,
											"end": 10184,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10095,
											"end": 10191,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10095,
											"end": 10191,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 22626,
											"end": 22958,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 22626,
											"end": 22958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22736,
											"end": 22737,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22719,
											"end": 22738,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22719,
											"end": 22738,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22719,
											"end": 22724,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 22719,
											"end": 22738,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22719,
											"end": 22738,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22719,
											"end": 22738,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22719,
											"end": 22738,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22711,
											"end": 22779,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 22711,
											"end": 22779,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22711,
											"end": 22779,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22711,
											"end": 22779,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22711,
											"end": 22779,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 22711,
											"end": 22779,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22711,
											"end": 22779,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22711,
											"end": 22779,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22711,
											"end": 22779,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22711,
											"end": 22779,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22711,
											"end": 22779,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22711,
											"end": 22779,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22711,
											"end": 22779,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22711,
											"end": 22779,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22711,
											"end": 22779,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22711,
											"end": 22779,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 22711,
											"end": 22779,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22711,
											"end": 22779,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22711,
											"end": 22779,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 22711,
											"end": 22779,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22711,
											"end": 22779,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22711,
											"end": 22779,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22711,
											"end": 22779,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22711,
											"end": 22779,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22711,
											"end": 22779,
											"name": "PUSH data",
											"source": 0,
											"value": "C953F4879035ED60E766B34720F656AAB5C697B141D924C283124ECEDB91C208"
										},
										{
											"begin": 22711,
											"end": 22779,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 22711,
											"end": 22779,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22711,
											"end": 22779,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 22711,
											"end": 22779,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22711,
											"end": 22779,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22711,
											"end": 22779,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22711,
											"end": 22779,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22711,
											"end": 22779,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22711,
											"end": 22779,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22711,
											"end": 22779,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22711,
											"end": 22779,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22711,
											"end": 22779,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22711,
											"end": 22779,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 22711,
											"end": 22779,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22711,
											"end": 22779,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 22711,
											"end": 22779,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 22711,
											"end": 22779,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22816,
											"end": 22817,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22797,
											"end": 22818,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22797,
											"end": 22818,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22797,
											"end": 22804,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22797,
											"end": 22818,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22797,
											"end": 22818,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22797,
											"end": 22818,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22797,
											"end": 22818,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22789,
											"end": 22857,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 22789,
											"end": 22857,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22789,
											"end": 22857,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22789,
											"end": 22857,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22789,
											"end": 22857,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 22789,
											"end": 22857,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22789,
											"end": 22857,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22789,
											"end": 22857,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22789,
											"end": 22857,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22789,
											"end": 22857,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22789,
											"end": 22857,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22789,
											"end": 22857,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22789,
											"end": 22857,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22789,
											"end": 22857,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22789,
											"end": 22857,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22789,
											"end": 22857,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 22789,
											"end": 22857,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22789,
											"end": 22857,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22789,
											"end": 22857,
											"name": "PUSH",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 22789,
											"end": 22857,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22789,
											"end": 22857,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22789,
											"end": 22857,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22789,
											"end": 22857,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22789,
											"end": 22857,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22789,
											"end": 22857,
											"name": "PUSH data",
											"source": 0,
											"value": "24883CC5FE64ACE9D0DF1893501ECB93C77180F0FF69CCA79AFFB3C316DC8029"
										},
										{
											"begin": 22789,
											"end": 22857,
											"name": "PUSH",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 22789,
											"end": 22857,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22789,
											"end": 22857,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 22789,
											"end": 22857,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22789,
											"end": 22857,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22789,
											"end": 22857,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22789,
											"end": 22857,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22789,
											"end": 22857,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22789,
											"end": 22857,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22789,
											"end": 22857,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22789,
											"end": 22857,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22789,
											"end": 22857,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22789,
											"end": 22857,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 22789,
											"end": 22857,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22789,
											"end": 22857,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 22789,
											"end": 22857,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 22789,
											"end": 22857,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22898,
											"end": 22904,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22868,
											"end": 22879,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 22868,
											"end": 22886,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22880,
											"end": 22885,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 22868,
											"end": 22886,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22868,
											"end": 22886,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22868,
											"end": 22886,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22868,
											"end": 22886,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22868,
											"end": 22886,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22868,
											"end": 22886,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22868,
											"end": 22886,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22868,
											"end": 22886,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22868,
											"end": 22886,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22868,
											"end": 22886,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22868,
											"end": 22886,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22868,
											"end": 22886,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22868,
											"end": 22886,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22868,
											"end": 22886,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22868,
											"end": 22886,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 22868,
											"end": 22895,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22887,
											"end": 22894,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 22868,
											"end": 22895,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22868,
											"end": 22895,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22868,
											"end": 22895,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22868,
											"end": 22895,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22868,
											"end": 22895,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22868,
											"end": 22895,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22868,
											"end": 22895,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22868,
											"end": 22895,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22868,
											"end": 22895,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22868,
											"end": 22895,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22868,
											"end": 22895,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22868,
											"end": 22895,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22868,
											"end": 22895,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22868,
											"end": 22895,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22868,
											"end": 22895,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 22868,
											"end": 22904,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22868,
											"end": 22904,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22868,
											"end": 22904,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 22868,
											"end": 22904,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22935,
											"end": 22942,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22919,
											"end": 22951,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22919,
											"end": 22951,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22928,
											"end": 22933,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 22919,
											"end": 22951,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22919,
											"end": 22951,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22919,
											"end": 22951,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 22944,
											"end": 22950,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 22919,
											"end": 22951,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22919,
											"end": 22951,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22919,
											"end": 22951,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22919,
											"end": 22951,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22919,
											"end": 22951,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22919,
											"end": 22951,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22919,
											"end": 22951,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22919,
											"end": 22951,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22919,
											"end": 22951,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22919,
											"end": 22951,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22919,
											"end": 22951,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22919,
											"end": 22951,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22919,
											"end": 22951,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22919,
											"end": 22951,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22919,
											"end": 22951,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22919,
											"end": 22951,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 22919,
											"end": 22951,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22919,
											"end": 22951,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 22626,
											"end": 22958,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22626,
											"end": 22958,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22626,
											"end": 22958,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22626,
											"end": 22958,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 20284,
											"end": 20793,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 20284,
											"end": 20793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20398,
											"end": 20399,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20380,
											"end": 20400,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20380,
											"end": 20400,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20380,
											"end": 20386,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20380,
											"end": 20400,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20380,
											"end": 20400,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20380,
											"end": 20400,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 20380,
											"end": 20400,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20372,
											"end": 20438,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 20372,
											"end": 20438,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20372,
											"end": 20438,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20372,
											"end": 20438,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20372,
											"end": 20438,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20372,
											"end": 20438,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20372,
											"end": 20438,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20372,
											"end": 20438,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20372,
											"end": 20438,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20372,
											"end": 20438,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20372,
											"end": 20438,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20372,
											"end": 20438,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20372,
											"end": 20438,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20372,
											"end": 20438,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20372,
											"end": 20438,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20372,
											"end": 20438,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20372,
											"end": 20438,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20372,
											"end": 20438,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20372,
											"end": 20438,
											"name": "PUSH",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 20372,
											"end": 20438,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20372,
											"end": 20438,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20372,
											"end": 20438,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20372,
											"end": 20438,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20372,
											"end": 20438,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20372,
											"end": 20438,
											"name": "PUSH data",
											"source": 0,
											"value": "367728D6F44731C16C559C0217FFF6D163E627732494D917A99A19FD59FA9611"
										},
										{
											"begin": 20372,
											"end": 20438,
											"name": "PUSH",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 20372,
											"end": 20438,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20372,
											"end": 20438,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 20372,
											"end": 20438,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20372,
											"end": 20438,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20372,
											"end": 20438,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20372,
											"end": 20438,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20372,
											"end": 20438,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20372,
											"end": 20438,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20372,
											"end": 20438,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20372,
											"end": 20438,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20372,
											"end": 20438,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20372,
											"end": 20438,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20372,
											"end": 20438,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20372,
											"end": 20438,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20372,
											"end": 20438,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 20372,
											"end": 20438,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20477,
											"end": 20478,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20456,
											"end": 20479,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20456,
											"end": 20479,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20456,
											"end": 20465,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20456,
											"end": 20479,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20456,
											"end": 20479,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20456,
											"end": 20479,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 20456,
											"end": 20479,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20448,
											"end": 20515,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 20448,
											"end": 20515,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20448,
											"end": 20515,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20448,
											"end": 20515,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20448,
											"end": 20515,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20448,
											"end": 20515,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20448,
											"end": 20515,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20448,
											"end": 20515,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20448,
											"end": 20515,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20448,
											"end": 20515,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20448,
											"end": 20515,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20448,
											"end": 20515,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20448,
											"end": 20515,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20448,
											"end": 20515,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20448,
											"end": 20515,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20448,
											"end": 20515,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20448,
											"end": 20515,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20448,
											"end": 20515,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20448,
											"end": 20515,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 20448,
											"end": 20515,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20448,
											"end": 20515,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20448,
											"end": 20515,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20448,
											"end": 20515,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20448,
											"end": 20515,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20448,
											"end": 20515,
											"name": "PUSH",
											"source": 0,
											"value": "45524332303A207472616E7366657220746F207A65726F206164647265737300"
										},
										{
											"begin": 20448,
											"end": 20515,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20448,
											"end": 20515,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20448,
											"end": 20515,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20448,
											"end": 20515,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20448,
											"end": 20515,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20448,
											"end": 20515,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20448,
											"end": 20515,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20448,
											"end": 20515,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20448,
											"end": 20515,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20448,
											"end": 20515,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20448,
											"end": 20515,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20448,
											"end": 20515,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20448,
											"end": 20515,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20448,
											"end": 20515,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20448,
											"end": 20515,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20448,
											"end": 20515,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 20448,
											"end": 20515,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20526,
											"end": 20571,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 20547,
											"end": 20553,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20554,
											"end": 20563,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20564,
											"end": 20570,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20526,
											"end": 20546,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 20526,
											"end": 20571,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20526,
											"end": 20571,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 20526,
											"end": 20571,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20602,
											"end": 20672,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 20624,
											"end": 20630,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20602,
											"end": 20672,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20602,
											"end": 20672,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20602,
											"end": 20672,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20602,
											"end": 20672,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 20602,
											"end": 20672,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20602,
											"end": 20672,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20602,
											"end": 20672,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20602,
											"end": 20672,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20602,
											"end": 20672,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 20602,
											"end": 20672,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20602,
											"end": 20672,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20602,
											"end": 20672,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20602,
											"end": 20672,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20602,
											"end": 20672,
											"name": "PUSH data",
											"source": 0,
											"value": "4107E8A8B9E94BF8FF83080DDEC1C0BFFE897EBC2241B89D44F66B3D274088B6"
										},
										{
											"begin": 20602,
											"end": 20672,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 20602,
											"end": 20672,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20602,
											"end": 20672,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 20602,
											"end": 20611,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 20602,
											"end": 20619,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20612,
											"end": 20618,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 20602,
											"end": 20619,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20602,
											"end": 20619,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20602,
											"end": 20619,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20602,
											"end": 20619,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20602,
											"end": 20619,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20602,
											"end": 20619,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20602,
											"end": 20619,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20602,
											"end": 20619,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20602,
											"end": 20619,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20602,
											"end": 20619,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20602,
											"end": 20619,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20602,
											"end": 20619,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20602,
											"end": 20619,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20602,
											"end": 20619,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20602,
											"end": 20619,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 20602,
											"end": 20619,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 20602,
											"end": 20623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 20602,
											"end": 20623,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20602,
											"end": 20672,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 20602,
											"end": 20672,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20602,
											"end": 20672,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20602,
											"end": 20672,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 20602,
											"end": 20672,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20602,
											"end": 20672,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20602,
											"end": 20672,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 20602,
											"end": 20672,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20582,
											"end": 20591,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 20582,
											"end": 20599,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20592,
											"end": 20598,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 20582,
											"end": 20599,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20582,
											"end": 20599,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20582,
											"end": 20599,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20582,
											"end": 20599,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20582,
											"end": 20599,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20582,
											"end": 20599,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20582,
											"end": 20599,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20582,
											"end": 20599,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20582,
											"end": 20599,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20582,
											"end": 20599,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20582,
											"end": 20599,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20582,
											"end": 20599,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20582,
											"end": 20599,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20582,
											"end": 20599,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20582,
											"end": 20599,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 20582,
											"end": 20672,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20582,
											"end": 20672,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20582,
											"end": 20672,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 20582,
											"end": 20672,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20705,
											"end": 20737,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 20730,
											"end": 20736,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20705,
											"end": 20714,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 20705,
											"end": 20725,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20715,
											"end": 20724,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 20705,
											"end": 20725,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20705,
											"end": 20725,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20705,
											"end": 20725,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20705,
											"end": 20725,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20705,
											"end": 20725,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20705,
											"end": 20725,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20705,
											"end": 20725,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20705,
											"end": 20725,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20705,
											"end": 20725,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20705,
											"end": 20725,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20705,
											"end": 20725,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20705,
											"end": 20725,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20705,
											"end": 20725,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20705,
											"end": 20725,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20705,
											"end": 20725,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 20705,
											"end": 20725,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 20705,
											"end": 20729,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 20705,
											"end": 20729,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20705,
											"end": 20737,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20705,
											"end": 20737,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20705,
											"end": 20737,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 20705,
											"end": 20737,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20705,
											"end": 20737,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20705,
											"end": 20737,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 20705,
											"end": 20737,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20682,
											"end": 20691,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 20682,
											"end": 20702,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20692,
											"end": 20701,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 20682,
											"end": 20702,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20682,
											"end": 20702,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20682,
											"end": 20702,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20682,
											"end": 20702,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20682,
											"end": 20702,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20682,
											"end": 20702,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20682,
											"end": 20702,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20682,
											"end": 20702,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20682,
											"end": 20702,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20682,
											"end": 20702,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20682,
											"end": 20702,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20682,
											"end": 20702,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20682,
											"end": 20702,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20682,
											"end": 20702,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20682,
											"end": 20702,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 20682,
											"end": 20737,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20682,
											"end": 20737,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20682,
											"end": 20737,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 20682,
											"end": 20737,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20768,
											"end": 20777,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20752,
											"end": 20786,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20752,
											"end": 20786,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20761,
											"end": 20767,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20752,
											"end": 20786,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20752,
											"end": 20786,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20752,
											"end": 20786,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 20779,
											"end": 20785,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20752,
											"end": 20786,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20752,
											"end": 20786,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20752,
											"end": 20786,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20752,
											"end": 20786,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20752,
											"end": 20786,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20752,
											"end": 20786,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20752,
											"end": 20786,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20752,
											"end": 20786,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20752,
											"end": 20786,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20752,
											"end": 20786,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20752,
											"end": 20786,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20752,
											"end": 20786,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20752,
											"end": 20786,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20752,
											"end": 20786,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20752,
											"end": 20786,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20752,
											"end": 20786,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20752,
											"end": 20786,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20752,
											"end": 20786,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 20284,
											"end": 20793,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20284,
											"end": 20793,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20284,
											"end": 20793,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20284,
											"end": 20793,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5183,
											"end": 5345,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 5183,
											"end": 5345,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5269,
											"end": 5276,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5300,
											"end": 5301,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5295,
											"end": 5296,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5295,
											"end": 5301,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 5295,
											"end": 5301,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5303,
											"end": 5315,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5287,
											"end": 5316,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5287,
											"end": 5316,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 5287,
											"end": 5316,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5287,
											"end": 5316,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5287,
											"end": 5316,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5287,
											"end": 5316,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5287,
											"end": 5316,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5287,
											"end": 5316,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5287,
											"end": 5316,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5287,
											"end": 5316,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5287,
											"end": 5316,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5287,
											"end": 5316,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5287,
											"end": 5316,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5287,
											"end": 5316,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5287,
											"end": 5316,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5287,
											"end": 5316,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5287,
											"end": 5316,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5287,
											"end": 5316,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5287,
											"end": 5316,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5287,
											"end": 5316,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5287,
											"end": 5316,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5287,
											"end": 5316,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5287,
											"end": 5316,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5287,
											"end": 5316,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5287,
											"end": 5316,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5287,
											"end": 5316,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5287,
											"end": 5316,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5287,
											"end": 5316,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5287,
											"end": 5316,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5287,
											"end": 5316,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5287,
											"end": 5316,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5287,
											"end": 5316,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5287,
											"end": 5316,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5287,
											"end": 5316,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5287,
											"end": 5316,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5287,
											"end": 5316,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5287,
											"end": 5316,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5287,
											"end": 5316,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5287,
											"end": 5316,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5287,
											"end": 5316,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 5287,
											"end": 5316,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5287,
											"end": 5316,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5287,
											"end": 5316,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5287,
											"end": 5316,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 5287,
											"end": 5316,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5287,
											"end": 5316,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 5287,
											"end": 5316,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5287,
											"end": 5316,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5287,
											"end": 5316,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5287,
											"end": 5316,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5287,
											"end": 5316,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5287,
											"end": 5316,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5287,
											"end": 5316,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5287,
											"end": 5316,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5287,
											"end": 5316,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5287,
											"end": 5316,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5287,
											"end": 5316,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5287,
											"end": 5316,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5287,
											"end": 5316,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5287,
											"end": 5316,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5287,
											"end": 5316,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 5287,
											"end": 5316,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5287,
											"end": 5316,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 5287,
											"end": 5316,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5287,
											"end": 5316,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5287,
											"end": 5316,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5287,
											"end": 5316,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5287,
											"end": 5316,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5287,
											"end": 5316,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5287,
											"end": 5316,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5287,
											"end": 5316,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5287,
											"end": 5316,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5287,
											"end": 5316,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5287,
											"end": 5316,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5287,
											"end": 5316,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 5287,
											"end": 5316,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5287,
											"end": 5316,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5287,
											"end": 5316,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5287,
											"end": 5316,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 5287,
											"end": 5316,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5287,
											"end": 5316,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5287,
											"end": 5316,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5287,
											"end": 5316,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5287,
											"end": 5316,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5287,
											"end": 5316,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5287,
											"end": 5316,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5287,
											"end": 5316,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5287,
											"end": 5316,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5287,
											"end": 5316,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5287,
											"end": 5316,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 5287,
											"end": 5316,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 5287,
											"end": 5316,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5287,
											"end": 5316,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 5287,
											"end": 5316,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5287,
											"end": 5316,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5287,
											"end": 5316,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5287,
											"end": 5316,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5287,
											"end": 5316,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5287,
											"end": 5316,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5287,
											"end": 5316,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5287,
											"end": 5316,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 5287,
											"end": 5316,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5287,
											"end": 5316,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5287,
											"end": 5316,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5287,
											"end": 5316,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5287,
											"end": 5316,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5287,
											"end": 5316,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5287,
											"end": 5316,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5287,
											"end": 5316,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5287,
											"end": 5316,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5287,
											"end": 5316,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5287,
											"end": 5316,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5287,
											"end": 5316,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5287,
											"end": 5316,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5287,
											"end": 5316,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 5287,
											"end": 5316,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5287,
											"end": 5316,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5337,
											"end": 5338,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5333,
											"end": 5334,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5333,
											"end": 5338,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5326,
											"end": 5338,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5326,
											"end": 5338,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5183,
											"end": 5345,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 5183,
											"end": 5345,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5183,
											"end": 5345,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5183,
											"end": 5345,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5183,
											"end": 5345,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5183,
											"end": 5345,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2492,
											"end": 2669,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2492,
											"end": 2669,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2557,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2568,
											"end": 2577,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2583,
											"end": 2584,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2580,
											"end": 2581,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2580,
											"end": 2584,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2568,
											"end": 2584,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2568,
											"end": 2584,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2611,
											"end": 2612,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2607,
											"end": 2608,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2607,
											"end": 2612,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2602,
											"end": 2603,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2602,
											"end": 2612,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2602,
											"end": 2612,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2594,
											"end": 2644,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 2594,
											"end": 2644,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2594,
											"end": 2644,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2594,
											"end": 2644,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2594,
											"end": 2644,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2594,
											"end": 2644,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2594,
											"end": 2644,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2594,
											"end": 2644,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2594,
											"end": 2644,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2594,
											"end": 2644,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2594,
											"end": 2644,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2594,
											"end": 2644,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2594,
											"end": 2644,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2594,
											"end": 2644,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2594,
											"end": 2644,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2594,
											"end": 2644,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2594,
											"end": 2644,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2594,
											"end": 2644,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2594,
											"end": 2644,
											"name": "PUSH",
											"source": 0,
											"value": "1B"
										},
										{
											"begin": 2594,
											"end": 2644,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2594,
											"end": 2644,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2594,
											"end": 2644,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2594,
											"end": 2644,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2594,
											"end": 2644,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2594,
											"end": 2644,
											"name": "PUSH",
											"source": 0,
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 2594,
											"end": 2644,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2594,
											"end": 2644,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2594,
											"end": 2644,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2594,
											"end": 2644,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2594,
											"end": 2644,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2594,
											"end": 2644,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2594,
											"end": 2644,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2594,
											"end": 2644,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2594,
											"end": 2644,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2594,
											"end": 2644,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2594,
											"end": 2644,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2594,
											"end": 2644,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2594,
											"end": 2644,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2594,
											"end": 2644,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2594,
											"end": 2644,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2594,
											"end": 2644,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 2594,
											"end": 2644,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2661,
											"end": 2662,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2654,
											"end": 2662,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2654,
											"end": 2662,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2654,
											"end": 2662,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2492,
											"end": 2669,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2492,
											"end": 2669,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2492,
											"end": 2669,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2492,
											"end": 2669,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2492,
											"end": 2669,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 21056,
											"end": 21505,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 21056,
											"end": 21505,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21150,
											"end": 21151,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21131,
											"end": 21152,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21131,
											"end": 21152,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21131,
											"end": 21138,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21131,
											"end": 21152,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21131,
											"end": 21152,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21131,
											"end": 21152,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 21131,
											"end": 21152,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21123,
											"end": 21183,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 21123,
											"end": 21183,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21123,
											"end": 21183,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21123,
											"end": 21183,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21123,
											"end": 21183,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21123,
											"end": 21183,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21123,
											"end": 21183,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21123,
											"end": 21183,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21123,
											"end": 21183,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21123,
											"end": 21183,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21123,
											"end": 21183,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21123,
											"end": 21183,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21123,
											"end": 21183,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21123,
											"end": 21183,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21123,
											"end": 21183,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21123,
											"end": 21183,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21123,
											"end": 21183,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21123,
											"end": 21183,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21123,
											"end": 21183,
											"name": "PUSH",
											"source": 0,
											"value": "1B"
										},
										{
											"begin": 21123,
											"end": 21183,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21123,
											"end": 21183,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21123,
											"end": 21183,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21123,
											"end": 21183,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21123,
											"end": 21183,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21123,
											"end": 21183,
											"name": "PUSH",
											"source": 0,
											"value": "45524332303A206D696E7420746F207A65726F20616464726573730000000000"
										},
										{
											"begin": 21123,
											"end": 21183,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21123,
											"end": 21183,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21123,
											"end": 21183,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21123,
											"end": 21183,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21123,
											"end": 21183,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21123,
											"end": 21183,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21123,
											"end": 21183,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21123,
											"end": 21183,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21123,
											"end": 21183,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21123,
											"end": 21183,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21123,
											"end": 21183,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21123,
											"end": 21183,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21123,
											"end": 21183,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21123,
											"end": 21183,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21123,
											"end": 21183,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 21123,
											"end": 21183,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 21123,
											"end": 21183,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21226,
											"end": 21236,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21226,
											"end": 21236,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 21216,
											"end": 21222,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21201,
											"end": 21213,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 21201,
											"end": 21213,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 21201,
											"end": 21222,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21201,
											"end": 21236,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 21201,
											"end": 21236,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21193,
											"end": 21278,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 21193,
											"end": 21278,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21193,
											"end": 21278,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21193,
											"end": 21278,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21193,
											"end": 21278,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21193,
											"end": 21278,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21193,
											"end": 21278,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21193,
											"end": 21278,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21193,
											"end": 21278,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21193,
											"end": 21278,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21193,
											"end": 21278,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21193,
											"end": 21278,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21193,
											"end": 21278,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21193,
											"end": 21278,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21193,
											"end": 21278,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21193,
											"end": 21278,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21193,
											"end": 21278,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21193,
											"end": 21278,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21193,
											"end": 21278,
											"name": "PUSH",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 21193,
											"end": 21278,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21193,
											"end": 21278,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21193,
											"end": 21278,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21193,
											"end": 21278,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21193,
											"end": 21278,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21193,
											"end": 21278,
											"name": "PUSH data",
											"source": 0,
											"value": "6BF41DE9CF55D9F78DF11038D6F93DE2FB046C6C44AECC2C46B28A24D62DDE23"
										},
										{
											"begin": 21193,
											"end": 21278,
											"name": "PUSH",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 21193,
											"end": 21278,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21193,
											"end": 21278,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 21193,
											"end": 21278,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21193,
											"end": 21278,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21193,
											"end": 21278,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21193,
											"end": 21278,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21193,
											"end": 21278,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21193,
											"end": 21278,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21193,
											"end": 21278,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21193,
											"end": 21278,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21193,
											"end": 21278,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21193,
											"end": 21278,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21193,
											"end": 21278,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21193,
											"end": 21278,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 21193,
											"end": 21278,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 21193,
											"end": 21278,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21289,
											"end": 21337,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 21318,
											"end": 21319,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21321,
											"end": 21328,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21330,
											"end": 21336,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21289,
											"end": 21309,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 21289,
											"end": 21337,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21289,
											"end": 21337,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 21289,
											"end": 21337,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21363,
											"end": 21387,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 21380,
											"end": 21386,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21363,
											"end": 21375,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 21363,
											"end": 21375,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 21363,
											"end": 21379,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 21363,
											"end": 21379,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21363,
											"end": 21387,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21363,
											"end": 21387,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21363,
											"end": 21387,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 21363,
											"end": 21387,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21363,
											"end": 21387,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21363,
											"end": 21387,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 21363,
											"end": 21387,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21348,
											"end": 21360,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 21348,
											"end": 21387,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21348,
											"end": 21387,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21348,
											"end": 21387,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 21348,
											"end": 21387,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21418,
											"end": 21448,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 21441,
											"end": 21447,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21418,
											"end": 21427,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 21418,
											"end": 21436,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21428,
											"end": 21435,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 21418,
											"end": 21436,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21418,
											"end": 21436,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21418,
											"end": 21436,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21418,
											"end": 21436,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21418,
											"end": 21436,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21418,
											"end": 21436,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21418,
											"end": 21436,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21418,
											"end": 21436,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21418,
											"end": 21436,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21418,
											"end": 21436,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21418,
											"end": 21436,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21418,
											"end": 21436,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21418,
											"end": 21436,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21418,
											"end": 21436,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21418,
											"end": 21436,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 21418,
											"end": 21436,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 21418,
											"end": 21440,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 21418,
											"end": 21440,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21418,
											"end": 21448,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21418,
											"end": 21448,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21418,
											"end": 21448,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 21418,
											"end": 21448,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21418,
											"end": 21448,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21418,
											"end": 21448,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 21418,
											"end": 21448,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21397,
											"end": 21406,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 21397,
											"end": 21415,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21407,
											"end": 21414,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21397,
											"end": 21415,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21397,
											"end": 21415,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21397,
											"end": 21415,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21397,
											"end": 21415,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21397,
											"end": 21415,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21397,
											"end": 21415,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21397,
											"end": 21415,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21397,
											"end": 21415,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21397,
											"end": 21415,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21397,
											"end": 21415,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21397,
											"end": 21415,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21397,
											"end": 21415,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21397,
											"end": 21415,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21397,
											"end": 21415,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21397,
											"end": 21415,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 21397,
											"end": 21448,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21397,
											"end": 21448,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21397,
											"end": 21448,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 21397,
											"end": 21448,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21483,
											"end": 21490,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21463,
											"end": 21498,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21463,
											"end": 21498,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21480,
											"end": 21481,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21463,
											"end": 21498,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21463,
											"end": 21498,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21463,
											"end": 21498,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 21491,
											"end": 21497,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21463,
											"end": 21498,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21463,
											"end": 21498,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21463,
											"end": 21498,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21463,
											"end": 21498,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21463,
											"end": 21498,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21463,
											"end": 21498,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21463,
											"end": 21498,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21463,
											"end": 21498,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21463,
											"end": 21498,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21463,
											"end": 21498,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21463,
											"end": 21498,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21463,
											"end": 21498,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21463,
											"end": 21498,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21463,
											"end": 21498,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21463,
											"end": 21498,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21463,
											"end": 21498,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21463,
											"end": 21498,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21463,
											"end": 21498,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 21056,
											"end": 21505,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21056,
											"end": 21505,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21056,
											"end": 21505,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 21815,
											"end": 22211,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 21815,
											"end": 22211,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21908,
											"end": 21909,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21889,
											"end": 21910,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21889,
											"end": 21910,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21889,
											"end": 21896,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21889,
											"end": 21910,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21889,
											"end": 21910,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21889,
											"end": 21910,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 21889,
											"end": 21910,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21881,
											"end": 21948,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 21881,
											"end": 21948,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21881,
											"end": 21948,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21881,
											"end": 21948,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21881,
											"end": 21948,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21881,
											"end": 21948,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21881,
											"end": 21948,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21881,
											"end": 21948,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21881,
											"end": 21948,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21881,
											"end": 21948,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21881,
											"end": 21948,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21881,
											"end": 21948,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21881,
											"end": 21948,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21881,
											"end": 21948,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21881,
											"end": 21948,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21881,
											"end": 21948,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21881,
											"end": 21948,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21881,
											"end": 21948,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21881,
											"end": 21948,
											"name": "PUSH",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 21881,
											"end": 21948,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21881,
											"end": 21948,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21881,
											"end": 21948,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21881,
											"end": 21948,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21881,
											"end": 21948,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21881,
											"end": 21948,
											"name": "PUSH data",
											"source": 0,
											"value": "B16788493B576042BB52C50ED56189E0B250DB113C7BFB1C3897D25CF9632D7F"
										},
										{
											"begin": 21881,
											"end": 21948,
											"name": "PUSH",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 21881,
											"end": 21948,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21881,
											"end": 21948,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 21881,
											"end": 21948,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21881,
											"end": 21948,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21881,
											"end": 21948,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21881,
											"end": 21948,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21881,
											"end": 21948,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21881,
											"end": 21948,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21881,
											"end": 21948,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21881,
											"end": 21948,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21881,
											"end": 21948,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21881,
											"end": 21948,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21881,
											"end": 21948,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21881,
											"end": 21948,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 21881,
											"end": 21948,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 21881,
											"end": 21948,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21959,
											"end": 22006,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 21980,
											"end": 21987,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21996,
											"end": 21997,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21999,
											"end": 22005,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21959,
											"end": 21979,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 21959,
											"end": 22006,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21959,
											"end": 22006,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 21959,
											"end": 22006,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22038,
											"end": 22105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 22061,
											"end": 22067,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22038,
											"end": 22105,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22038,
											"end": 22105,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22038,
											"end": 22105,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22038,
											"end": 22105,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 22038,
											"end": 22105,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22038,
											"end": 22105,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22038,
											"end": 22105,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22038,
											"end": 22105,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22038,
											"end": 22105,
											"name": "PUSH",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 22038,
											"end": 22105,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22038,
											"end": 22105,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22038,
											"end": 22105,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22038,
											"end": 22105,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22038,
											"end": 22105,
											"name": "PUSH data",
											"source": 0,
											"value": "149B126E7125232B4200AF45303D04FBA8B74653B1A295A6A561A528C33FEFDD"
										},
										{
											"begin": 22038,
											"end": 22105,
											"name": "PUSH",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 22038,
											"end": 22105,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22038,
											"end": 22105,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 22038,
											"end": 22047,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 22038,
											"end": 22056,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22048,
											"end": 22055,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 22038,
											"end": 22056,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22038,
											"end": 22056,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22038,
											"end": 22056,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22038,
											"end": 22056,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22038,
											"end": 22056,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22038,
											"end": 22056,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22038,
											"end": 22056,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22038,
											"end": 22056,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22038,
											"end": 22056,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22038,
											"end": 22056,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22038,
											"end": 22056,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22038,
											"end": 22056,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22038,
											"end": 22056,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22038,
											"end": 22056,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22038,
											"end": 22056,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 22038,
											"end": 22056,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22038,
											"end": 22060,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 22038,
											"end": 22060,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22038,
											"end": 22105,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 22038,
											"end": 22105,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22038,
											"end": 22105,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22038,
											"end": 22105,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 22038,
											"end": 22105,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22038,
											"end": 22105,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22038,
											"end": 22105,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 22038,
											"end": 22105,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22017,
											"end": 22026,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 22017,
											"end": 22035,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22027,
											"end": 22034,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 22017,
											"end": 22035,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22017,
											"end": 22035,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22017,
											"end": 22035,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22017,
											"end": 22035,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22017,
											"end": 22035,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22017,
											"end": 22035,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22017,
											"end": 22035,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22017,
											"end": 22035,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22017,
											"end": 22035,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22017,
											"end": 22035,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22017,
											"end": 22035,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22017,
											"end": 22035,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22017,
											"end": 22035,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22017,
											"end": 22035,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22017,
											"end": 22035,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 22017,
											"end": 22105,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22017,
											"end": 22105,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22017,
											"end": 22105,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 22017,
											"end": 22105,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22130,
											"end": 22154,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 22147,
											"end": 22153,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22130,
											"end": 22142,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 22130,
											"end": 22142,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22130,
											"end": 22146,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 22130,
											"end": 22146,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22130,
											"end": 22154,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22130,
											"end": 22154,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22130,
											"end": 22154,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 22130,
											"end": 22154,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22130,
											"end": 22154,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22130,
											"end": 22154,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 22130,
											"end": 22154,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22115,
											"end": 22127,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 22115,
											"end": 22154,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22115,
											"end": 22154,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22115,
											"end": 22154,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 22115,
											"end": 22154,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22194,
											"end": 22195,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22169,
											"end": 22204,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22169,
											"end": 22204,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22178,
											"end": 22185,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22169,
											"end": 22204,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22169,
											"end": 22204,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22169,
											"end": 22204,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 22197,
											"end": 22203,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 22169,
											"end": 22204,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22169,
											"end": 22204,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22169,
											"end": 22204,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22169,
											"end": 22204,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22169,
											"end": 22204,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22169,
											"end": 22204,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22169,
											"end": 22204,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22169,
											"end": 22204,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22169,
											"end": 22204,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22169,
											"end": 22204,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22169,
											"end": 22204,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22169,
											"end": 22204,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22169,
											"end": 22204,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22169,
											"end": 22204,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22169,
											"end": 22204,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22169,
											"end": 22204,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 22169,
											"end": 22204,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22169,
											"end": 22204,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 21815,
											"end": 22211,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21815,
											"end": 22211,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21815,
											"end": 22211,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 22965,
											"end": 23048,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 22965,
											"end": 23048,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22965,
											"end": 23048,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22965,
											"end": 23048,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22965,
											"end": 23048,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22965,
											"end": 23048,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2931,
											"end": 3085,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 2931,
											"end": 3085,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2989,
											"end": 2996,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3021,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3015,
											"end": 3016,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3015,
											"end": 3021,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 3015,
											"end": 3021,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3007,
											"end": 3056,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 3007,
											"end": 3056,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3007,
											"end": 3056,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3007,
											"end": 3056,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3007,
											"end": 3056,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3007,
											"end": 3056,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3007,
											"end": 3056,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3007,
											"end": 3056,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3007,
											"end": 3056,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3007,
											"end": 3056,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3007,
											"end": 3056,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3007,
											"end": 3056,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3007,
											"end": 3056,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3007,
											"end": 3056,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3007,
											"end": 3056,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3007,
											"end": 3056,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3007,
											"end": 3056,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3007,
											"end": 3056,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3007,
											"end": 3056,
											"name": "PUSH",
											"source": 0,
											"value": "1E"
										},
										{
											"begin": 3007,
											"end": 3056,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3007,
											"end": 3056,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3007,
											"end": 3056,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3007,
											"end": 3056,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3007,
											"end": 3056,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3007,
											"end": 3056,
											"name": "PUSH",
											"source": 0,
											"value": "536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
										},
										{
											"begin": 3007,
											"end": 3056,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3007,
											"end": 3056,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3007,
											"end": 3056,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3007,
											"end": 3056,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3007,
											"end": 3056,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3007,
											"end": 3056,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3007,
											"end": 3056,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3007,
											"end": 3056,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3007,
											"end": 3056,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3007,
											"end": 3056,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3007,
											"end": 3056,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3007,
											"end": 3056,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3007,
											"end": 3056,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3007,
											"end": 3056,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3007,
											"end": 3056,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3007,
											"end": 3056,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 3007,
											"end": 3056,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3077,
											"end": 3078,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3074,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3078,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3066,
											"end": 3078,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3066,
											"end": 3078,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2931,
											"end": 3085,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2931,
											"end": 3085,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2931,
											"end": 3085,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2931,
											"end": 3085,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2931,
											"end": 3085,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										}
									],
									".data": {
										"149B126E7125232B4200AF45303D04FBA8B74653B1A295A6A561A528C33FEFDD": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
										"245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
										"24883CC5FE64ACE9D0DF1893501ECB93C77180F0FF69CCA79AFFB3C316DC8029": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
										"367728D6F44731C16C559C0217FFF6D163E627732494D917A99A19FD59FA9611": "45524332303a207472616e736665722066726f6d207a65726f2061646472657373",
										"4107E8A8B9E94BF8FF83080DDEC1C0BFFE897EBC2241B89D44F66B3D274088B6": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
										"6BF41DE9CF55D9F78DF11038D6F93DE2FB046C6C44AECC2C46B28A24D62DDE23": "45524332303a206d696e7420616d6f756e742065786365656473206d617820737570706c79",
										"76EF47D3CAC10BDD88984936FBABF838A95158C824F2256C2B05B83385232484": "45524332303a20646563726561736520616d6f756e74206578636565647320616c6c6f77616e6365",
										"B16788493B576042BB52C50ED56189E0B250DB113C7BFB1C3897D25CF9632D7F": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
										"C953F4879035ED60E766B34720F656AAB5C697B141D924C283124ECEDB91C208": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
										"F7737555ABF4F07FA9A8E7458B0BA564AC4D7D05336CDBEC0C72AD29C2541514": "4f776e61626c653a206f6e6c79206e6577206f776e65722063616e20616363657074206f776e657273686970"
									}
								}
							}
						},
						"methodIdentifiers": {
							"acceptOwnership()": "79ba5097",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin guidelines: functions revert instead of returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"kind\":\"dev\",\"methods\":{\"acceptOwnership()\":{\"details\":\"Accept the ownership transfer. This is to make sure that the contract is transferred to a working address Can only be called by the newly transfered owner.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys `amount` tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}, initializes {decimals} with a default value of 18 To select a different value for {decimals}, use {_setupDecimals}. All three of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"mint(address,uint256)\":{\"details\":\"Issues `amount` tokens to the designated `address`. Can only be called by the current owner. See {ERC20-_mint}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PoddleTokens.sol\":\"PoddleTokens\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/PoddleTokens.sol\":{\"keccak256\":\"0x7afb9f33bde73723fb50c6e526ec8aac15666cad53be580208c2295f90c1d6d0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ed8597276cc2b7667251ec434a21f6733ff78b0c0e94913e64ad2bb943331d3\",\"dweb:/ipfs/QmZC9eiMLHupbPDMrWGc5F8VvP7j1GaEZiZovvnwfeumrm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 458,
								"contract": "contracts/PoddleTokens.sol:PoddleTokens",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 460,
								"contract": "contracts/PoddleTokens.sol:PoddleTokens",
								"label": "_newOwner",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 582,
								"contract": "contracts/PoddleTokens.sol:PoddleTokens",
								"label": "_balances",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 588,
								"contract": "contracts/PoddleTokens.sol:PoddleTokens",
								"label": "_allowances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 590,
								"contract": "contracts/PoddleTokens.sol:PoddleTokens",
								"label": "_maxSupply",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 592,
								"contract": "contracts/PoddleTokens.sol:PoddleTokens",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 594,
								"contract": "contracts/PoddleTokens.sol:PoddleTokens",
								"label": "_name",
								"offset": 0,
								"slot": "6",
								"type": "t_string_storage"
							},
							{
								"astId": 596,
								"contract": "contracts/PoddleTokens.sol:PoddleTokens",
								"label": "_symbol",
								"offset": 0,
								"slot": "7",
								"type": "t_string_storage"
							},
							{
								"astId": 598,
								"contract": "contracts/PoddleTokens.sol:PoddleTokens",
								"label": "_decimals",
								"offset": 0,
								"slot": "8",
								"type": "t_uint8"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/PoddleTokens.sol\":670:6946  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/PoddleTokens.sol\":670:6946  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212209708b246b6859016d51def0b3ccb5d02fa7341b99fd043e2b1a4e7c28ac7032964736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209708b246b6859016d51def0b3ccb5d02fa7341b99fd043e2b1a4e7c28ac7032964736f6c63430007060033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP8 ADDMOD 0xB2 CHAINID 0xB6 DUP6 SWAP1 AND 0xD5 SAR 0xEF SIGNEXTEND EXTCODECOPY 0xCB 0x5D MUL STATICCALL PUSH20 0x41B99FD043E2B1A4E7C28AC7032964736F6C6343 STOP SMOD MOD STOP CALLER ",
							"sourceMap": "670:6276:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209708b246b6859016d51def0b3ccb5d02fa7341b99fd043e2b1a4e7c28ac7032964736f6c63430007060033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP8 ADDMOD 0xB2 CHAINID 0xB6 DUP6 SWAP1 AND 0xD5 SAR 0xEF SIGNEXTEND EXTCODECOPY 0xCB 0x5D MUL STATICCALL PUSH20 0x41B99FD043E2B1A4E7C28AC7032964736F6C6343 STOP SMOD MOD STOP CALLER ",
							"sourceMap": "670:6276:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 670,
									"end": 6946,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 670,
									"end": 6946,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 670,
									"end": 6946,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 670,
									"end": 6946,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 670,
									"end": 6946,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 670,
									"end": 6946,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 670,
									"end": 6946,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 670,
									"end": 6946,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 670,
									"end": 6946,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 670,
									"end": 6946,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 670,
									"end": 6946,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 670,
									"end": 6946,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 670,
									"end": 6946,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 670,
									"end": 6946,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 670,
									"end": 6946,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 670,
									"end": 6946,
									"name": "INVALID",
									"source": 0
								},
								{
									"begin": 670,
									"end": 6946,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 670,
									"end": 6946,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 670,
									"end": 6946,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 670,
									"end": 6946,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 670,
									"end": 6946,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 670,
									"end": 6946,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 670,
									"end": 6946,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 670,
									"end": 6946,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 670,
									"end": 6946,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 670,
									"end": 6946,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 670,
									"end": 6946,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209708b246b6859016d51def0b3ccb5d02fa7341b99fd043e2b1a4e7c28ac7032964736f6c63430007060033",
									".code": [
										{
											"begin": 670,
											"end": 6946,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 670,
											"end": 6946,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 670,
											"end": 6946,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 670,
											"end": 6946,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 670,
											"end": 6946,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 670,
											"end": 6946,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 670,
											"end": 6946,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 670,
											"end": 6946,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 670,
											"end": 6946,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PoddleTokens.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/PoddleTokens.sol\":{\"keccak256\":\"0x7afb9f33bde73723fb50c6e526ec8aac15666cad53be580208c2295f90c1d6d0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ed8597276cc2b7667251ec434a21f6733ff78b0c0e94913e64ad2bb943331d3\",\"dweb:/ipfs/QmZC9eiMLHupbPDMrWGc5F8VvP7j1GaEZiZovvnwfeumrm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/PoddleTokens.sol": {
				"ast": {
					"absolutePath": "contracts/PoddleTokens.sol",
					"exportedSymbols": {
						"Context": [
							453
						],
						"IERC20": [
							432
						],
						"Ownable": [
							568
						],
						"PoddleTokens": [
							1150
						],
						"SafeMath": [
							356
						]
					},
					"id": 1151,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "69:599:0",
								"text": " @dev Wrappers over Solidity's arithmetic operations with added overflow\n checks.\n Arithmetic operations in Solidity wrap on overflow. This can easily result\n in bugs, because programmers usually assume that an overflow raises an\n error, which is the standard behavior in high level programming languages.\n `SafeMath` restores this intuition by reverting the transaction when an\n operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."
							},
							"fullyImplemented": true,
							"id": 356,
							"linearizedBaseContracts": [
								356
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 32,
										"nodeType": "Block",
										"src": "865:95:0",
										"statements": [
											{
												"assignments": [
													15
												],
												"declarations": [
													{
														"constant": false,
														"id": 15,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 32,
														"src": "875:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 14,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "875:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 19,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 18,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 16,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "887:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 17,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "891:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "887:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "875:17:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 22,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 20,
														"name": "c",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 15,
														"src": "905:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 21,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "909:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "905:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 27,
												"nodeType": "IfStatement",
												"src": "902:26:0",
												"trueBody": {
													"expression": {
														"components": [
															{
																"hexValue": "66616c7365",
																"id": 23,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "919:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"hexValue": "30",
																"id": 24,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "926:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 25,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "918:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 13,
													"id": 26,
													"nodeType": "Return",
													"src": "912:16:0"
												}
											},
											{
												"expression": {
													"components": [
														{
															"hexValue": "74727565",
															"id": 28,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "945:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"id": 29,
															"name": "c",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 15,
															"src": "951:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 30,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "944:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 13,
												"id": 31,
												"nodeType": "Return",
												"src": "938:15:0"
											}
										]
									},
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "694:91:0",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag."
									},
									"id": 33,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "806:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "806:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "817:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "817:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "805:22:0"
									},
									"returnParameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 10,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "851:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 9,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "851:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 12,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "857:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 11,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "857:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "850:15:0"
									},
									"scope": 356,
									"src": "790:170:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 59,
										"nodeType": "Block",
										"src": "1140:73:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 45,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 38,
														"src": "1153:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 46,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 36,
														"src": "1157:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1153:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 52,
												"nodeType": "IfStatement",
												"src": "1150:27:0",
												"trueBody": {
													"expression": {
														"components": [
															{
																"hexValue": "66616c7365",
																"id": 48,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1168:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"hexValue": "30",
																"id": 49,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1175:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 50,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1167:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 44,
													"id": 51,
													"nodeType": "Return",
													"src": "1160:17:0"
												}
											},
											{
												"expression": {
													"components": [
														{
															"hexValue": "74727565",
															"id": 53,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1194:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 54,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 36,
																"src": "1200:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 55,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 38,
																"src": "1204:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1200:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 57,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1193:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 44,
												"id": 58,
												"nodeType": "Return",
												"src": "1187:19:0"
											}
										]
									},
									"documentation": {
										"id": 34,
										"nodeType": "StructuredDocumentation",
										"src": "966:95:0",
										"text": " @dev Returns the substraction of two unsigned integers, with an overflow flag."
									},
									"id": 60,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 36,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "1082:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 35,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1082:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "1093:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 37,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1093:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1081:22:0"
									},
									"returnParameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 41,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "1127:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 40,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1127:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "1132:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 42,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1132:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1126:14:0"
									},
									"scope": 356,
									"src": "1066:147:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 100,
										"nodeType": "Block",
										"src": "1395:345:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 74,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 72,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 63,
														"src": "1614:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 73,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1619:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1614:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 79,
												"nodeType": "IfStatement",
												"src": "1611:27:0",
												"trueBody": {
													"expression": {
														"components": [
															{
																"hexValue": "74727565",
																"id": 75,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1630:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															{
																"hexValue": "30",
																"id": 76,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1636:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 77,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1629:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 71,
													"id": 78,
													"nodeType": "Return",
													"src": "1622:16:0"
												}
											},
											{
												"assignments": [
													81
												],
												"declarations": [
													{
														"constant": false,
														"id": 81,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 100,
														"src": "1648:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 80,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1648:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 85,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 82,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 63,
														"src": "1660:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 83,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 65,
														"src": "1664:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1660:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1648:17:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 90,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 88,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 86,
															"name": "c",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 81,
															"src": "1678:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 87,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 63,
															"src": "1682:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1678:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 89,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 65,
														"src": "1687:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1678:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 95,
												"nodeType": "IfStatement",
												"src": "1675:32:0",
												"trueBody": {
													"expression": {
														"components": [
															{
																"hexValue": "66616c7365",
																"id": 91,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1698:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"hexValue": "30",
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1705:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 93,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1697:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 71,
													"id": 94,
													"nodeType": "Return",
													"src": "1690:17:0"
												}
											},
											{
												"expression": {
													"components": [
														{
															"hexValue": "74727565",
															"id": 96,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1725:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"id": 97,
															"name": "c",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 81,
															"src": "1731:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 98,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1724:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 71,
												"id": 99,
												"nodeType": "Return",
												"src": "1717:16:0"
											}
										]
									},
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "1219:97:0",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag."
									},
									"id": 101,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "1337:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 62,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1337:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "1348:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 64,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1348:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1336:22:0"
									},
									"returnParameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 68,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "1382:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 67,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1382:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "1387:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 69,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1387:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1381:14:0"
									},
									"scope": 356,
									"src": "1321:419:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 127,
										"nodeType": "Block",
										"src": "1923:75:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 115,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 113,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 106,
														"src": "1936:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 114,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1941:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1936:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "1933:28:0",
												"trueBody": {
													"expression": {
														"components": [
															{
																"hexValue": "66616c7365",
																"id": 116,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1952:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"hexValue": "30",
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1959:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 118,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1951:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 112,
													"id": 119,
													"nodeType": "Return",
													"src": "1944:17:0"
												}
											},
											{
												"expression": {
													"components": [
														{
															"hexValue": "74727565",
															"id": 121,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1979:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 124,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 122,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 104,
																"src": "1985:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 123,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 106,
																"src": "1989:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1985:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 125,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1978:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 112,
												"id": 126,
												"nodeType": "Return",
												"src": "1971:20:0"
											}
										]
									},
									"documentation": {
										"id": 102,
										"nodeType": "StructuredDocumentation",
										"src": "1746:98:0",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag."
									},
									"id": 128,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 107,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "1865:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 103,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1865:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 106,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "1876:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 105,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1876:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1864:22:0"
									},
									"returnParameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "1910:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 108,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1910:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 111,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "1915:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 110,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1915:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1909:14:0"
									},
									"scope": 356,
									"src": "1849:149:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 154,
										"nodeType": "Block",
										"src": "2191:75:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 140,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 133,
														"src": "2204:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 141,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2209:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2204:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 147,
												"nodeType": "IfStatement",
												"src": "2201:28:0",
												"trueBody": {
													"expression": {
														"components": [
															{
																"hexValue": "66616c7365",
																"id": 143,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2220:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"hexValue": "30",
																"id": 144,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2227:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 145,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2219:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 139,
													"id": 146,
													"nodeType": "Return",
													"src": "2212:17:0"
												}
											},
											{
												"expression": {
													"components": [
														{
															"hexValue": "74727565",
															"id": 148,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2247:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 151,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 149,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 131,
																"src": "2253:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 150,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 133,
																"src": "2257:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2253:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 152,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2246:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 139,
												"id": 153,
												"nodeType": "Return",
												"src": "2239:20:0"
											}
										]
									},
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "2004:108:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."
									},
									"id": 155,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 155,
												"src": "2133:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2133:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 155,
												"src": "2144:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2144:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2132:22:0"
									},
									"returnParameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 155,
												"src": "2178:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 135,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2178:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 155,
												"src": "2183:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 137,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2183:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2177:14:0"
									},
									"scope": 356,
									"src": "2117:149:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 182,
										"nodeType": "Block",
										"src": "2558:111:0",
										"statements": [
											{
												"assignments": [
													166
												],
												"declarations": [
													{
														"constant": false,
														"id": 166,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 182,
														"src": "2568:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 165,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2568:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 170,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 169,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 167,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 158,
														"src": "2580:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 168,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 160,
														"src": "2583:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2580:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2568:16:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 176,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 172,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 166,
																"src": "2602:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 175,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 173,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 158,
																	"src": "2607:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 174,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 160,
																	"src": "2611:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2607:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2602:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 177,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2614:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 171,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2594:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 178,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2594:50:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 179,
												"nodeType": "ExpressionStatement",
												"src": "2594:50:0"
											},
											{
												"expression": {
													"id": 180,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 166,
													"src": "2661:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 164,
												"id": 181,
												"nodeType": "Return",
												"src": "2654:8:0"
											}
										]
									},
									"documentation": {
										"id": 156,
										"nodeType": "StructuredDocumentation",
										"src": "2272:215:0",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 183,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 158,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "2505:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 157,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2505:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 160,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "2516:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 159,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2516:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2504:22:0"
									},
									"returnParameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "2550:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2550:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2549:9:0"
									},
									"scope": 356,
									"src": "2492:177:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 204,
										"nodeType": "Block",
										"src": "2997:88:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 196,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 194,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 188,
																"src": "3015:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 195,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 186,
																"src": "3020:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3015:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 197,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3023:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 193,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3007:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 198,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3007:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 199,
												"nodeType": "ExpressionStatement",
												"src": "3007:49:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 200,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 186,
														"src": "3073:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 201,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 188,
														"src": "3077:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3073:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 192,
												"id": 203,
												"nodeType": "Return",
												"src": "3066:12:0"
											}
										]
									},
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "2675:251:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 205,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "2944:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 185,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2944:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 188,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "2955:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 187,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2955:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2943:22:0"
									},
									"returnParameters": {
										"id": 192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 191,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "2989:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 190,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2989:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2988:9:0"
									},
									"scope": 356,
									"src": "2931:154:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 238,
										"nodeType": "Block",
										"src": "3390:148:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 215,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 208,
														"src": "3403:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 216,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3408:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3403:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 220,
												"nodeType": "IfStatement",
												"src": "3400:19:0",
												"trueBody": {
													"expression": {
														"hexValue": "30",
														"id": 218,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3418:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"functionReturnParameters": 214,
													"id": 219,
													"nodeType": "Return",
													"src": "3411:8:0"
												}
											},
											{
												"assignments": [
													222
												],
												"declarations": [
													{
														"constant": false,
														"id": 222,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 238,
														"src": "3429:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 221,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3429:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 226,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 223,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 208,
														"src": "3441:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 224,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 210,
														"src": "3445:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3441:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3429:17:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 232,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 230,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 228,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 222,
																	"src": "3464:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 229,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 208,
																	"src": "3468:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3464:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 231,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 210,
																"src": "3473:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3464:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 233,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3476:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 227,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3456:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3456:56:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 235,
												"nodeType": "ExpressionStatement",
												"src": "3456:56:0"
											},
											{
												"expression": {
													"id": 236,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 222,
													"src": "3530:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 214,
												"id": 237,
												"nodeType": "Return",
												"src": "3523:8:0"
											}
										]
									},
									"documentation": {
										"id": 206,
										"nodeType": "StructuredDocumentation",
										"src": "3091:227:0",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 239,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "3336:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3336:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "3347:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 209,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3347:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3335:22:0"
									},
									"returnParameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "3381:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3381:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3380:9:0"
									},
									"scope": 356,
									"src": "3323:215:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 260,
										"nodeType": "Block",
										"src": "4058:83:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 252,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 250,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 244,
																"src": "4076:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 251,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4080:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4076:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 253,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4083:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 249,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4068:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 254,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4068:44:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 255,
												"nodeType": "ExpressionStatement",
												"src": "4068:44:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 258,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 256,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 242,
														"src": "4129:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 257,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 244,
														"src": "4133:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4129:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 248,
												"id": 259,
												"nodeType": "Return",
												"src": "4122:12:0"
											}
										]
									},
									"documentation": {
										"id": 240,
										"nodeType": "StructuredDocumentation",
										"src": "3544:442:0",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 261,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "4004:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 244,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "4015:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 243,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4015:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:22:0"
									},
									"returnParameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "4049:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4049:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4048:9:0"
									},
									"scope": 356,
									"src": "3991:150:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 282,
										"nodeType": "Block",
										"src": "4650:81:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 274,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 272,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 266,
																"src": "4668:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 273,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4672:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4668:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 275,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4675:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 271,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4660:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4660:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 277,
												"nodeType": "ExpressionStatement",
												"src": "4660:42:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 280,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 278,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 264,
														"src": "4719:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 279,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 266,
														"src": "4723:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4719:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 270,
												"id": 281,
												"nodeType": "Return",
												"src": "4712:12:0"
											}
										]
									},
									"documentation": {
										"id": 262,
										"nodeType": "StructuredDocumentation",
										"src": "4147:431:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 283,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "4596:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 263,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4596:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "4607:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 265,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4607:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4595:22:0"
									},
									"returnParameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "4641:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4641:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4640:9:0"
									},
									"scope": 356,
									"src": "4583:148:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 306,
										"nodeType": "Block",
										"src": "5277:68:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 298,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 296,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 288,
																"src": "5295:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 297,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 286,
																"src": "5300:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5295:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 299,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 290,
															"src": "5303:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 295,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5287:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 300,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5287:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 301,
												"nodeType": "ExpressionStatement",
												"src": "5287:29:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 304,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 302,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 286,
														"src": "5333:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 303,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 288,
														"src": "5337:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5333:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 294,
												"id": 305,
												"nodeType": "Return",
												"src": "5326:12:0"
											}
										]
									},
									"documentation": {
										"id": 284,
										"nodeType": "StructuredDocumentation",
										"src": "4737:441:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 307,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 307,
												"src": "5196:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 285,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5196:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 307,
												"src": "5207:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 287,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5207:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 307,
												"src": "5218:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 289,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5218:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5195:50:0"
									},
									"returnParameters": {
										"id": 294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 293,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 307,
												"src": "5269:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 292,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5269:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5268:9:0"
									},
									"scope": 356,
									"src": "5183:162:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 330,
										"nodeType": "Block",
										"src": "6083:67:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 322,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 320,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 312,
																"src": "6101:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 321,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6105:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6101:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 323,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 314,
															"src": "6108:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 319,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6093:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 324,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6093:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 325,
												"nodeType": "ExpressionStatement",
												"src": "6093:28:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 326,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 310,
														"src": "6138:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 327,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 312,
														"src": "6142:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6138:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 318,
												"id": 329,
												"nodeType": "Return",
												"src": "6131:12:0"
											}
										]
									},
									"documentation": {
										"id": 308,
										"nodeType": "StructuredDocumentation",
										"src": "5351:632:0",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryDiv}.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 331,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 310,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 331,
												"src": "6001:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 309,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6001:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 331,
												"src": "6012:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 311,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6012:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 314,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 331,
												"src": "6023:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 313,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6023:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6000:50:0"
									},
									"returnParameters": {
										"id": 318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 317,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 331,
												"src": "6074:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 316,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6074:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6073:9:0"
									},
									"scope": 356,
									"src": "5988:162:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 354,
										"nodeType": "Block",
										"src": "6877:67:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 346,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 344,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 336,
																"src": "6895:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 345,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6899:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6895:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 347,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 338,
															"src": "6902:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 343,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6887:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 348,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6887:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 349,
												"nodeType": "ExpressionStatement",
												"src": "6887:28:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 352,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 350,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 334,
														"src": "6932:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 351,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 336,
														"src": "6936:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6932:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 342,
												"id": 353,
												"nodeType": "Return",
												"src": "6925:12:0"
											}
										]
									},
									"documentation": {
										"id": 332,
										"nodeType": "StructuredDocumentation",
										"src": "6156:621:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 355,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 334,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "6795:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 333,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6795:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 336,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "6806:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 335,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6806:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "6817:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 337,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6817:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6794:50:0"
									},
									"returnParameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "6868:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6868:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6867:9:0"
									},
									"scope": 356,
									"src": "6782:162:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1151,
							"src": "670:6276:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 357,
								"nodeType": "StructuredDocumentation",
								"src": "6948:68:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 432,
							"linearizedBaseContracts": [
								432
							],
							"name": "IERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 358,
										"nodeType": "StructuredDocumentation",
										"src": "7040:64:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 363,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7129:2:0"
									},
									"returnParameters": {
										"id": 362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 361,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "7155:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 360,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7155:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7154:9:0"
									},
									"scope": 432,
									"src": "7109:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "7169:70:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 371,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "7263:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 365,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7263:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7262:17:0"
									},
									"returnParameters": {
										"id": 370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 369,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "7303:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 368,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7303:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7302:9:0"
									},
									"scope": 432,
									"src": "7244:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 372,
										"nodeType": "StructuredDocumentation",
										"src": "7317:203:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 381,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 377,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "7543:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 373,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7543:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 376,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "7562:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 375,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7562:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7542:35:0"
									},
									"returnParameters": {
										"id": 380,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 379,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "7596:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 378,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7596:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7595:6:0"
									},
									"scope": 432,
									"src": "7525:77:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "7607:258:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 391,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 387,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 391,
												"src": "7889:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7889:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 391,
												"src": "7904:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7904:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7888:32:0"
									},
									"returnParameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 391,
												"src": "7944:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 388,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7944:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7943:9:0"
									},
									"scope": 432,
									"src": "7870:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 392,
										"nodeType": "StructuredDocumentation",
										"src": "7958:629:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 401,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 397,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 394,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "8609:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 393,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8609:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 396,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "8626:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 395,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8626:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8608:33:0"
									},
									"returnParameters": {
										"id": 400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 399,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "8660:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 398,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8660:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8659:6:0"
									},
									"scope": 432,
									"src": "8592:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 402,
										"nodeType": "StructuredDocumentation",
										"src": "8671:288:0",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 413,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 409,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 404,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "8986:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 403,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8986:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 406,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "9002:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 405,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9002:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 408,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "9021:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 407,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9021:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8985:51:0"
									},
									"returnParameters": {
										"id": 412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 411,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "9055:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 410,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9055:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9054:6:0"
									},
									"scope": 432,
									"src": "8964:97:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 414,
										"nodeType": "StructuredDocumentation",
										"src": "9066:153:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 422,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 416,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "9239:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 415,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9239:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 418,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "9261:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 417,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9261:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 420,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "9281:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 419,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9281:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9238:57:0"
									},
									"src": "9224:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 423,
										"nodeType": "StructuredDocumentation",
										"src": "9301:145:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 431,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 425,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "9466:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 424,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9466:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 427,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "9489:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 426,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9489:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 429,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "9514:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 428,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9514:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9465:63:0"
									},
									"src": "9451:78:0"
								}
							],
							"scope": 1151,
							"src": "7017:2514:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 453,
							"linearizedBaseContracts": [
								453
							],
							"name": "Context",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 440,
										"nodeType": "Block",
										"src": "10157:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 437,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "10174:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 438,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "10174:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 436,
												"id": 439,
												"nodeType": "Return",
												"src": "10167:17:0"
											}
										]
									},
									"id": 441,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 433,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10114:2:0"
									},
									"returnParameters": {
										"id": 436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 435,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 441,
												"src": "10140:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 434,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10140:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10139:17:0"
									},
									"scope": 453,
									"src": "10095:96:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 451,
										"nodeType": "Block",
										"src": "10253:138:0",
										"statements": [
											{
												"expression": {
													"id": 446,
													"name": "this",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 4294967268,
													"src": "10263:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Context_$453",
														"typeString": "contract Context"
													}
												},
												"id": 447,
												"nodeType": "ExpressionStatement",
												"src": "10263:4:0"
											},
											{
												"expression": {
													"expression": {
														"id": 448,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "10376:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "10376:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 445,
												"id": 450,
												"nodeType": "Return",
												"src": "10369:15:0"
											}
										]
									},
									"id": 452,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 442,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10213:2:0"
									},
									"returnParameters": {
										"id": 445,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 444,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "10239:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 443,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "10239:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10238:14:0"
									},
									"scope": 453,
									"src": "10196:195:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1151,
							"src": "10063:330:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 455,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 453,
										"src": "10955:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$453",
											"typeString": "contract Context"
										}
									},
									"id": 456,
									"nodeType": "InheritanceSpecifier",
									"src": "10955:7:0"
								}
							],
							"contractDependencies": [
								453
							],
							"contractKind": "contract",
							"documentation": {
								"id": 454,
								"nodeType": "StructuredDocumentation",
								"src": "10398:527:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 568,
							"linearizedBaseContracts": [
								568,
								453
							],
							"name": "Ownable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 458,
									"mutability": "mutable",
									"name": "_owner",
									"nodeType": "VariableDeclaration",
									"scope": 568,
									"src": "10969:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 457,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "10969:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 460,
									"mutability": "mutable",
									"name": "_newOwner",
									"nodeType": "VariableDeclaration",
									"scope": 568,
									"src": "10997:25:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 459,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "10997:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 466,
									"name": "OwnershipTransferred",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 462,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nodeType": "VariableDeclaration",
												"scope": 466,
												"src": "11055:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 461,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11055:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 464,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 466,
												"src": "11086:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 463,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11086:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11054:57:0"
									},
									"src": "11028:84:0"
								},
								{
									"body": {
										"id": 487,
										"nodeType": "Block",
										"src": "11226:135:0",
										"statements": [
											{
												"assignments": [
													471
												],
												"declarations": [
													{
														"constant": false,
														"id": 471,
														"mutability": "mutable",
														"name": "msgSender",
														"nodeType": "VariableDeclaration",
														"scope": 487,
														"src": "11236:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 470,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "11236:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 474,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 472,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 441,
														"src": "11256:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
															"typeString": "function () view returns (address payable)"
														}
													},
													"id": 473,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11256:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11236:32:0"
											},
											{
												"expression": {
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 475,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "11278:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 476,
														"name": "msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 471,
														"src": "11287:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11278:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 478,
												"nodeType": "ExpressionStatement",
												"src": "11278:18:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 482,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11340:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 481,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11332:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 480,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11332:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 483,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11332:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 484,
															"name": "msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 471,
															"src": "11344:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 479,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 466,
														"src": "11311:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 485,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11311:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 486,
												"nodeType": "EmitStatement",
												"src": "11306:48:0"
											}
										]
									},
									"documentation": {
										"id": 467,
										"nodeType": "StructuredDocumentation",
										"src": "11117:89:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 488,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 468,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11223:2:0"
									},
									"returnParameters": {
										"id": 469,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11226:0:0"
									},
									"scope": 568,
									"src": "11211:150:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 496,
										"nodeType": "Block",
										"src": "11482:30:0",
										"statements": [
											{
												"expression": {
													"id": 494,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 458,
													"src": "11499:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 493,
												"id": 495,
												"nodeType": "Return",
												"src": "11492:13:0"
											}
										]
									},
									"documentation": {
										"id": 489,
										"nodeType": "StructuredDocumentation",
										"src": "11367:63:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 497,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11449:2:0"
									},
									"returnParameters": {
										"id": 493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 492,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "11473:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 491,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11473:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11472:9:0"
									},
									"scope": 568,
									"src": "11435:77:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 510,
										"nodeType": "Block",
										"src": "11619:88:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 505,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 501,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 497,
																	"src": "11633:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 502,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11633:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 503,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 441,
																	"src": "11644:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																		"typeString": "function () view returns (address payable)"
																	}
																},
																"id": 504,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11644:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "11633:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 506,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11658:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 500,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11625:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 507,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11625:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 508,
												"nodeType": "ExpressionStatement",
												"src": "11625:68:0"
											},
											{
												"id": 509,
												"nodeType": "PlaceholderStatement",
												"src": "11699:1:0"
											}
										]
									},
									"documentation": {
										"id": 498,
										"nodeType": "StructuredDocumentation",
										"src": "11518:75:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 511,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 499,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11616:2:0"
									},
									"src": "11598:109:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 543,
										"nodeType": "Block",
										"src": "11947:247:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 519,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 516,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 441,
																	"src": "11965:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																		"typeString": "function () view returns (address payable)"
																	}
																},
																"id": 517,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11965:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 518,
																"name": "_newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 460,
																"src": "11981:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11965:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206f6e6c79206e6577206f776e65722063616e20616363657074206f776e657273686970",
															"id": 520,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11992:46:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f7737555abf4f07fa9a8e7458b0ba564ac4d7d05336cdbec0c72ad29c2541514",
																"typeString": "literal_string \"Ownable: only new owner can accept ownership\""
															},
															"value": "Ownable: only new owner can accept ownership"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f7737555abf4f07fa9a8e7458b0ba564ac4d7d05336cdbec0c72ad29c2541514",
																"typeString": "literal_string \"Ownable: only new owner can accept ownership\""
															}
														],
														"id": 515,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11957:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11957:82:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 522,
												"nodeType": "ExpressionStatement",
												"src": "11957:82:0"
											},
											{
												"assignments": [
													524
												],
												"declarations": [
													{
														"constant": false,
														"id": 524,
														"mutability": "mutable",
														"name": "oldOwner",
														"nodeType": "VariableDeclaration",
														"scope": 543,
														"src": "12049:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 523,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "12049:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 526,
												"initialValue": {
													"id": 525,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 458,
													"src": "12068:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12049:25:0"
											},
											{
												"expression": {
													"id": 529,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 527,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "12084:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 528,
														"name": "_newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 460,
														"src": "12093:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12084:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 530,
												"nodeType": "ExpressionStatement",
												"src": "12084:18:0"
											},
											{
												"expression": {
													"id": 536,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 531,
														"name": "_newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 460,
														"src": "12112:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 534,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12132:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 533,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12124:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 532,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12124:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 535,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12124:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "12112:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 537,
												"nodeType": "ExpressionStatement",
												"src": "12112:22:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 539,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 524,
															"src": "12170:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 540,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 458,
															"src": "12180:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 538,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 466,
														"src": "12149:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 541,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12149:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 542,
												"nodeType": "EmitStatement",
												"src": "12144:43:0"
											}
										]
									},
									"documentation": {
										"id": 512,
										"nodeType": "StructuredDocumentation",
										"src": "11713:195:0",
										"text": " @dev Accept the ownership transfer. This is to make sure that the contract is\n transferred to a working address\n Can only be called by the newly transfered owner."
									},
									"functionSelector": "79ba5097",
									"id": 544,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "acceptOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 513,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11937:2:0"
									},
									"returnParameters": {
										"id": 514,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11947:0:0"
									},
									"scope": 568,
									"src": "11913:281:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 566,
										"nodeType": "Block",
										"src": "12407:120:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 558,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 553,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 547,
																"src": "12425:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 556,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12445:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 555,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "12437:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 554,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "12437:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 557,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12437:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "12425:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 559,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12449:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 552,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12417:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 560,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12417:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 561,
												"nodeType": "ExpressionStatement",
												"src": "12417:73:0"
											},
											{
												"expression": {
													"id": 564,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 562,
														"name": "_newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 460,
														"src": "12500:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 563,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 547,
														"src": "12512:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12500:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 565,
												"nodeType": "ExpressionStatement",
												"src": "12500:20:0"
											}
										]
									},
									"documentation": {
										"id": 545,
										"nodeType": "StructuredDocumentation",
										"src": "12199:141:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 567,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 550,
											"modifierName": {
												"id": 549,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 511,
												"src": "12397:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "12397:9:0"
										}
									],
									"name": "transferOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 548,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "12372:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 546,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12372:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12371:18:0"
									},
									"returnParameters": {
										"id": 551,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12407:0:0"
									},
									"scope": 568,
									"src": "12345:182:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1151,
							"src": "10926:1603:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 570,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 453,
										"src": "13696:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$453",
											"typeString": "contract Context"
										}
									},
									"id": 571,
									"nodeType": "InheritanceSpecifier",
									"src": "13696:7:0"
								},
								{
									"baseName": {
										"id": 572,
										"name": "Ownable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 568,
										"src": "13705:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Ownable_$568",
											"typeString": "contract Ownable"
										}
									},
									"id": 573,
									"nodeType": "InheritanceSpecifier",
									"src": "13705:7:0"
								},
								{
									"baseName": {
										"id": 574,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 432,
										"src": "13714:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$432",
											"typeString": "contract IERC20"
										}
									},
									"id": 575,
									"nodeType": "InheritanceSpecifier",
									"src": "13714:6:0"
								}
							],
							"contractDependencies": [
								432,
								453,
								568
							],
							"contractKind": "contract",
							"documentation": {
								"id": 569,
								"nodeType": "StructuredDocumentation",
								"src": "12531:1139:0",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin guidelines: functions revert instead\n of returning `false` on failure. This behavior is nonetheless conventional\n and does not conflict with the expectations of ERC20 applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
							},
							"fullyImplemented": true,
							"id": 1150,
							"linearizedBaseContracts": [
								1150,
								432,
								568,
								453
							],
							"name": "PoddleTokens",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 578,
									"libraryName": {
										"id": 576,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 356,
										"src": "13733:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$356",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "13727:27:0",
									"typeName": {
										"id": 577,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "13746:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 582,
									"mutability": "mutable",
									"name": "_balances",
									"nodeType": "VariableDeclaration",
									"scope": 1150,
									"src": "13760:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 581,
										"keyType": {
											"id": 579,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "13768:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "13760:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 580,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "13779:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 588,
									"mutability": "mutable",
									"name": "_allowances",
									"nodeType": "VariableDeclaration",
									"scope": 1150,
									"src": "13812:67:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 587,
										"keyType": {
											"id": 583,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "13820:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "13812:47:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 586,
											"keyType": {
												"id": 584,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "13839:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "13831:27:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 585,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "13850:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 590,
									"mutability": "mutable",
									"name": "_maxSupply",
									"nodeType": "VariableDeclaration",
									"scope": 1150,
									"src": "13886:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 589,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "13886:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 592,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nodeType": "VariableDeclaration",
									"scope": 1150,
									"src": "13918:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 591,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "13918:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 594,
									"mutability": "mutable",
									"name": "_name",
									"nodeType": "VariableDeclaration",
									"scope": 1150,
									"src": "13953:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 593,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "13953:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 596,
									"mutability": "mutable",
									"name": "_symbol",
									"nodeType": "VariableDeclaration",
									"scope": 1150,
									"src": "13979:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 595,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "13979:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 598,
									"mutability": "mutable",
									"name": "_decimals",
									"nodeType": "VariableDeclaration",
									"scope": 1150,
									"src": "14007:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 597,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "14007:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 629,
										"nodeType": "Block",
										"src": "14363:181:0",
										"statements": [
											{
												"assignments": [
													603
												],
												"declarations": [
													{
														"constant": false,
														"id": 603,
														"mutability": "mutable",
														"name": "fractions",
														"nodeType": "VariableDeclaration",
														"scope": 629,
														"src": "14373:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 602,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "14373:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 610,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 609,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "3130",
														"id": 604,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "14393:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"nodeType": "BinaryOperation",
													"operator": "**",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "3138",
																"id": 607,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14407:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_18_by_1",
																	"typeString": "int_const 18"
																},
																"value": "18"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_18_by_1",
																	"typeString": "int_const 18"
																}
															],
															"id": 606,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "14399:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 605,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "14399:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 608,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "14399:11:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14393:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14373:37:0"
											},
											{
												"expression": {
													"id": 613,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 611,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 594,
														"src": "14420:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "506f64646c6520546f6b656e73",
														"id": 612,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "14428:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_bad454488ee2654ad7f09417b0b43c76f62db1be3fdbd4b07cdc8bbb901b3885",
															"typeString": "literal_string \"Poddle Tokens\""
														},
														"value": "Poddle Tokens"
													},
													"src": "14420:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 614,
												"nodeType": "ExpressionStatement",
												"src": "14420:23:0"
											},
											{
												"expression": {
													"id": 617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 615,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 596,
														"src": "14453:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "504454",
														"id": 616,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "14463:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_bcb19820ba23d236a8f81e2ddf543f6788617c18bf0de921dd6f0962b94b1a8e",
															"typeString": "literal_string \"PDT\""
														},
														"value": "PDT"
													},
													"src": "14453:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 618,
												"nodeType": "ExpressionStatement",
												"src": "14453:15:0"
											},
											{
												"expression": {
													"id": 621,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 619,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 598,
														"src": "14478:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "3138",
														"id": 620,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "14490:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_18_by_1",
															"typeString": "int_const 18"
														},
														"value": "18"
													},
													"src": "14478:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 622,
												"nodeType": "ExpressionStatement",
												"src": "14478:14:0"
											},
											{
												"expression": {
													"id": 627,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 623,
														"name": "_maxSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 590,
														"src": "14502:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 626,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "31303030303030303030",
															"id": 624,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14515:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000_by_1",
																"typeString": "int_const 1000000000"
															},
															"value": "1000000000"
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 625,
															"name": "fractions",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 603,
															"src": "14528:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "14515:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14502:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 628,
												"nodeType": "ExpressionStatement",
												"src": "14502:35:0"
											}
										]
									},
									"documentation": {
										"id": 599,
										"nodeType": "StructuredDocumentation",
										"src": "14041:302:0",
										"text": " @dev Sets the values for {name} and {symbol}, initializes {decimals} with\n a default value of 18\n To select a different value for {decimals}, use {_setupDecimals}.\n All three of these values are immutable: they can only be set once during\n construction."
									},
									"id": 630,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 600,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14360:2:0"
									},
									"returnParameters": {
										"id": 601,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14363:0:0"
									},
									"scope": 1150,
									"src": "14349:195:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 638,
										"nodeType": "Block",
										"src": "14659:29:0",
										"statements": [
											{
												"expression": {
													"id": 636,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 594,
													"src": "14676:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 635,
												"id": 637,
												"nodeType": "Return",
												"src": "14669:12:0"
											}
										]
									},
									"documentation": {
										"id": 631,
										"nodeType": "StructuredDocumentation",
										"src": "14550:52:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 639,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 632,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14620:2:0"
									},
									"returnParameters": {
										"id": 635,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 634,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "14644:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 633,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "14644:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14643:15:0"
									},
									"scope": 1150,
									"src": "14607:81:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 647,
										"nodeType": "Block",
										"src": "14851:31:0",
										"statements": [
											{
												"expression": {
													"id": 645,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 596,
													"src": "14868:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 644,
												"id": 646,
												"nodeType": "Return",
												"src": "14861:14:0"
											}
										]
									},
									"documentation": {
										"id": 640,
										"nodeType": "StructuredDocumentation",
										"src": "14694:99:0",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 648,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 641,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14813:2:0"
									},
									"returnParameters": {
										"id": 644,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 643,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 648,
												"src": "14837:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 642,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "14837:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14836:15:0"
									},
									"scope": 1150,
									"src": "14798:84:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 656,
										"nodeType": "Block",
										"src": "15541:33:0",
										"statements": [
											{
												"expression": {
													"id": 654,
													"name": "_decimals",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 598,
													"src": "15558:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 653,
												"id": 655,
												"nodeType": "Return",
												"src": "15551:16:0"
											}
										]
									},
									"documentation": {
										"id": 649,
										"nodeType": "StructuredDocumentation",
										"src": "14888:600:0",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5,05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is\n called.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 657,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 650,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15510:2:0"
									},
									"returnParameters": {
										"id": 653,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 652,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "15534:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 651,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "15534:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15533:7:0"
									},
									"scope": 1150,
									"src": "15493:81:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										363
									],
									"body": {
										"id": 666,
										"nodeType": "Block",
										"src": "15694:36:0",
										"statements": [
											{
												"expression": {
													"id": 664,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 592,
													"src": "15711:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 663,
												"id": 665,
												"nodeType": "Return",
												"src": "15704:19:0"
											}
										]
									},
									"documentation": {
										"id": 658,
										"nodeType": "StructuredDocumentation",
										"src": "15580:47:0",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 667,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 660,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "15667:8:0"
									},
									"parameters": {
										"id": 659,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15652:2:0"
									},
									"returnParameters": {
										"id": 663,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 662,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 667,
												"src": "15685:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 661,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15685:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15684:9:0"
									},
									"scope": 1150,
									"src": "15632:98:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										371
									],
									"body": {
										"id": 680,
										"nodeType": "Block",
										"src": "15860:42:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 676,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 582,
														"src": "15877:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 678,
													"indexExpression": {
														"id": 677,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 670,
														"src": "15887:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "15877:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 675,
												"id": 679,
												"nodeType": "Return",
												"src": "15870:25:0"
											}
										]
									},
									"documentation": {
										"id": 668,
										"nodeType": "StructuredDocumentation",
										"src": "15736:45:0",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 681,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 672,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "15834:8:0"
									},
									"parameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 670,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 681,
												"src": "15805:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 669,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15805:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15804:17:0"
									},
									"returnParameters": {
										"id": 675,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 674,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 681,
												"src": "15852:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 673,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15852:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15851:9:0"
									},
									"scope": 1150,
									"src": "15786:116:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										381
									],
									"body": {
										"id": 701,
										"nodeType": "Block",
										"src": "16182:80:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 693,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 441,
																"src": "16202:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 694,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16202:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 695,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 684,
															"src": "16216:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 696,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 686,
															"src": "16227:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 692,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 964,
														"src": "16192:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 697,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16192:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 698,
												"nodeType": "ExpressionStatement",
												"src": "16192:42:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 699,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "16251:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 691,
												"id": 700,
												"nodeType": "Return",
												"src": "16244:11:0"
											}
										]
									},
									"documentation": {
										"id": 682,
										"nodeType": "StructuredDocumentation",
										"src": "15909:185:0",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `recipient` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 702,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 688,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "16159:8:0"
									},
									"parameters": {
										"id": 687,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "16117:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 683,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16117:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 686,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "16136:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 685,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16136:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16116:35:0"
									},
									"returnParameters": {
										"id": 691,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 690,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "16177:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 689,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "16177:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16176:6:0"
									},
									"scope": 1150,
									"src": "16099:163:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										391
									],
									"body": {
										"id": 719,
										"nodeType": "Block",
										"src": "16411:51:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 713,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 588,
															"src": "16428:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 715,
														"indexExpression": {
															"id": 714,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 705,
															"src": "16440:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "16428:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 717,
													"indexExpression": {
														"id": 716,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 707,
														"src": "16447:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "16428:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 712,
												"id": 718,
												"nodeType": "Return",
												"src": "16421:34:0"
											}
										]
									},
									"documentation": {
										"id": 703,
										"nodeType": "StructuredDocumentation",
										"src": "16272:45:0",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 720,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 709,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "16385:8:0"
									},
									"parameters": {
										"id": 708,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 705,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 720,
												"src": "16341:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 704,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16341:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 707,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 720,
												"src": "16356:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 706,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16356:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16340:32:0"
									},
									"returnParameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 720,
												"src": "16403:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 710,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16403:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16402:9:0"
									},
									"scope": 1150,
									"src": "16322:140:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										401
									],
									"body": {
										"id": 740,
										"nodeType": "Block",
										"src": "16675:76:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 732,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 441,
																"src": "16694:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 733,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16694:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 734,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 723,
															"src": "16707:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 735,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 725,
															"src": "16716:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 731,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1129,
														"src": "16685:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 736,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16685:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 737,
												"nodeType": "ExpressionStatement",
												"src": "16685:38:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 738,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "16740:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 730,
												"id": 739,
												"nodeType": "Return",
												"src": "16733:11:0"
											}
										]
									},
									"documentation": {
										"id": 721,
										"nodeType": "StructuredDocumentation",
										"src": "16468:121:0",
										"text": " @dev See {IERC20-approve}.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 741,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 727,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "16651:8:0"
									},
									"parameters": {
										"id": 726,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 741,
												"src": "16611:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 722,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16611:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 725,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 741,
												"src": "16628:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 724,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16628:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16610:33:0"
									},
									"returnParameters": {
										"id": 730,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 729,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 741,
												"src": "16669:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 728,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "16669:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16668:6:0"
									},
									"scope": 1150,
									"src": "16594:157:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										413
									],
									"body": {
										"id": 778,
										"nodeType": "Block",
										"src": "17309:184:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 755,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 744,
															"src": "17329:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 756,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 746,
															"src": "17336:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 757,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 748,
															"src": "17346:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 754,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 964,
														"src": "17319:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 758,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17319:34:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 759,
												"nodeType": "ExpressionStatement",
												"src": "17319:34:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 761,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 744,
															"src": "17372:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 762,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 441,
																"src": "17380:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 763,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17380:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"arguments": [
																{
																	"id": 771,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 748,
																	"src": "17432:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "45524332303a207472616e7366657220616d6f756e74",
																	"id": 772,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "17439:24:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_724756a07ce66c6c9d077eca9c622cb2479940d43c1fabe7c4e784cc8f19f471",
																		"typeString": "literal_string \"ERC20: transfer amount\""
																	},
																	"value": "ERC20: transfer amount"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_724756a07ce66c6c9d077eca9c622cb2479940d43c1fabe7c4e784cc8f19f471",
																		"typeString": "literal_string \"ERC20: transfer amount\""
																	}
																],
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 764,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 588,
																			"src": "17394:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 766,
																		"indexExpression": {
																			"id": 765,
																			"name": "sender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 744,
																			"src": "17406:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "17394:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 769,
																	"indexExpression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 767,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 441,
																			"src": "17414:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																				"typeString": "function () view returns (address payable)"
																			}
																		},
																		"id": 768,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17414:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "17394:33:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 770,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 307,
																"src": "17394:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 773,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17394:70:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 760,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1129,
														"src": "17363:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 774,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17363:102:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 775,
												"nodeType": "ExpressionStatement",
												"src": "17363:102:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 776,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "17482:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 753,
												"id": 777,
												"nodeType": "Return",
												"src": "17475:11:0"
											}
										]
									},
									"documentation": {
										"id": 742,
										"nodeType": "StructuredDocumentation",
										"src": "16757:444:0",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n Requirements:\n - `sender` and `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`.\n - the caller must have allowance for ``sender``'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 779,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 750,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "17286:8:0"
									},
									"parameters": {
										"id": 749,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 744,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 779,
												"src": "17228:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 743,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17228:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 779,
												"src": "17244:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 745,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17244:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 748,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 779,
												"src": "17263:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 747,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17263:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17227:51:0"
									},
									"returnParameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 779,
												"src": "17304:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 751,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "17304:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17303:6:0"
									},
									"scope": 1150,
									"src": "17206:287:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 806,
										"nodeType": "Block",
										"src": "17963:121:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 790,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 441,
																"src": "17982:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 791,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17982:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 792,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 782,
															"src": "17996:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 800,
																	"name": "addedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 784,
																	"src": "18044:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 793,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 588,
																			"src": "18005:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 796,
																		"indexExpression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 794,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 441,
																				"src": "18017:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																					"typeString": "function () view returns (address payable)"
																				}
																			},
																			"id": 795,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "18017:12:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "18005:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 798,
																	"indexExpression": {
																		"id": 797,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 782,
																		"src": "18031:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "18005:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 799,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "add",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 183,
																"src": "18005:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 801,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18005:50:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 789,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1129,
														"src": "17973:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 802,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17973:83:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 803,
												"nodeType": "ExpressionStatement",
												"src": "17973:83:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 804,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "18073:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 788,
												"id": 805,
												"nodeType": "Return",
												"src": "18066:11:0"
											}
										]
									},
									"documentation": {
										"id": 780,
										"nodeType": "StructuredDocumentation",
										"src": "17499:373:0",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 807,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 785,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 782,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 807,
												"src": "17904:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 781,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17904:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 784,
												"mutability": "mutable",
												"name": "addedValue",
												"nodeType": "VariableDeclaration",
												"scope": 807,
												"src": "17921:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 783,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17921:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17903:37:0"
									},
									"returnParameters": {
										"id": 788,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 787,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 807,
												"src": "17957:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 786,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "17957:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17956:6:0"
									},
									"scope": 1150,
									"src": "17877:207:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 835,
										"nodeType": "Block",
										"src": "18644:164:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 818,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 441,
																"src": "18663:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 819,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18663:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 820,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 810,
															"src": "18677:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 828,
																	"name": "addedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 812,
																	"src": "18725:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "45524332303a20646563726561736520616d6f756e74206578636565647320616c6c6f77616e6365",
																	"id": 829,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18736:42:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_76ef47d3cac10bdd88984936fbabf838a95158c824f2256c2b05b83385232484",
																		"typeString": "literal_string \"ERC20: decrease amount exceeds allowance\""
																	},
																	"value": "ERC20: decrease amount exceeds allowance"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_76ef47d3cac10bdd88984936fbabf838a95158c824f2256c2b05b83385232484",
																		"typeString": "literal_string \"ERC20: decrease amount exceeds allowance\""
																	}
																],
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 821,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 588,
																			"src": "18686:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 824,
																		"indexExpression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 822,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 441,
																				"src": "18698:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																					"typeString": "function () view returns (address payable)"
																				}
																			},
																			"id": 823,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "18698:12:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "18686:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 826,
																	"indexExpression": {
																		"id": 825,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 810,
																		"src": "18712:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "18686:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 827,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 307,
																"src": "18686:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 830,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18686:93:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 817,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1129,
														"src": "18654:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 831,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18654:126:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 832,
												"nodeType": "ExpressionStatement",
												"src": "18654:126:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 833,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "18797:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 816,
												"id": 834,
												"nodeType": "Return",
												"src": "18790:11:0"
											}
										]
									},
									"documentation": {
										"id": 808,
										"nodeType": "StructuredDocumentation",
										"src": "18090:463:0",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 836,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 813,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 810,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 836,
												"src": "18585:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 809,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18585:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 812,
												"mutability": "mutable",
												"name": "addedValue",
												"nodeType": "VariableDeclaration",
												"scope": 836,
												"src": "18602:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 811,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18602:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18584:37:0"
									},
									"returnParameters": {
										"id": 816,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 815,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 836,
												"src": "18638:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 814,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "18638:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18637:6:0"
									},
									"scope": 1150,
									"src": "18558:250:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 851,
										"nodeType": "Block",
										"src": "19034:38:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 847,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 839,
															"src": "19050:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 848,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 841,
															"src": "19058:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 846,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1028,
														"src": "19044:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 849,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19044:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 850,
												"nodeType": "ExpressionStatement",
												"src": "19044:21:0"
											}
										]
									},
									"documentation": {
										"id": 837,
										"nodeType": "StructuredDocumentation",
										"src": "18814:151:0",
										"text": " @dev Issues `amount` tokens to the designated `address`.\n Can only be called by the current owner.\n See {ERC20-_mint}."
									},
									"functionSelector": "40c10f19",
									"id": 852,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 844,
											"modifierName": {
												"id": 843,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 511,
												"src": "19024:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "19024:9:0"
										}
									],
									"name": "mint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 842,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 852,
												"src": "18984:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 838,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18984:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 841,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 852,
												"src": "19001:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 840,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19001:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18983:33:0"
									},
									"returnParameters": {
										"id": 845,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19034:0:0"
									},
									"scope": 1150,
									"src": "18970:102:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 864,
										"nodeType": "Block",
										"src": "19214:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 859,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 441,
																"src": "19230:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 860,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19230:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 861,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 855,
															"src": "19243:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 858,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1084,
														"src": "19224:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 862,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19224:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 863,
												"nodeType": "ExpressionStatement",
												"src": "19224:26:0"
											}
										]
									},
									"documentation": {
										"id": 853,
										"nodeType": "StructuredDocumentation",
										"src": "19078:94:0",
										"text": " @dev Destroys `amount` tokens from the caller.\n See {ERC20-_burn}."
									},
									"functionSelector": "42966c68",
									"id": 865,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 856,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 855,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 865,
												"src": "19191:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 854,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19191:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19190:16:0"
									},
									"returnParameters": {
										"id": 857,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19214:0:0"
									},
									"scope": 1150,
									"src": "19177:80:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 897,
										"nodeType": "Block",
										"src": "19611:212:0",
										"statements": [
											{
												"assignments": [
													874
												],
												"declarations": [
													{
														"constant": false,
														"id": 874,
														"mutability": "mutable",
														"name": "_decreaseAllowance",
														"nodeType": "VariableDeclaration",
														"scope": 897,
														"src": "19621:26:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 873,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "19621:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 884,
												"initialValue": {
													"arguments": [
														{
															"id": 881,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 870,
															"src": "19687:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "45524332303a204275726e20616d6f756e7420657863757465",
															"id": 882,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19694:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_318e16e10f921a02d34d30dab286c104f33a5346033d79037f71662b95cca7af",
																"typeString": "literal_string \"ERC20: Burn amount excute\""
															},
															"value": "ERC20: Burn amount excute"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_318e16e10f921a02d34d30dab286c104f33a5346033d79037f71662b95cca7af",
																"typeString": "literal_string \"ERC20: Burn amount excute\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 876,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 868,
																	"src": "19660:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 877,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 441,
																		"src": "19669:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																			"typeString": "function () view returns (address payable)"
																		}
																	},
																	"id": 878,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "19669:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																],
																"id": 875,
																"name": "allowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 720,
																"src": "19650:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view returns (uint256)"
																}
															},
															"id": 879,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19650:32:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 880,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 307,
														"src": "19650:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 883,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19650:72:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "19621:101:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 886,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 868,
															"src": "19742:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 887,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 441,
																"src": "19751:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 888,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19751:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 889,
															"name": "_decreaseAllowance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 874,
															"src": "19765:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 885,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1129,
														"src": "19733:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 890,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19733:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 891,
												"nodeType": "ExpressionStatement",
												"src": "19733:51:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 893,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 868,
															"src": "19800:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 894,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 870,
															"src": "19809:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 892,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1084,
														"src": "19794:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 895,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19794:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 896,
												"nodeType": "ExpressionStatement",
												"src": "19794:22:0"
											}
										]
									},
									"documentation": {
										"id": 866,
										"nodeType": "StructuredDocumentation",
										"src": "19263:285:0",
										"text": " @dev Destroys `amount` tokens from `account`, deducting from the caller's\n allowance.\n See {ERC20-_burn} and {ERC20-allowance}.\n Requirements:\n - the caller must have allowance for ``accounts``'s tokens of at least\n `amount`."
									},
									"functionSelector": "79cc6790",
									"id": 898,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burnFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 871,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 868,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 898,
												"src": "19571:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 867,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19571:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 870,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 898,
												"src": "19588:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 869,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19588:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19570:33:0"
									},
									"returnParameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19611:0:0"
									},
									"scope": 1150,
									"src": "19553:270:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 963,
										"nodeType": "Block",
										"src": "20362:431:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 914,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 909,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 901,
																"src": "20380:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 912,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "20398:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 911,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "20390:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 910,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "20390:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 913,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20390:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "20380:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e736665722066726f6d207a65726f2061646472657373",
															"id": 915,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "20402:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_367728d6f44731c16c559c0217fff6d163e627732494d917a99a19fd59fa9611",
																"typeString": "literal_string \"ERC20: transfer from zero address\""
															},
															"value": "ERC20: transfer from zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_367728d6f44731c16c559c0217fff6d163e627732494d917a99a19fd59fa9611",
																"typeString": "literal_string \"ERC20: transfer from zero address\""
															}
														],
														"id": 908,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "20372:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 916,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20372:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 917,
												"nodeType": "ExpressionStatement",
												"src": "20372:66:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 924,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 919,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 903,
																"src": "20456:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 922,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "20477:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 921,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "20469:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 920,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "20469:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 923,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20469:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "20456:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220746f207a65726f2061646472657373",
															"id": 925,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "20481:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_593b493ab8c2bec350c206dc58fc75ffac084af98edec4f38464690d86293c00",
																"typeString": "literal_string \"ERC20: transfer to zero address\""
															},
															"value": "ERC20: transfer to zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_593b493ab8c2bec350c206dc58fc75ffac084af98edec4f38464690d86293c00",
																"typeString": "literal_string \"ERC20: transfer to zero address\""
															}
														],
														"id": 918,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "20448:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 926,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20448:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 927,
												"nodeType": "ExpressionStatement",
												"src": "20448:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 929,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 901,
															"src": "20547:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 930,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 903,
															"src": "20554:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 931,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 905,
															"src": "20564:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 928,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1139,
														"src": "20526:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 932,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20526:45:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 933,
												"nodeType": "ExpressionStatement",
												"src": "20526:45:0"
											},
											{
												"expression": {
													"id": 944,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 934,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 582,
															"src": "20582:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 936,
														"indexExpression": {
															"id": 935,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 901,
															"src": "20592:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "20582:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 941,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 905,
																"src": "20624:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
																"id": 942,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "20631:40:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																	"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
																},
																"value": "ERC20: transfer amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																	"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 937,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 582,
																	"src": "20602:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 939,
																"indexExpression": {
																	"id": 938,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 901,
																	"src": "20612:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "20602:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 940,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 307,
															"src": "20602:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 943,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20602:70:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "20582:90:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 945,
												"nodeType": "ExpressionStatement",
												"src": "20582:90:0"
											},
											{
												"expression": {
													"id": 955,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 946,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 582,
															"src": "20682:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 948,
														"indexExpression": {
															"id": 947,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 903,
															"src": "20692:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "20682:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 953,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 905,
																"src": "20730:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 949,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 582,
																	"src": "20705:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 951,
																"indexExpression": {
																	"id": 950,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 903,
																	"src": "20715:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "20705:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 952,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 183,
															"src": "20705:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 954,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20705:32:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "20682:55:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 956,
												"nodeType": "ExpressionStatement",
												"src": "20682:55:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 958,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 901,
															"src": "20761:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 959,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 903,
															"src": "20768:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 960,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 905,
															"src": "20779:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 957,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 422,
														"src": "20752:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 961,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20752:34:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 962,
												"nodeType": "EmitStatement",
												"src": "20747:39:0"
											}
										]
									},
									"documentation": {
										"id": 899,
										"nodeType": "StructuredDocumentation",
										"src": "19829:450:0",
										"text": " @dev Moves tokens `amount` from `sender` to `recipient`.\n This is internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `sender` cannot be the zero address.\n - `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`."
									},
									"id": 964,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 906,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 901,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 964,
												"src": "20303:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 900,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20303:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 903,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 964,
												"src": "20319:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 902,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20319:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 905,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 964,
												"src": "20338:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 904,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20338:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20302:51:0"
									},
									"returnParameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20362:0:0"
									},
									"scope": 1150,
									"src": "20284:509:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1027,
										"nodeType": "Block",
										"src": "21113:392:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 978,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 973,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 967,
																"src": "21131:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 976,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "21150:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 975,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "21142:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 974,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "21142:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 977,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21142:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "21131:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206d696e7420746f207a65726f2061646472657373",
															"id": 979,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "21153:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e113fea833addeedbbf29d3829405b1df3b17ee299374cb40250907aaf43d107",
																"typeString": "literal_string \"ERC20: mint to zero address\""
															},
															"value": "ERC20: mint to zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e113fea833addeedbbf29d3829405b1df3b17ee299374cb40250907aaf43d107",
																"typeString": "literal_string \"ERC20: mint to zero address\""
															}
														],
														"id": 972,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "21123:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 980,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21123:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 981,
												"nodeType": "ExpressionStatement",
												"src": "21123:60:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 987,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 985,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 983,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 592,
																	"src": "21201:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 984,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 969,
																	"src": "21216:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "21201:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 986,
																"name": "_maxSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 590,
																"src": "21226:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "21201:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206d696e7420616d6f756e742065786365656473206d617820737570706c79",
															"id": 988,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "21238:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6bf41de9cf55d9f78df11038d6f93de2fb046c6c44aecc2c46b28a24d62dde23",
																"typeString": "literal_string \"ERC20: mint amount exceeds max supply\""
															},
															"value": "ERC20: mint amount exceeds max supply"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6bf41de9cf55d9f78df11038d6f93de2fb046c6c44aecc2c46b28a24d62dde23",
																"typeString": "literal_string \"ERC20: mint amount exceeds max supply\""
															}
														],
														"id": 982,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "21193:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 989,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21193:85:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 990,
												"nodeType": "ExpressionStatement",
												"src": "21193:85:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 994,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "21318:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 993,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "21310:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 992,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "21310:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 995,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21310:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 996,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 967,
															"src": "21321:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 997,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 969,
															"src": "21330:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 991,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1139,
														"src": "21289:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 998,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21289:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 999,
												"nodeType": "ExpressionStatement",
												"src": "21289:48:0"
											},
											{
												"expression": {
													"id": 1005,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1000,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 592,
														"src": "21348:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1003,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 969,
																"src": "21380:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1001,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 592,
																"src": "21363:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1002,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 183,
															"src": "21363:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1004,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "21363:24:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "21348:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1006,
												"nodeType": "ExpressionStatement",
												"src": "21348:39:0"
											},
											{
												"expression": {
													"id": 1016,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1007,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 582,
															"src": "21397:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1009,
														"indexExpression": {
															"id": 1008,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 967,
															"src": "21407:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "21397:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1014,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 969,
																"src": "21441:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 1010,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 582,
																	"src": "21418:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1012,
																"indexExpression": {
																	"id": 1011,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 967,
																	"src": "21428:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "21418:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1013,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 183,
															"src": "21418:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1015,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "21418:30:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "21397:51:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1017,
												"nodeType": "ExpressionStatement",
												"src": "21397:51:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1021,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "21480:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1020,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "21472:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1019,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "21472:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1022,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21472:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 1023,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 967,
															"src": "21483:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1024,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 969,
															"src": "21491:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1018,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 422,
														"src": "21463:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1025,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21463:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1026,
												"nodeType": "EmitStatement",
												"src": "21458:40:0"
											}
										]
									},
									"documentation": {
										"id": 965,
										"nodeType": "StructuredDocumentation",
										"src": "20799:252:0",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `to` cannot be the zero address."
									},
									"id": 1028,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 970,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 967,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 1028,
												"src": "21071:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 966,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21071:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 969,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1028,
												"src": "21088:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 968,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21088:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21070:33:0"
									},
									"returnParameters": {
										"id": 971,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21113:0:0"
									},
									"scope": 1150,
									"src": "21056:449:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1083,
										"nodeType": "Block",
										"src": "21871:340:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1042,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1037,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1031,
																"src": "21889:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1040,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "21908:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1039,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "21900:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1038,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "21900:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1041,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21900:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "21889:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 1043,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "21912:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 1036,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "21881:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1044,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21881:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1045,
												"nodeType": "ExpressionStatement",
												"src": "21881:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1047,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1031,
															"src": "21980:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1050,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "21996:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1049,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "21988:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1048,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "21988:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1051,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21988:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 1052,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1033,
															"src": "21999:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1046,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1139,
														"src": "21959:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1053,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21959:47:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1054,
												"nodeType": "ExpressionStatement",
												"src": "21959:47:0"
											},
											{
												"expression": {
													"id": 1065,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1055,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 582,
															"src": "22017:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1057,
														"indexExpression": {
															"id": 1056,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1031,
															"src": "22027:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "22017:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1062,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1033,
																"src": "22061:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
																"id": 1063,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "22068:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																	"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
																},
																"value": "ERC20: burn amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																	"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 1058,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 582,
																	"src": "22038:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1060,
																"indexExpression": {
																	"id": 1059,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1031,
																	"src": "22048:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "22038:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1061,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 307,
															"src": "22038:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 1064,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "22038:67:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "22017:88:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1066,
												"nodeType": "ExpressionStatement",
												"src": "22017:88:0"
											},
											{
												"expression": {
													"id": 1072,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1067,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 592,
														"src": "22115:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1070,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1033,
																"src": "22147:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1068,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 592,
																"src": "22130:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1069,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 205,
															"src": "22130:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1071,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "22130:24:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "22115:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1073,
												"nodeType": "ExpressionStatement",
												"src": "22115:39:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1075,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1031,
															"src": "22178:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1078,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22194:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1077,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "22186:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1076,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "22186:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1079,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "22186:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 1080,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1033,
															"src": "22197:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1074,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 422,
														"src": "22169:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1081,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22169:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1082,
												"nodeType": "EmitStatement",
												"src": "22164:40:0"
											}
										]
									},
									"documentation": {
										"id": 1029,
										"nodeType": "StructuredDocumentation",
										"src": "21511:299:0",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 1084,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1034,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1031,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 1084,
												"src": "21830:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1030,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21830:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1033,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1084,
												"src": "21847:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1032,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21847:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21829:33:0"
									},
									"returnParameters": {
										"id": 1035,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21871:0:0"
									},
									"scope": 1150,
									"src": "21815:396:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1128,
										"nodeType": "Block",
										"src": "22701:257:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1100,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1095,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1087,
																"src": "22719:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1098,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "22736:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1097,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "22728:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1096,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "22728:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1099,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "22728:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "22719:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 1101,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "22740:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 1094,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "22711:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22711:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1103,
												"nodeType": "ExpressionStatement",
												"src": "22711:68:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1110,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1105,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1089,
																"src": "22797:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1108,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "22816:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1107,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "22808:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1106,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "22808:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "22808:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "22797:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 1111,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "22820:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 1104,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "22789:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22789:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1113,
												"nodeType": "ExpressionStatement",
												"src": "22789:68:0"
											},
											{
												"expression": {
													"id": 1120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1114,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 588,
																"src": "22868:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1117,
															"indexExpression": {
																"id": 1115,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1087,
																"src": "22880:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "22868:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1118,
														"indexExpression": {
															"id": 1116,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1089,
															"src": "22887:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "22868:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1119,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1091,
														"src": "22898:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "22868:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1121,
												"nodeType": "ExpressionStatement",
												"src": "22868:36:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1123,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1087,
															"src": "22928:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1124,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1089,
															"src": "22935:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1125,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1091,
															"src": "22944:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1122,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 431,
														"src": "22919:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1126,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22919:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1127,
												"nodeType": "EmitStatement",
												"src": "22914:37:0"
											}
										]
									},
									"documentation": {
										"id": 1085,
										"nodeType": "StructuredDocumentation",
										"src": "22221:400:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 1129,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1092,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1087,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1129,
												"src": "22644:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1086,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22644:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1089,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1129,
												"src": "22659:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1088,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22659:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1091,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1129,
												"src": "22676:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1090,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22676:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22643:48:0"
									},
									"returnParameters": {
										"id": 1093,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22701:0:0"
									},
									"scope": 1150,
									"src": "22626:332:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1138,
										"nodeType": "Block",
										"src": "23046:2:0",
										"statements": []
									},
									"id": 1139,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1131,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 1139,
												"src": "22995:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1130,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22995:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1133,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1139,
												"src": "23009:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23009:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1135,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1139,
												"src": "23021:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1134,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23021:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22994:42:0"
									},
									"returnParameters": {
										"id": 1137,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23046:0:0"
									},
									"scope": 1150,
									"src": "22965:83:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1148,
										"nodeType": "Block",
										"src": "23134:2:0",
										"statements": []
									},
									"id": 1149,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1141,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 1149,
												"src": "23083:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1140,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23083:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1143,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1149,
												"src": "23097:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1142,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23097:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1145,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1149,
												"src": "23109:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1144,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23109:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23082:42:0"
									},
									"returnParameters": {
										"id": 1147,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23134:0:0"
									},
									"scope": 1150,
									"src": "23054:82:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1151,
							"src": "13671:9467:0"
						}
					],
					"src": "33:23107:0"
				},
				"id": 0
			}
		}
	}
}