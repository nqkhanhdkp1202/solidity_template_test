{
	"id": "798eacf7b7a474942cc03a5ce903d220",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Error.sol": {
				"content": "pragma solidity ^0.8.17;\n\ncontract Error {\n    \n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/Error.sol": {
				"Error": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Error.sol\":26:49  contract Error {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Error.sol\":26:49  contract Error {... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220a41ff3db65ce0f9695286df832bd598a7cfbd57dfa009920974a92c5d924a1f564736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea2646970667358221220a41ff3db65ce0f9695286df832bd598a7cfbd57dfa009920974a92c5d924a1f564736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG4 0x1F RETURN 0xDB PUSH6 0xCE0F9695286D 0xF8 ORIGIN 0xBD MSIZE DUP11 PUSH29 0xFBD57DFA009920974A92C5D924A1F564736F6C63430008110033000000 ",
							"sourceMap": "26:23:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea2646970667358221220a41ff3db65ce0f9695286df832bd598a7cfbd57dfa009920974a92c5d924a1f564736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG4 0x1F RETURN 0xDB PUSH6 0xCE0F9695286D 0xF8 ORIGIN 0xBD MSIZE DUP11 PUSH29 0xFBD57DFA009920974A92C5D924A1F564736F6C63430008110033000000 ",
							"sourceMap": "26:23:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 26,
									"end": 49,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 26,
									"end": 49,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 26,
									"end": 49,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 26,
									"end": 49,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 26,
									"end": 49,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 26,
									"end": 49,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 26,
									"end": 49,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 26,
									"end": 49,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 26,
									"end": 49,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26,
									"end": 49,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 26,
									"end": 49,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 26,
									"end": 49,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 26,
									"end": 49,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 26,
									"end": 49,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 26,
									"end": 49,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 26,
									"end": 49,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 26,
									"end": 49,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 26,
									"end": 49,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26,
									"end": 49,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 26,
									"end": 49,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26,
									"end": 49,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a41ff3db65ce0f9695286df832bd598a7cfbd57dfa009920974a92c5d924a1f564736f6c63430008110033",
									".code": [
										{
											"begin": 26,
											"end": 49,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 26,
											"end": 49,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26,
											"end": 49,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26,
											"end": 49,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26,
											"end": 49,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26,
											"end": 49,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"contracts/Error.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Error.sol\":\"Error\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Error.sol\":{\"keccak256\":\"0x78d965b161c4cf3bf2c10c36502d1030841e08d85ee91b0338b766127ef2a3d0\",\"urls\":[\"bzz-raw://62c04cc9c8a6326c400ee7b95cb0ea97008f797bbce47f96a1a409b96fe0cbb0\",\"dweb:/ipfs/Qmaqgvn5T7K7Sgs1xMWPd1S3MQbQ8bYUpYRA7nVj8GEJMR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/Error.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/Error.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/Error.sol": {
				"ast": {
					"absolutePath": "contracts/Error.sol",
					"exportedSymbols": {
						"Error": [
							2
						]
					},
					"id": 3,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Error",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2,
							"linearizedBaseContracts": [
								2
							],
							"name": "Error",
							"nameLocation": "35:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 3,
							"src": "26:23:0",
							"usedErrors": []
						}
					],
					"src": "0:49:0"
				},
				"id": 0
			}
		}
	}
}